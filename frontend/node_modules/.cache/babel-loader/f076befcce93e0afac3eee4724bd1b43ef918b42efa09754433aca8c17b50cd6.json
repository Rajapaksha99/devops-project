{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst TerminalPage = () => {\n  _s();\n  var _connectionData$sessi;\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionData, setConnectionData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\n  const terminalRef = useRef();\n  const terminalInstance = useRef();\n  const socketRef = useRef();\n  const getStoredUserData = useCallback(() => {\n    try {\n      const userData = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (userData) {\n        const user = JSON.parse(userData);\n        return {\n          token: token || '',\n          userId: user.id || '',\n          userEmail: user.email || '',\n          userName: user.name || '',\n          registeredId: user.registered_id || '',\n          userRole: user.role || 'student'\n        };\n      }\n    } catch (err) {\n      console.warn(\"Could not retrieve stored user data:\", err);\n    }\n    return {};\n  }, []);\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\n    if (!socketInstance || !data) {\n      console.error(\"Missing socket instance or connection data\");\n      return;\n    }\n\n    // Enhanced connection data to send to backend\n    const sshConnectionData = {\n      // Server connection details\n      host: data.host,\n      username: data.username,\n      password: data.password,\n      port: data.port || 22,\n      // User information for session tracking\n      user: {\n        id: data.userId,\n        name: data.userName,\n        email: data.userEmail,\n        registered_id: data.registeredId,\n        role: data.userRole\n      },\n      // Session metadata\n      session: {\n        id: data.sessionId,\n        token: data.token,\n        connectionTime: data.connectionTime,\n        serverName: data.serverName,\n        dashboardUrl: data.dashboardUrl\n      },\n      // Browser context\n      browser: {\n        userAgent: data.browserInfo || navigator.userAgent,\n        windowId: window.name,\n        referrer: document.referrer\n      }\n    };\n\n    // Display connection attempt info\n    term.write(`🔗 Establishing SSH connection...\\r\\n`);\n    term.write(`📡 Target: ${data.serverName || 'Server'} (${data.host})\\r\\n`);\n    term.write(`👤 Student: ${data.userName || 'Unknown'}\\r\\n`);\n    term.write(`🆔 ID: ${data.registeredId || 'N/A'}\\r\\n`);\n    term.write(`⏳ Please wait...\\r\\n\\r\\n`);\n\n    // Send connection request with enhanced data (try both events for compatibility)\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\n\n    // Also send user activity tracking\n    socketInstance.emit(\"user-activity\", {\n      type: 'terminal_access',\n      userId: data.userId,\n      userName: data.userName,\n      action: 'ssh_connect_attempt',\n      target: data.host,\n      timestamp: new Date().toISOString(),\n      sessionId: data.sessionId\n    });\n  }, []);\n  const cleanupConnection = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    if (terminalInstance.current) {\n      terminalInstance.current.dispose();\n    }\n\n    // Clean up any remaining session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n  }, []);\n  const initializeTerminal = useCallback(data => {\n    setConnectionStatus(\"connecting\");\n\n    // Initialize Socket.IO with more connection options\n    const newSocket = io(SERVER_URL, {\n      query: {\n        userId: data.userId || '',\n        userName: data.userName || '',\n        userRole: data.userRole || 'student'\n      },\n      timeout: 10000,\n      forceNew: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    socketRef.current = newSocket;\n\n    // Initialize Terminal\n    const term = new Terminal({\n      cursorBlink: true,\n      theme: {\n        background: '#1e1e1e',\n        foreground: '#ffffff',\n        cursor: '#ffffff',\n        selection: '#ffffff40',\n        black: '#000000',\n        red: '#e74c3c',\n        green: '#2ecc71',\n        yellow: '#f1c40f',\n        blue: '#3498db',\n        magenta: '#9b59b6',\n        cyan: '#1abc9c',\n        white: '#ecf0f1'\n      },\n      fontSize: 14,\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n      rows: 30,\n      cols: 120,\n      scrollback: 1000\n    });\n    if (terminalRef.current) {\n      term.open(terminalRef.current);\n      terminalInstance.current = term;\n    }\n\n    // Socket event listeners\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to terminal server\");\n      setIsConnected(true);\n      setConnectionStatus(\"connected\");\n      term.write(`\\r\\n✅ Socket connected to ${SERVER_URL}\\r\\n`);\n\n      // Auto-connect to SSH server after a short delay\n      setTimeout(() => {\n        connectToSSHServer(newSocket, data, term);\n      }, 500);\n    });\n    newSocket.on(\"ssh-output\", outputData => {\n      if (term) {\n        term.write(outputData);\n      }\n    });\n    newSocket.on(\"ssh-connected\", info => {\n      setConnectionStatus(\"ssh-connected\");\n      term.write(`\\r\\n✅ Successfully connected to ${info.host}\\r\\n`);\n      term.write(`📊 Session ID: ${data.sessionId || 'N/A'}\\r\\n`);\n      term.write(`👤 User: ${data.userName || 'Unknown'} (${data.registeredId || 'No ID'})\\r\\n`);\n      term.write(`🖥️  Server: ${data.serverName || data.host}\\r\\n`);\n      term.write(`⏰ Connected at: ${new Date().toLocaleString()}\\r\\n`);\n      term.write(`${'='.repeat(60)}\\r\\n\\r\\n`);\n      setError(\"\"); // Clear any previous errors\n    });\n    newSocket.on(\"ssh-error\", errorData => {\n      const errorMsg = errorData.message || errorData;\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorMsg}\\r\\n`);\n      term.write(`\\r\\n🔄 Retrying connection in 3 seconds...\\r\\n`);\n      setConnectionStatus(\"error\");\n      setError(errorMsg);\n\n      // Auto-retry connection after 3 seconds\n      setTimeout(() => {\n        if (socketRef.current && connectionData) {\n          connectToSSHServer(socketRef.current, data, term);\n        }\n      }, 3000);\n    });\n    newSocket.on(\"ssh-disconnected\", () => {\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\n      setConnectionStatus(\"disconnected\");\n      setIsConnected(false);\n    });\n    newSocket.on(\"disconnect\", reason => {\n      setIsConnected(false);\n      setConnectionStatus(\"disconnected\");\n      term.write(`\\r\\n[Socket disconnected: ${reason}]\\r\\n`);\n\n      // Try to reconnect if not manually disconnected\n      if (reason !== 'io client disconnect') {\n        setTimeout(() => {\n          if (socketRef.current && !socketRef.current.connected) {\n            term.write(`\\r\\n🔄 Attempting to reconnect...\\r\\n`);\n            socketRef.current.connect();\n          }\n        }, 2000);\n      }\n    });\n    newSocket.on(\"connect_error\", err => {\n      const errorMsg = `Connection error: ${err.message}`;\n      setError(errorMsg);\n      setConnectionStatus(\"error\");\n      term.write(`\\r\\n❌ ${errorMsg}\\r\\n`);\n      term.write(`\\r\\n💡 Make sure your backend server is running on ${SERVER_URL}\\r\\n`);\n    });\n\n    // Terminal input handler\n    term.onData(input => {\n      if (newSocket && newSocket.connected) {\n        newSocket.emit(\"ssh-input\", input);\n      }\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      if (term && term.element) {\n        // Use fit addon if available, otherwise manual resize\n        try {\n          term.fit();\n        } catch (fitError) {\n          // Fallback resize logic\n          const cols = Math.floor(terminalRef.current.clientWidth / 9);\n          const rows = Math.floor(terminalRef.current.clientHeight / 17);\n          term.resize(cols, rows);\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [connectToSSHServer]);\n  const initializeConnection = useCallback(() => {\n    try {\n      // Method 1: Try to get data from URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      let data = null;\n\n      // Check for sessionKey method first (more secure)\n      const sessionKey = urlParams.get('sessionKey');\n      if (sessionKey) {\n        const sessionData = sessionStorage.getItem(sessionKey);\n        if (sessionData) {\n          data = JSON.parse(sessionData);\n          // Clean up session data after use\n          sessionStorage.removeItem(sessionKey);\n        }\n      }\n\n      // Fallback to direct URL data\n      if (!data) {\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\n        if (urlData) {\n          data = JSON.parse(decodeURIComponent(urlData));\n        }\n      }\n\n      // Method 2: Try old format for backward compatibility\n      if (!data) {\n        const host = urlParams.get('host');\n        const username = urlParams.get('username');\n        const password = urlParams.get('password');\n        const serverName = urlParams.get('serverName');\n        const token = urlParams.get('token');\n        const userId = urlParams.get('userId');\n        if (host && username && password) {\n          data = {\n            host,\n            username,\n            password,\n            serverName,\n            token,\n            userId,\n            // Try to get additional user data from localStorage\n            ...getStoredUserData()\n          };\n        }\n      }\n\n      // Method 3: Try sessionStorage fallback\n      if (!data) {\n        const stored = sessionStorage.getItem('terminalConnection');\n        if (stored) {\n          data = JSON.parse(stored);\n        }\n      }\n      if (data) {\n        setConnectionData(data);\n        initializeTerminal(data);\n      } else {\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error initializing connection:\", err);\n      setError(\"Failed to initialize connection data\");\n    }\n  }, [getStoredUserData, initializeTerminal]);\n  useEffect(() => {\n    initializeConnection();\n\n    // Listen for data from parent window via postMessage\n    const handleMessage = event => {\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\n        setConnectionData(event.data.data);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n      cleanupConnection();\n    };\n  }, [initializeConnection, cleanupConnection]);\n  const handleDisconnect = () => {\n    if (socketRef.current) {\n      // Send user disconnection info\n      socketRef.current.emit(\"user-disconnect\", {\n        userId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userId,\n        userName: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userName,\n        sessionId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.sessionId,\n        disconnectTime: new Date().toISOString(),\n        disconnectReason: 'user_initiated'\n      });\n      socketRef.current.disconnect();\n    }\n    cleanupConnection();\n    window.close();\n  };\n  const handleReconnect = () => {\n    if (connectionData) {\n      setError(\"\");\n      setConnectionStatus(\"reconnecting\");\n      if (terminalInstance.current) {\n        terminalInstance.current.clear();\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\n      }\n\n      // Reinitialize the entire connection\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      setTimeout(() => {\n        initializeTerminal(connectionData);\n      }, 1000);\n    }\n  };\n  const handleNewSession = () => {\n    if (terminalInstance.current) {\n      terminalInstance.current.clear();\n    }\n    if (socketRef.current && connectionData) {\n      // Create new session ID for tracking\n      const newSessionData = {\n        ...connectionData,\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        connectionTime: new Date().toISOString()\n      };\n      setConnectionData(newSessionData);\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\n    }\n  };\n  const handleNewTerminal = () => {\n    handleNewSession();\n  };\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case \"connected\":\n      case \"ssh-connected\":\n        return \"#2ecc71\";\n      case \"connecting\":\n      case \"reconnecting\":\n        return \"#f39c12\";\n      case \"error\":\n        return \"#e74c3c\";\n      default:\n        return \"#95a5a6\";\n    }\n  };\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case \"initializing\":\n        return \"Initializing...\";\n      case \"connecting\":\n        return \"Connecting...\";\n      case \"connected\":\n        return \"Socket Connected\";\n      case \"ssh-connected\":\n        return \"SSH Connected\";\n      case \"reconnecting\":\n        return \"Reconnecting...\";\n      case \"disconnected\":\n        return \"Disconnected\";\n      case \"error\":\n        return \"Connection Error\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  // Get user display info (support both old and new data formats)\n  const getUserDisplayInfo = () => {\n    if (!connectionData) return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A'\n    };\n\n    // New format\n    if (connectionData.userName) {\n      return {\n        name: connectionData.userName,\n        id: connectionData.registeredId || 'N/A',\n        email: connectionData.userEmail || 'N/A',\n        role: connectionData.userRole || 'student'\n      };\n    }\n\n    // Old format\n    if (connectionData.user_data) {\n      return {\n        name: connectionData.user_data.name || 'Unknown',\n        id: connectionData.user_data.registered_id || 'N/A',\n        email: connectionData.user_data.email || 'N/A',\n        role: connectionData.user_data.role || 'student'\n      };\n    }\n    return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A',\n      role: 'student'\n    };\n  };\n  if (error && !connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Terminal Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            fontSize: '14px',\n            color: '#95a5a6'\n          },\n          children: \"Please return to the dashboard and try connecting again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.close(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: \"Close Window\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this);\n  }\n  if (!connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Loading Terminal...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: \"Initializing connection data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReconnect,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#3498db',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px'\n            },\n            children: \"\\uD83D\\uDD04 Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this);\n  }\n  const userInfo = getUserDisplayInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#2c3e50'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px 20px',\n        backgroundColor: '#34495e',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '2px solid #2c3e50',\n        minHeight: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: 0,\n              fontSize: '18px',\n              fontWeight: 'bold'\n            },\n            children: [\"\\uD83D\\uDDA5\\uFE0F \", (connectionData === null || connectionData === void 0 ? void 0 : connectionData.serverName) || (connectionData === null || connectionData === void 0 ? void 0 : connectionData.host) || \"Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px',\n              padding: '4px 8px',\n              backgroundColor: getStatusColor(),\n              borderRadius: '12px',\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '8px',\n                height: '8px',\n                borderRadius: '50%',\n                backgroundColor: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            color: '#bdc3c7',\n            marginTop: '4px'\n          },\n          children: [\"\\uD83D\\uDC64 \", userInfo.name, userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`, userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`, connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [(connectionStatus === \"error\" || connectionStatus === \"disconnected\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#f39c12',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83D\\uDD04 Reconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewTerminal,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83C\\uDD95 New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\u274C Disconnect & Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), connectionData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#2c3e50',\n        color: '#ecf0f1',\n        fontSize: '12px',\n        borderBottom: '1px solid #34495e'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83C\\uDF10 Server: \", connectionData.host, \" | \\uD83D\\uDC65 Role: \", userInfo.role, \" | \\uD83D\\uDD11 Session: \", ((_connectionData$sessi = connectionData.sessionId) === null || _connectionData$sessi === void 0 ? void 0 : _connectionData$sessi.substr(-8)) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connectionData.connectionTime && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected: \", new Date(connectionData.connectionTime).toLocaleTimeString()]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '4px 20px',\n        backgroundColor: '#1a252f',\n        color: '#95a5a6',\n        fontSize: '11px',\n        borderBottom: '1px solid #34495e'\n      },\n      children: [\"\\uD83D\\uDD0D Debug: Socket URL: \", SERVER_URL, \" | Status: \", connectionStatus, \" | Connected: \", isConnected ? 'Yes' : 'No', \" |\", error && `Error: ${error}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        flex: 1,\n        padding: '0',\n        backgroundColor: '#1e1e1e',\n        overflow: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#34495e',\n        color: '#bdc3c7',\n        fontSize: '11px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e74c3c'\n          },\n          children: [\"\\u274C Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userInfo.name !== 'Unknown' && `Logged in as: ${userInfo.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"EdaXqLmurXlZhJk5oxEf9DBOdA4=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","Terminal","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","TerminalPage","_s","_connectionData$sessi","isConnected","setIsConnected","connectionData","setConnectionData","error","setError","connectionStatus","setConnectionStatus","terminalRef","terminalInstance","socketRef","getStoredUserData","userData","localStorage","getItem","token","user","JSON","parse","userId","id","userEmail","email","userName","name","registeredId","registered_id","userRole","role","err","console","warn","connectToSSHServer","socketInstance","data","term","sshConnectionData","host","username","password","port","session","sessionId","connectionTime","serverName","dashboardUrl","browser","userAgent","browserInfo","navigator","windowId","window","referrer","document","write","emit","type","action","target","timestamp","Date","toISOString","cleanupConnection","current","disconnect","dispose","Object","keys","sessionStorage","forEach","key","startsWith","removeItem","initializeTerminal","newSocket","query","timeout","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","cursorBlink","theme","background","foreground","cursor","selection","black","red","green","yellow","blue","magenta","cyan","white","fontSize","fontFamily","rows","cols","scrollback","open","on","log","setTimeout","outputData","info","toLocaleString","repeat","errorData","errorMsg","message","reason","connected","connect","onData","input","handleResize","element","fit","fitError","Math","floor","clientWidth","clientHeight","resize","addEventListener","removeEventListener","initializeConnection","urlParams","URLSearchParams","location","search","sessionKey","get","sessionData","urlData","decodeURIComponent","stored","handleMessage","event","handleDisconnect","disconnectTime","disconnectReason","close","handleReconnect","clear","handleNewSession","newSessionData","now","random","toString","substr","handleNewTerminal","getStatusColor","getStatusText","getUserDisplayInfo","user_data","style","height","display","alignItems","justifyContent","backgroundColor","color","children","textAlign","padding","borderRadius","maxWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","onClick","border","marginTop","userInfo","flexDirection","borderBottom","minHeight","flex","gap","fontWeight","width","toLocaleTimeString","ref","overflow","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst TerminalPage = () => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\r\n  const terminalRef = useRef();\r\n  const terminalInstance = useRef();\r\n  const socketRef = useRef();\r\n\r\n  const getStoredUserData = useCallback(() => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        return {\r\n          token: token || '',\r\n          userId: user.id || '',\r\n          userEmail: user.email || '',\r\n          userName: user.name || '',\r\n          registeredId: user.registered_id || '',\r\n          userRole: user.role || 'student'\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.warn(\"Could not retrieve stored user data:\", err);\r\n    }\r\n    return {};\r\n  }, []);\r\n\r\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\r\n    if (!socketInstance || !data) {\r\n      console.error(\"Missing socket instance or connection data\");\r\n      return;\r\n    }\r\n\r\n    // Enhanced connection data to send to backend\r\n    const sshConnectionData = {\r\n      // Server connection details\r\n      host: data.host,\r\n      username: data.username,\r\n      password: data.password,\r\n      port: data.port || 22,\r\n      \r\n      // User information for session tracking\r\n      user: {\r\n        id: data.userId,\r\n        name: data.userName,\r\n        email: data.userEmail,\r\n        registered_id: data.registeredId,\r\n        role: data.userRole\r\n      },\r\n      \r\n      // Session metadata\r\n      session: {\r\n        id: data.sessionId,\r\n        token: data.token,\r\n        connectionTime: data.connectionTime,\r\n        serverName: data.serverName,\r\n        dashboardUrl: data.dashboardUrl\r\n      },\r\n      \r\n      // Browser context\r\n      browser: {\r\n        userAgent: data.browserInfo || navigator.userAgent,\r\n        windowId: window.name,\r\n        referrer: document.referrer\r\n      }\r\n    };\r\n\r\n    // Display connection attempt info\r\n    term.write(`🔗 Establishing SSH connection...\\r\\n`);\r\n    term.write(`📡 Target: ${data.serverName || 'Server'} (${data.host})\\r\\n`);\r\n    term.write(`👤 Student: ${data.userName || 'Unknown'}\\r\\n`);\r\n    term.write(`🆔 ID: ${data.registeredId || 'N/A'}\\r\\n`);\r\n    term.write(`⏳ Please wait...\\r\\n\\r\\n`);\r\n\r\n    // Send connection request with enhanced data (try both events for compatibility)\r\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\r\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\r\n    \r\n    // Also send user activity tracking\r\n    socketInstance.emit(\"user-activity\", {\r\n      type: 'terminal_access',\r\n      userId: data.userId,\r\n      userName: data.userName,\r\n      action: 'ssh_connect_attempt',\r\n      target: data.host,\r\n      timestamp: new Date().toISOString(),\r\n      sessionId: data.sessionId\r\n    });\r\n  }, []);\r\n\r\n  const cleanupConnection = useCallback(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    if (terminalInstance.current) {\r\n      terminalInstance.current.dispose();\r\n    }\r\n    \r\n    // Clean up any remaining session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const initializeTerminal = useCallback((data) => {\r\n    setConnectionStatus(\"connecting\");\r\n    \r\n    // Initialize Socket.IO with more connection options\r\n    const newSocket = io(SERVER_URL, {\r\n      query: {\r\n        userId: data.userId || '',\r\n        userName: data.userName || '',\r\n        userRole: data.userRole || 'student'\r\n      },\r\n      timeout: 10000,\r\n      forceNew: true,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000\r\n    });\r\n    \r\n    socketRef.current = newSocket;\r\n\r\n    // Initialize Terminal\r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      theme: {\r\n        background: '#1e1e1e',\r\n        foreground: '#ffffff',\r\n        cursor: '#ffffff',\r\n        selection: '#ffffff40',\r\n        black: '#000000',\r\n        red: '#e74c3c',\r\n        green: '#2ecc71',\r\n        yellow: '#f1c40f',\r\n        blue: '#3498db',\r\n        magenta: '#9b59b6',\r\n        cyan: '#1abc9c',\r\n        white: '#ecf0f1'\r\n      },\r\n      fontSize: 14,\r\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n      rows: 30,\r\n      cols: 120,\r\n      scrollback: 1000\r\n    });\r\n\r\n    if (terminalRef.current) {\r\n      term.open(terminalRef.current);\r\n      terminalInstance.current = term;\r\n    }\r\n\r\n    // Socket event listeners\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to terminal server\");\r\n      setIsConnected(true);\r\n      setConnectionStatus(\"connected\");\r\n      term.write(`\\r\\n✅ Socket connected to ${SERVER_URL}\\r\\n`);\r\n      \r\n      // Auto-connect to SSH server after a short delay\r\n      setTimeout(() => {\r\n        connectToSSHServer(newSocket, data, term);\r\n      }, 500);\r\n    });\r\n\r\n    newSocket.on(\"ssh-output\", (outputData) => {\r\n      if (term) {\r\n        term.write(outputData);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"ssh-connected\", (info) => {\r\n      setConnectionStatus(\"ssh-connected\");\r\n      term.write(`\\r\\n✅ Successfully connected to ${info.host}\\r\\n`);\r\n      term.write(`📊 Session ID: ${data.sessionId || 'N/A'}\\r\\n`);\r\n      term.write(`👤 User: ${data.userName || 'Unknown'} (${data.registeredId || 'No ID'})\\r\\n`);\r\n      term.write(`🖥️  Server: ${data.serverName || data.host}\\r\\n`);\r\n      term.write(`⏰ Connected at: ${new Date().toLocaleString()}\\r\\n`);\r\n      term.write(`${'='.repeat(60)}\\r\\n\\r\\n`);\r\n      setError(\"\"); // Clear any previous errors\r\n    });\r\n\r\n    newSocket.on(\"ssh-error\", (errorData) => {\r\n      const errorMsg = errorData.message || errorData;\r\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorMsg}\\r\\n`);\r\n      term.write(`\\r\\n🔄 Retrying connection in 3 seconds...\\r\\n`);\r\n      setConnectionStatus(\"error\");\r\n      setError(errorMsg);\r\n      \r\n      // Auto-retry connection after 3 seconds\r\n      setTimeout(() => {\r\n        if (socketRef.current && connectionData) {\r\n          connectToSSHServer(socketRef.current, data, term);\r\n        }\r\n      }, 3000);\r\n    });\r\n\r\n    newSocket.on(\"ssh-disconnected\", () => {\r\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\r\n      setConnectionStatus(\"disconnected\");\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      setIsConnected(false);\r\n      setConnectionStatus(\"disconnected\");\r\n      term.write(`\\r\\n[Socket disconnected: ${reason}]\\r\\n`);\r\n      \r\n      // Try to reconnect if not manually disconnected\r\n      if (reason !== 'io client disconnect') {\r\n        setTimeout(() => {\r\n          if (socketRef.current && !socketRef.current.connected) {\r\n            term.write(`\\r\\n🔄 Attempting to reconnect...\\r\\n`);\r\n            socketRef.current.connect();\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"connect_error\", (err) => {\r\n      const errorMsg = `Connection error: ${err.message}`;\r\n      setError(errorMsg);\r\n      setConnectionStatus(\"error\");\r\n      term.write(`\\r\\n❌ ${errorMsg}\\r\\n`);\r\n      term.write(`\\r\\n💡 Make sure your backend server is running on ${SERVER_URL}\\r\\n`);\r\n    });\r\n\r\n    // Terminal input handler\r\n    term.onData((input) => {\r\n      if (newSocket && newSocket.connected) {\r\n        newSocket.emit(\"ssh-input\", input);\r\n      }\r\n    });\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      if (term && term.element) {\r\n        // Use fit addon if available, otherwise manual resize\r\n        try {\r\n          term.fit();\r\n        } catch (fitError) {\r\n          // Fallback resize logic\r\n          const cols = Math.floor(terminalRef.current.clientWidth / 9);\r\n          const rows = Math.floor(terminalRef.current.clientHeight / 17);\r\n          term.resize(cols, rows);\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [connectToSSHServer]);\r\n\r\n  const initializeConnection = useCallback(() => {\r\n    try {\r\n      // Method 1: Try to get data from URL parameters\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      let data = null;\r\n\r\n      // Check for sessionKey method first (more secure)\r\n      const sessionKey = urlParams.get('sessionKey');\r\n      if (sessionKey) {\r\n        const sessionData = sessionStorage.getItem(sessionKey);\r\n        if (sessionData) {\r\n          data = JSON.parse(sessionData);\r\n          // Clean up session data after use\r\n          sessionStorage.removeItem(sessionKey);\r\n        }\r\n      }\r\n\r\n      // Fallback to direct URL data\r\n      if (!data) {\r\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\r\n        if (urlData) {\r\n          data = JSON.parse(decodeURIComponent(urlData));\r\n        }\r\n      }\r\n\r\n      // Method 2: Try old format for backward compatibility\r\n      if (!data) {\r\n        const host = urlParams.get('host');\r\n        const username = urlParams.get('username');\r\n        const password = urlParams.get('password');\r\n        const serverName = urlParams.get('serverName');\r\n        const token = urlParams.get('token');\r\n        const userId = urlParams.get('userId');\r\n\r\n        if (host && username && password) {\r\n          data = {\r\n            host,\r\n            username,\r\n            password,\r\n            serverName,\r\n            token,\r\n            userId,\r\n            // Try to get additional user data from localStorage\r\n            ...getStoredUserData()\r\n          };\r\n        }\r\n      }\r\n\r\n      // Method 3: Try sessionStorage fallback\r\n      if (!data) {\r\n        const stored = sessionStorage.getItem('terminalConnection');\r\n        if (stored) {\r\n          data = JSON.parse(stored);\r\n        }\r\n      }\r\n\r\n      if (data) {\r\n        setConnectionData(data);\r\n        initializeTerminal(data);\r\n      } else {\r\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error initializing connection:\", err);\r\n      setError(\"Failed to initialize connection data\");\r\n    }\r\n  }, [getStoredUserData, initializeTerminal]);\r\n\r\n  useEffect(() => {\r\n    initializeConnection();\r\n    \r\n    // Listen for data from parent window via postMessage\r\n    const handleMessage = (event) => {\r\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\r\n        setConnectionData(event.data.data);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      window.removeEventListener('message', handleMessage);\r\n      cleanupConnection();\r\n    };\r\n  }, [initializeConnection, cleanupConnection]);\r\n\r\n  const handleDisconnect = () => {\r\n    if (socketRef.current) {\r\n      // Send user disconnection info\r\n      socketRef.current.emit(\"user-disconnect\", {\r\n        userId: connectionData?.userId,\r\n        userName: connectionData?.userName,\r\n        sessionId: connectionData?.sessionId,\r\n        disconnectTime: new Date().toISOString(),\r\n        disconnectReason: 'user_initiated'\r\n      });\r\n      \r\n      socketRef.current.disconnect();\r\n    }\r\n    \r\n    cleanupConnection();\r\n    window.close();\r\n  };\r\n\r\n  const handleReconnect = () => {\r\n    if (connectionData) {\r\n      setError(\"\");\r\n      setConnectionStatus(\"reconnecting\");\r\n      if (terminalInstance.current) {\r\n        terminalInstance.current.clear();\r\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\r\n      }\r\n      \r\n      // Reinitialize the entire connection\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        initializeTerminal(connectionData);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const handleNewSession = () => {\r\n    if (terminalInstance.current) {\r\n      terminalInstance.current.clear();\r\n    }\r\n    if (socketRef.current && connectionData) {\r\n      // Create new session ID for tracking\r\n      const newSessionData = {\r\n        ...connectionData,\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        connectionTime: new Date().toISOString()\r\n      };\r\n      setConnectionData(newSessionData);\r\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\r\n    }\r\n  };\r\n\r\n  const handleNewTerminal = () => {\r\n    handleNewSession();\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case \"connected\":\r\n      case \"ssh-connected\":\r\n        return \"#2ecc71\";\r\n      case \"connecting\":\r\n      case \"reconnecting\":\r\n        return \"#f39c12\";\r\n      case \"error\":\r\n        return \"#e74c3c\";\r\n      default:\r\n        return \"#95a5a6\";\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (connectionStatus) {\r\n      case \"initializing\":\r\n        return \"Initializing...\";\r\n      case \"connecting\":\r\n        return \"Connecting...\";\r\n      case \"connected\":\r\n        return \"Socket Connected\";\r\n      case \"ssh-connected\":\r\n        return \"SSH Connected\";\r\n      case \"reconnecting\":\r\n        return \"Reconnecting...\";\r\n      case \"disconnected\":\r\n        return \"Disconnected\";\r\n      case \"error\":\r\n        return \"Connection Error\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  // Get user display info (support both old and new data formats)\r\n  const getUserDisplayInfo = () => {\r\n    if (!connectionData) return { name: 'Unknown', id: 'N/A', email: 'N/A' };\r\n    \r\n    // New format\r\n    if (connectionData.userName) {\r\n      return {\r\n        name: connectionData.userName,\r\n        id: connectionData.registeredId || 'N/A',\r\n        email: connectionData.userEmail || 'N/A',\r\n        role: connectionData.userRole || 'student'\r\n      };\r\n    }\r\n    \r\n    // Old format\r\n    if (connectionData.user_data) {\r\n      return {\r\n        name: connectionData.user_data.name || 'Unknown',\r\n        id: connectionData.user_data.registered_id || 'N/A',\r\n        email: connectionData.user_data.email || 'N/A',\r\n        role: connectionData.user_data.role || 'student'\r\n      };\r\n    }\r\n    \r\n    return { name: 'Unknown', id: 'N/A', email: 'N/A', role: 'student' };\r\n  };\r\n\r\n  if (error && !connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>⚠️</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Terminal Connection Error</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>{error}</p>\r\n          <p style={{ margin: '0 0 20px 0', fontSize: '14px', color: '#95a5a6' }}>\r\n            Please return to the dashboard and try connecting again.\r\n          </p>\r\n          <button \r\n            onClick={() => window.close()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            Close Window\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>🔄</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Loading Terminal...</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>Initializing connection data...</p>\r\n          <div style={{ marginTop: '20px' }}>\r\n            <button \r\n              onClick={handleReconnect}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#3498db',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '14px'\r\n              }}\r\n            >\r\n              🔄 Retry Connection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const userInfo = getUserDisplayInfo();\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column', backgroundColor: '#2c3e50' }}>\r\n      {/* Enhanced Header with User Info */}\r\n      <div style={{ \r\n        padding: '12px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '2px solid #2c3e50',\r\n        minHeight: '60px'\r\n      }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n            <h3 style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>\r\n              🖥️ {connectionData?.serverName || connectionData?.host || \"Terminal\"}\r\n            </h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              gap: '6px',\r\n              padding: '4px 8px',\r\n              backgroundColor: getStatusColor(),\r\n              borderRadius: '12px',\r\n              fontSize: '12px'\r\n            }}>\r\n              <div style={{ \r\n                width: '8px', \r\n                height: '8px', \r\n                borderRadius: '50%', \r\n                backgroundColor: 'white' \r\n              }}></div>\r\n              {getStatusText()}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ fontSize: '13px', color: '#bdc3c7', marginTop: '4px' }}>\r\n            👤 {userInfo.name} \r\n            {userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`}\r\n            {userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`}\r\n            {connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          {(connectionStatus === \"error\" || connectionStatus === \"disconnected\") && (\r\n            <button \r\n              onClick={handleReconnect}\r\n              style={{\r\n                padding: '6px 12px',\r\n                backgroundColor: '#f39c12',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              🔄 Reconnect\r\n            </button>\r\n          )}\r\n          \r\n          <button \r\n            onClick={handleNewTerminal}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#3498db',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            🆕 New Session\r\n          </button>\r\n          \r\n          <button \r\n            onClick={handleDisconnect}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            ❌ Disconnect & Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connection Info Bar */}\r\n      {connectionData && (\r\n        <div style={{ \r\n          padding: '8px 20px', \r\n          backgroundColor: '#2c3e50', \r\n          color: '#ecf0f1',\r\n          fontSize: '12px',\r\n          borderBottom: '1px solid #34495e'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              🌐 Server: {connectionData.host} | \r\n              👥 Role: {userInfo.role} | \r\n              🔑 Session: {connectionData.sessionId?.substr(-8) || 'N/A'}\r\n            </div>\r\n            <div>\r\n              {connectionData.connectionTime && (\r\n                <>Connected: {new Date(connectionData.connectionTime).toLocaleTimeString()}</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Debug Info Bar (shows connection status) */}\r\n      <div style={{ \r\n        padding: '4px 20px', \r\n        backgroundColor: '#1a252f', \r\n        color: '#95a5a6',\r\n        fontSize: '11px',\r\n        borderBottom: '1px solid #34495e'\r\n      }}>\r\n        🔍 Debug: Socket URL: {SERVER_URL} | Status: {connectionStatus} | \r\n        Connected: {isConnected ? 'Yes' : 'No'} | \r\n        {error && `Error: ${error}`}\r\n      </div>\r\n\r\n      {/* Terminal Container */}\r\n      <div \r\n        ref={terminalRef} \r\n        style={{ \r\n          flex: 1, \r\n          padding: '0',\r\n          backgroundColor: '#1e1e1e',\r\n          overflow: 'hidden'\r\n        }} \r\n      />\r\n\r\n      {/* Status Footer */}\r\n      <div style={{ \r\n        padding: '8px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: '#bdc3c7',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div>\r\n          {error ? (\r\n            <span style={{ color: '#e74c3c' }}>❌ Error: {error}</span>\r\n          ) : (\r\n            <span>\r\n              Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {userInfo.name !== 'Unknown' && `Logged in as: ${userInfo.name}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}