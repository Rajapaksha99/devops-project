{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\SSHTerminal.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/pages/TerminalPage.jsx\nimport React, { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nconst TerminalPage = () => {\n  _s2();\n  const terminalRef = useRef();\n  const query = useQuery();\n  const host = query.get(\"host\");\n  const username = query.get(\"username\");\n  const password = query.get(\"password\");\n  const serverName = query.get(\"server\");\n  useEffect(() => {\n    const socket = io(SERVER_URL);\n    const term = new Terminal({\n      cursorBlink: true\n    });\n    term.open(terminalRef.current);\n\n    // Connect to SSH once socket opens\n    socket.emit(\"ssh-connect\", {\n      host,\n      username,\n      password\n    });\n    socket.on(\"ssh-output\", data => {\n      term.write(data);\n    });\n    term.onData(input => {\n      socket.emit(\"ssh-input\", input);\n    });\n    return () => socket.disconnect();\n  }, [host, username, password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      background: \"black\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        color: \"white\",\n        background: \"#1e3a8a\"\n      },\n      children: [\"Terminal: \", serverName, \" (\", host, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        height: \"calc(100% - 40px)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(TerminalPage, \"KWBdMuelkCoFYf/O/ZF+TjasN3o=\", false, function () {\n  return [useQuery];\n});\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useEffect","useRef","useLocation","io","Terminal","jsxDEV","_jsxDEV","SERVER_URL","useQuery","_s","URLSearchParams","search","TerminalPage","_s2","terminalRef","query","host","get","username","password","serverName","socket","term","cursorBlink","open","current","emit","on","data","write","onData","input","disconnect","style","height","width","background","children","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/SSHTerminal.jsx"],"sourcesContent":["// src/pages/TerminalPage.jsx\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst TerminalPage = () => {\r\n  const terminalRef = useRef();\r\n  const query = useQuery();\r\n\r\n  const host = query.get(\"host\");\r\n  const username = query.get(\"username\");\r\n  const password = query.get(\"password\");\r\n  const serverName = query.get(\"server\");\r\n\r\n  useEffect(() => {\r\n    const socket = io(SERVER_URL);\r\n    const term = new Terminal({ cursorBlink: true });\r\n    term.open(terminalRef.current);\r\n\r\n    // Connect to SSH once socket opens\r\n    socket.emit(\"ssh-connect\", { host, username, password });\r\n\r\n    socket.on(\"ssh-output\", (data) => {\r\n      term.write(data);\r\n    });\r\n\r\n    term.onData((input) => {\r\n      socket.emit(\"ssh-input\", input);\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [host, username, password]);\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100vw\", background: \"black\" }}>\r\n      <div style={{ padding: \"10px\", color: \"white\", background: \"#1e3a8a\" }}>\r\n        Terminal: {serverName} ({host})\r\n      </div>\r\n      <div ref={terminalRef} style={{ height: \"calc(100% - 40px)\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,OAAO,IAAIC,eAAe,CAACR,WAAW,CAAC,CAAC,CAACS,MAAM,CAAC;AAClD;AAACF,EAAA,CAFQD,QAAQ;EAAA,QACYN,WAAW;AAAA;AAGxC,MAAMU,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,WAAW,GAAGb,MAAM,CAAC,CAAC;EAC5B,MAAMc,KAAK,GAAGP,QAAQ,CAAC,CAAC;EAExB,MAAMQ,IAAI,GAAGD,KAAK,CAACE,GAAG,CAAC,MAAM,CAAC;EAC9B,MAAMC,QAAQ,GAAGH,KAAK,CAACE,GAAG,CAAC,UAAU,CAAC;EACtC,MAAME,QAAQ,GAAGJ,KAAK,CAACE,GAAG,CAAC,UAAU,CAAC;EACtC,MAAMG,UAAU,GAAGL,KAAK,CAACE,GAAG,CAAC,QAAQ,CAAC;EAEtCjB,SAAS,CAAC,MAAM;IACd,MAAMqB,MAAM,GAAGlB,EAAE,CAACI,UAAU,CAAC;IAC7B,MAAMe,IAAI,GAAG,IAAIlB,QAAQ,CAAC;MAAEmB,WAAW,EAAE;IAAK,CAAC,CAAC;IAChDD,IAAI,CAACE,IAAI,CAACV,WAAW,CAACW,OAAO,CAAC;;IAE9B;IACAJ,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;MAAEV,IAAI;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAExDE,MAAM,CAACM,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MAChCN,IAAI,CAACO,KAAK,CAACD,IAAI,CAAC;IAClB,CAAC,CAAC;IAEFN,IAAI,CAACQ,MAAM,CAAEC,KAAK,IAAK;MACrBV,MAAM,CAACK,IAAI,CAAC,WAAW,EAAEK,KAAK,CAAC;IACjC,CAAC,CAAC;IAEF,OAAO,MAAMV,MAAM,CAACW,UAAU,CAAC,CAAC;EAClC,CAAC,EAAE,CAAChB,IAAI,EAAEE,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAE9B,oBACEb,OAAA;IAAK2B,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACnE/B,OAAA;MAAK2B,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE,OAAO;QAAEH,UAAU,EAAE;MAAU,CAAE;MAAAC,QAAA,GAAC,YAC5D,EAACjB,UAAU,EAAC,IAAE,EAACJ,IAAI,EAAC,GAChC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrC,OAAA;MAAKsC,GAAG,EAAE9B,WAAY;MAACmB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAoB;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAAC9B,GAAA,CApCID,YAAY;EAAA,QAEFJ,QAAQ;AAAA;AAAAqC,EAAA,GAFlBjC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}