{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst TerminalPage = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionInfo, setConnectionInfo] = useState(null);\n  const terminalRef = useRef();\n  const termRef = useRef();\n  useEffect(() => {\n    // Get connection info from URL parameters\n    const urlParams = new URLSearchParams(window.location.search);\n    const host = urlParams.get('host');\n    const username = urlParams.get('username');\n    const password = urlParams.get('password');\n    const serverName = urlParams.get('serverName');\n    if (host && username && password) {\n      setConnectionInfo({\n        host,\n        username,\n        password,\n        serverName\n      });\n    } else {\n      // If no params, try to get from sessionStorage (fallback)\n      const stored = sessionStorage.getItem('terminalConnection');\n      if (stored) {\n        setConnectionInfo(JSON.parse(stored));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (!connectionInfo) return;\n    const newSocket = io(SERVER_URL);\n    setSocket(newSocket);\n    const term = new Terminal({\n      rows: 30,\n      cols: 120,\n      fontSize: 14,\n      fontFamily: 'Monaco, Menlo, \"Ubuntu Mono\", monospace',\n      theme: {\n        background: '#000000',\n        foreground: '#ffffff',\n        cursor: '#ffffff'\n      }\n    });\n    term.open(terminalRef.current);\n    termRef.current = term;\n\n    // Auto-connect when component mounts\n    newSocket.emit(\"ssh-connect\", {\n      host: connectionInfo.host,\n      username: connectionInfo.username,\n      password: connectionInfo.password\n    });\n    newSocket.on(\"ssh-output\", data => {\n      term.write(data);\n      if (data.includes(`Connected to ${connectionInfo.host}`)) {\n        setIsConnected(true);\n      }\n    });\n    term.onData(input => {\n      newSocket.emit(\"ssh-input\", input);\n    });\n\n    // Handle window close\n    const handleBeforeUnload = () => {\n      newSocket.disconnect();\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      newSocket.disconnect();\n      term.dispose();\n    };\n  }, [connectionInfo]);\n  const handleDisconnect = () => {\n    if (socket) {\n      socket.disconnect();\n      setIsConnected(false);\n    }\n    window.close();\n  };\n  if (!connectionInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Terminal Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No connection information provided. Please return to the dashboard and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.close(),\n        children: \"Close Window\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0\n          },\n          children: [\"Terminal - \", connectionInfo.serverName || connectionInfo.host]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Connected as \", connectionInfo.username, \"@\", connectionInfo.host, isConnected && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#2ecc71'\n            },\n            children: \" \\u25CF Connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDisconnect,\n        style: {\n          padding: '5px 15px',\n          backgroundColor: '#e74c3c',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Disconnect & Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        flex: 1,\n        padding: '10px',\n        backgroundColor: '#000000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"DgnmnsgbK3zVTxgHyDiU6e7gFMs=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Terminal","jsxDEV","_jsxDEV","SERVER_URL","TerminalPage","_s","socket","setSocket","isConnected","setIsConnected","connectionInfo","setConnectionInfo","terminalRef","termRef","urlParams","URLSearchParams","window","location","search","host","get","username","password","serverName","stored","sessionStorage","getItem","JSON","parse","newSocket","term","rows","cols","fontSize","fontFamily","theme","background","foreground","cursor","open","current","emit","on","data","write","includes","onData","input","handleBeforeUnload","disconnect","addEventListener","removeEventListener","dispose","handleDisconnect","close","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","display","flexDirection","backgroundColor","color","justifyContent","alignItems","margin","border","borderRadius","ref","flex","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst TerminalPage = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionInfo, setConnectionInfo] = useState(null);\r\n  const terminalRef = useRef();\r\n  const termRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get connection info from URL parameters\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const host = urlParams.get('host');\r\n    const username = urlParams.get('username');\r\n    const password = urlParams.get('password');\r\n    const serverName = urlParams.get('serverName');\r\n\r\n    if (host && username && password) {\r\n      setConnectionInfo({ host, username, password, serverName });\r\n    } else {\r\n      // If no params, try to get from sessionStorage (fallback)\r\n      const stored = sessionStorage.getItem('terminalConnection');\r\n      if (stored) {\r\n        setConnectionInfo(JSON.parse(stored));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!connectionInfo) return;\r\n\r\n    const newSocket = io(SERVER_URL);\r\n    setSocket(newSocket);\r\n    \r\n    const term = new Terminal({\r\n      rows: 30,\r\n      cols: 120,\r\n      fontSize: 14,\r\n      fontFamily: 'Monaco, Menlo, \"Ubuntu Mono\", monospace',\r\n      theme: {\r\n        background: '#000000',\r\n        foreground: '#ffffff',\r\n        cursor: '#ffffff'\r\n      }\r\n    });\r\n    \r\n    term.open(terminalRef.current);\r\n    termRef.current = term;\r\n\r\n    // Auto-connect when component mounts\r\n    newSocket.emit(\"ssh-connect\", {\r\n      host: connectionInfo.host,\r\n      username: connectionInfo.username,\r\n      password: connectionInfo.password,\r\n    });\r\n\r\n    newSocket.on(\"ssh-output\", (data) => {\r\n      term.write(data);\r\n      if (data.includes(`Connected to ${connectionInfo.host}`)) {\r\n        setIsConnected(true);\r\n      }\r\n    });\r\n\r\n    term.onData((input) => {\r\n      newSocket.emit(\"ssh-input\", input);\r\n    });\r\n\r\n    // Handle window close\r\n    const handleBeforeUnload = () => {\r\n      newSocket.disconnect();\r\n    };\r\n    \r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      newSocket.disconnect();\r\n      term.dispose();\r\n    };\r\n  }, [connectionInfo]);\r\n\r\n  const handleDisconnect = () => {\r\n    if (socket) {\r\n      socket.disconnect();\r\n      setIsConnected(false);\r\n    }\r\n    window.close();\r\n  };\r\n\r\n  if (!connectionInfo) {\r\n    return (\r\n      <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n        <h2>Terminal Access</h2>\r\n        <p>No connection information provided. Please return to the dashboard and try again.</p>\r\n        <button onClick={() => window.close()}>Close Window</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n      {/* Header */}\r\n      <div style={{ \r\n        padding: '10px 20px', \r\n        backgroundColor: '#2c3e50', \r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div>\r\n          <h3 style={{ margin: 0 }}>\r\n            Terminal - {connectionInfo.serverName || connectionInfo.host}\r\n          </h3>\r\n          <small>\r\n            Connected as {connectionInfo.username}@{connectionInfo.host}\r\n            {isConnected && <span style={{ color: '#2ecc71' }}> ● Connected</span>}\r\n          </small>\r\n        </div>\r\n        <button \r\n          onClick={handleDisconnect}\r\n          style={{\r\n            padding: '5px 15px',\r\n            backgroundColor: '#e74c3c',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Disconnect & Close\r\n        </button>\r\n      </div>\r\n\r\n      {/* Terminal */}\r\n      <div \r\n        ref={terminalRef} \r\n        style={{ \r\n          flex: 1, \r\n          padding: '10px',\r\n          backgroundColor: '#000000'\r\n        }} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}