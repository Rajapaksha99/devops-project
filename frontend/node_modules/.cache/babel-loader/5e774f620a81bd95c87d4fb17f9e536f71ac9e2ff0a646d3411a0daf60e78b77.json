{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './StudentDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loadingServers, setLoadingServers] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Get user data from localStorage on component mount\n    const userData = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser(parsedUser);\n      } catch (err) {\n        console.error('Error parsing user data:', err);\n        handleLogout();\n        return;\n      }\n    }\n\n    // Redirect to login if no user data found\n    if (!userData || !token) {\n      window.location.href = '/login';\n      return;\n    }\n\n    // Fetch servers from API\n    fetchServers();\n  }, []);\n  const fetchServers = async () => {\n    try {\n      setLoadingServers(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n\n      // Determine the correct API base URL\n      const getApiBaseUrl = () => {\n        // If in development, use localhost:5000\n        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n          return 'http://localhost:5000';\n        }\n        // If in production, assume same domain different port or same domain\n        return window.location.origin.replace(':3000', ':5000');\n      };\n      const API_BASE_URL = getApiBaseUrl();\n\n      // Try different possible API endpoints\n      const apiEndpoints = [`${API_BASE_URL}/api/servers`, '/api/servers' // Fallback for proxy setup\n      ];\n      let response = null;\n      let lastError = null;\n      for (const endpoint of apiEndpoints) {\n        try {\n          console.log(`Trying API endpoint: ${endpoint}`);\n          response = await fetch(endpoint, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n\n          // Check if response is HTML (common error)\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.includes('text/html')) {\n            throw new Error(`Received HTML instead of JSON from ${endpoint}. Server might not be running on correct port.`);\n          }\n          if (response.ok) {\n            break; // Success, exit loop\n          } else {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n        } catch (err) {\n          console.warn(`Failed to fetch from ${endpoint}:`, err.message);\n          lastError = err;\n          response = null;\n        }\n      }\n      if (!response) {\n        throw lastError || new Error('All API endpoints failed');\n      }\n      if (response.status === 401) {\n        // Token expired or invalid\n        handleLogout();\n        return;\n      }\n      const data = await response.json();\n      console.log('Received server data:', data);\n      if (data.success && data.servers && data.servers.length > 0) {\n        // Filter only active servers for students\n        const activeServers = data.servers.filter(server => server.status === 'active');\n        console.log('Active servers found:', activeServers);\n        setServers(activeServers);\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\n\n        if (activeServers.length === 0) {\n          setError(\"No active servers available in database\");\n        }\n      } else {\n        setError(\"No servers found in database\");\n        console.warn('No servers returned from API:', data);\n      }\n    } catch (error) {\n      console.error('Error fetching servers:', error);\n\n      // More specific error messages\n      let errorMessage = error.message;\n      if (errorMessage.includes('fetch')) {\n        errorMessage = 'Cannot connect to server. Please check if the backend server is running on port 5000.';\n      } else if (errorMessage.includes('HTML')) {\n        errorMessage = 'Server returned HTML instead of JSON. Check your API routes configuration.';\n      } else if (errorMessage.includes('JSON')) {\n        errorMessage = 'Invalid JSON response from server. Check server logs for errors.';\n      }\n      setError(`API Error: ${errorMessage}`);\n\n      // Remove fallback servers - force user to fix API issue\n      setServers([]);\n      setSelectedServer(null);\n    } finally {\n      setLoadingServers(false);\n    }\n  };\n  const handleConnect = () => {\n    if (!user || !username || !password) {\n      alert(\"Please enter both username and password\");\n      return;\n    }\n    if (!selectedServer) {\n      alert(\"Please select a server\");\n      return;\n    }\n    setIsConnecting(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Enhanced connection data matching server.js expectations\n      const connectionData = {\n        // Server connection details\n        host: selectedServer.ip,\n        username: username,\n        password: password,\n        serverName: selectedServer.name,\n        port: selectedServer.port || 22,\n        // User authentication and identification (matching server.js structure)\n        token: token || '',\n        userId: user.id || user._id || '',\n        userEmail: user.email || '',\n        userName: user.name || '',\n        registeredId: user.registered_id || '',\n        userRole: user.role || 'student',\n        // Legacy support for different data structures\n        user: {\n          id: user.id || user._id,\n          name: user.name,\n          email: user.email,\n          registered_id: user.registered_id,\n          role: user.role || 'student'\n        },\n        // Session metadata\n        connectionTime: new Date().toISOString(),\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        // Additional context\n        dashboardUrl: window.location.origin,\n        browserInfo: navigator.userAgent,\n        serverId: selectedServer._id || selectedServer.id\n      };\n\n      // Store in sessionStorage for secure data transfer\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\n\n      // Create URL parameters\n      const urlParams = new URLSearchParams({\n        sessionKey: sessionKey,\n        serverName: selectedServer.name,\n        serverIp: selectedServer.ip\n      });\n\n      // Create unique window name to allow multiple terminals\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\n\n      // Open new window\n      const newWindow = window.open(`/terminal?${urlParams.toString()}`, windowName, 'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no');\n\n      // Check if popup was blocked\n      if (!newWindow) {\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\n        setIsConnecting(false);\n        return;\n      }\n\n      // Send additional data via postMessage after window loads\n      const sendDataToTerminal = () => {\n        try {\n          newWindow.postMessage({\n            type: 'TERMINAL_CONNECTION_DATA',\n            data: connectionData\n          }, window.location.origin);\n        } catch (error) {\n          console.warn('Could not send data via postMessage:', error);\n        }\n      };\n\n      // Wait for the terminal window to load, then send data\n      setTimeout(sendDataToTerminal, 1000);\n\n      // Focus the new window\n      newWindow.focus();\n\n      // Cleanup: Clear sensitive data after connection\n      setTimeout(() => {\n        setPassword(\"\");\n        setIsConnecting(false);\n      }, 2000);\n\n      // Track the connection\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\n    } catch (error) {\n      console.error('Connection error:', error);\n      alert('Failed to establish connection. Please try again.');\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    // Clear all stored data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear any terminal session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n    window.location.href = '/login';\n  };\n\n  // Show loading state while user data is being retrieved\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-title\",\n          children: \"Loading Dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-subtitle\",\n          children: \"Please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Student Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"welcome-text\",\n              children: [\"Welcome, \", user.name || 'Student']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), user.registered_id && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-details student-id\",\n              children: [\"Student ID: \", user.registered_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), user.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-details user-email\",\n              children: [\"Email: \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchServers,\n              disabled: loadingServers,\n              className: `btn btn-refresh ${loadingServers ? 'disabled' : ''}`,\n              children: loadingServers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), \"Refreshing...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"\\uD83D\\uDD04 Refresh Servers\"\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"btn btn-logout\",\n              children: \"\\uD83D\\uDEAA Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-title\",\n            children: \"\\u26A0\\uFE0F Connection Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-content\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), error.includes('Cannot connect to server') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"troubleshooting\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Troubleshooting Steps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Make sure your backend server is running: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"node server.js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Check if server is running on port 5000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Verify MongoDB is connected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Check server console for errors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), error.includes('HTML instead of JSON') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"troubleshooting\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Server Configuration Issue:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"API routes may not be properly configured\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Check that server.js includes: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"app.use(\\\"/api/auth\\\", authRoutes);\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Verify the server is not serving HTML for API routes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this), error.includes('No servers found') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"troubleshooting\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Database Issue:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"No servers found in your Serverip collection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Add servers to the database using admin panel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Check MongoDB connection and collection name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Select Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), loadingServers ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-select\",\n            children: \"\\uD83D\\uDD04 Loading available servers...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedServer ? selectedServer.ip : '',\n            onChange: e => {\n              const server = servers.find(s => s.ip === e.target.value);\n              setSelectedServer(server);\n            },\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Choose a server...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: server.ip,\n              children: [server.name, \" - \", server.ip, server.status !== 'active' ? ` (${server.status})` : '']\n            }, server._id || server.ip, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credentials-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"SSH Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter server username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"SSH Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter server password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && handleConnect(),\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConnect,\n          disabled: isConnecting || !username || !password || !selectedServer || loadingServers,\n          className: \"connect-button\",\n          children: isConnecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), \"Opening Terminal...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\uD83D\\uDDA5\\uFE0F Connect to Server Terminal\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), selectedServer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"server-info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"server-info-title\",\n            children: \"\\uD83D\\uDCCA Selected Server Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"server-info-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Server Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), \" \", selectedServer.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"IP Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), \" \", selectedServer.ip]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Port:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), \" \", selectedServer.port || 22]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `server-status status-${selectedServer.status || 'active'}`,\n                children: [\"\\u25CF \", selectedServer.status || 'Active']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Student:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), \" \", user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Role:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"role-badge\",\n                children: user.role || 'Student'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), selectedServer.max_connections && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Max Connections:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), \" \", selectedServer.max_connections]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this), selectedServer.created_at && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Server Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), \" \", new Date(selectedServer.created_at).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), selectedServer.description && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"server-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this), \" \", selectedServer.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"instructions-title\",\n            children: \"\\uD83D\\uDCCB Connection Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"instructions-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Select your assigned server from the dropdown menu above\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Enter your SSH credentials (username and password for the server)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click \\\"Connect to Server Terminal\\\" to open a new window with terminal access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Important:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), \" Make sure to allow popups for this website\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"The terminal will automatically authenticate using your student profile data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"security-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDD10 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Security Notice:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 18\n            }, this), \" Always log out when finished and never share your SSH credentials. Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"Du4WXzVGEPhKwOTYRKQf5WM5VpE=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentDashboard","_s","servers","setServers","selectedServer","setSelectedServer","username","setUsername","password","setPassword","isConnecting","setIsConnecting","user","setUser","loadingServers","setLoadingServers","error","setError","userData","localStorage","getItem","token","parsedUser","JSON","parse","err","console","handleLogout","window","location","href","fetchServers","getApiBaseUrl","hostname","origin","replace","API_BASE_URL","apiEndpoints","response","lastError","endpoint","log","fetch","method","headers","contentType","get","includes","Error","ok","status","statusText","warn","message","data","json","success","length","activeServers","filter","server","errorMessage","handleConnect","alert","connectionData","host","ip","serverName","name","port","userId","id","_id","userEmail","email","userName","registeredId","registered_id","userRole","role","connectionTime","Date","toISOString","sessionId","now","Math","random","toString","substr","dashboardUrl","browserInfo","navigator","userAgent","serverId","sessionKey","sessionStorage","setItem","stringify","urlParams","URLSearchParams","serverIp","windowName","newWindow","open","sendDataToTerminal","postMessage","type","setTimeout","focus","removeItem","Object","keys","forEach","key","startsWith","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","e","find","s","target","map","placeholder","onKeyPress","max_connections","created_at","toLocaleDateString","description","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './StudentDashboard.css';\r\n\r\nconst StudentDashboard = () => {\r\n  const [servers, setServers] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingServers, setLoadingServers] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get user data from localStorage on component mount\r\n    const userData = localStorage.getItem('user');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser(parsedUser);\r\n      } catch (err) {\r\n        console.error('Error parsing user data:', err);\r\n        handleLogout();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Redirect to login if no user data found\r\n    if (!userData || !token) {\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n\r\n    // Fetch servers from API\r\n    fetchServers();\r\n  }, []);\r\n\r\n  const fetchServers = async () => {\r\n    try {\r\n      setLoadingServers(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Determine the correct API base URL\r\n      const getApiBaseUrl = () => {\r\n        // If in development, use localhost:5000\r\n        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n          return 'http://localhost:5000';\r\n        }\r\n        // If in production, assume same domain different port or same domain\r\n        return window.location.origin.replace(':3000', ':5000');\r\n      };\r\n\r\n      const API_BASE_URL = getApiBaseUrl();\r\n      \r\n      // Try different possible API endpoints\r\n      const apiEndpoints = [\r\n        `${API_BASE_URL}/api/servers`,\r\n        '/api/servers', // Fallback for proxy setup\r\n      ];\r\n      \r\n      let response = null;\r\n      let lastError = null;\r\n      \r\n      for (const endpoint of apiEndpoints) {\r\n        try {\r\n          console.log(`Trying API endpoint: ${endpoint}`);\r\n          \r\n          response = await fetch(endpoint, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n          \r\n          // Check if response is HTML (common error)\r\n          const contentType = response.headers.get('content-type');\r\n          if (contentType && contentType.includes('text/html')) {\r\n            throw new Error(`Received HTML instead of JSON from ${endpoint}. Server might not be running on correct port.`);\r\n          }\r\n          \r\n          if (response.ok) {\r\n            break; // Success, exit loop\r\n          } else {\r\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n          }\r\n          \r\n        } catch (err) {\r\n          console.warn(`Failed to fetch from ${endpoint}:`, err.message);\r\n          lastError = err;\r\n          response = null;\r\n        }\r\n      }\r\n      \r\n      if (!response) {\r\n        throw lastError || new Error('All API endpoints failed');\r\n      }\r\n\r\n      if (response.status === 401) {\r\n        // Token expired or invalid\r\n        handleLogout();\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Received server data:', data);\r\n      \r\n      if (data.success && data.servers && data.servers.length > 0) {\r\n        // Filter only active servers for students\r\n        const activeServers = data.servers.filter(server => server.status === 'active');\r\n        console.log('Active servers found:', activeServers);\r\n        \r\n        setServers(activeServers);\r\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\r\n        \r\n        if (activeServers.length === 0) {\r\n          setError(\"No active servers available in database\");\r\n        }\r\n      } else {\r\n        setError(\"No servers found in database\");\r\n        console.warn('No servers returned from API:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching servers:', error);\r\n      \r\n      // More specific error messages\r\n      let errorMessage = error.message;\r\n      if (errorMessage.includes('fetch')) {\r\n        errorMessage = 'Cannot connect to server. Please check if the backend server is running on port 5000.';\r\n      } else if (errorMessage.includes('HTML')) {\r\n        errorMessage = 'Server returned HTML instead of JSON. Check your API routes configuration.';\r\n      } else if (errorMessage.includes('JSON')) {\r\n        errorMessage = 'Invalid JSON response from server. Check server logs for errors.';\r\n      }\r\n      \r\n      setError(`API Error: ${errorMessage}`);\r\n      \r\n      // Remove fallback servers - force user to fix API issue\r\n      setServers([]);\r\n      setSelectedServer(null);\r\n      \r\n    } finally {\r\n      setLoadingServers(false);\r\n    }\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    if (!user || !username || !password) {\r\n      alert(\"Please enter both username and password\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedServer) {\r\n      alert(\"Please select a server\");\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Enhanced connection data matching server.js expectations\r\n      const connectionData = {\r\n        // Server connection details\r\n        host: selectedServer.ip,\r\n        username: username,\r\n        password: password,\r\n        serverName: selectedServer.name,\r\n        port: selectedServer.port || 22,\r\n        \r\n        // User authentication and identification (matching server.js structure)\r\n        token: token || '',\r\n        userId: user.id || user._id || '',\r\n        userEmail: user.email || '',\r\n        userName: user.name || '',\r\n        registeredId: user.registered_id || '',\r\n        userRole: user.role || 'student',\r\n        \r\n        // Legacy support for different data structures\r\n        user: {\r\n          id: user.id || user._id,\r\n          name: user.name,\r\n          email: user.email,\r\n          registered_id: user.registered_id,\r\n          role: user.role || 'student'\r\n        },\r\n        \r\n        // Session metadata\r\n        connectionTime: new Date().toISOString(),\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        \r\n        // Additional context\r\n        dashboardUrl: window.location.origin,\r\n        browserInfo: navigator.userAgent,\r\n        serverId: selectedServer._id || selectedServer.id\r\n      };\r\n\r\n      // Store in sessionStorage for secure data transfer\r\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\r\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\r\n      \r\n      // Create URL parameters\r\n      const urlParams = new URLSearchParams({\r\n        sessionKey: sessionKey,\r\n        serverName: selectedServer.name,\r\n        serverIp: selectedServer.ip\r\n      });\r\n\r\n      // Create unique window name to allow multiple terminals\r\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\r\n      \r\n      // Open new window\r\n      const newWindow = window.open(\r\n        `/terminal?${urlParams.toString()}`, \r\n        windowName,\r\n        'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no'\r\n      );\r\n\r\n      // Check if popup was blocked\r\n      if (!newWindow) {\r\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n\r\n      // Send additional data via postMessage after window loads\r\n      const sendDataToTerminal = () => {\r\n        try {\r\n          newWindow.postMessage({\r\n            type: 'TERMINAL_CONNECTION_DATA',\r\n            data: connectionData\r\n          }, window.location.origin);\r\n        } catch (error) {\r\n          console.warn('Could not send data via postMessage:', error);\r\n        }\r\n      };\r\n\r\n      // Wait for the terminal window to load, then send data\r\n      setTimeout(sendDataToTerminal, 1000);\r\n      \r\n      // Focus the new window\r\n      newWindow.focus();\r\n\r\n      // Cleanup: Clear sensitive data after connection\r\n      setTimeout(() => {\r\n        setPassword(\"\");\r\n        setIsConnecting(false);\r\n      }, 2000);\r\n\r\n      // Track the connection\r\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\r\n\r\n    } catch (error) {\r\n      console.error('Connection error:', error);\r\n      alert('Failed to establish connection. Please try again.');\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear all stored data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear any terminal session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // Show loading state while user data is being retrieved\r\n  if (!user) {\r\n    return (\r\n      <div className=\"loading-dashboard\">\r\n        <div className=\"loading-content\">\r\n          <div className=\"loading-title\">Loading Dashboard...</div>\r\n          <div className=\"loading-subtitle\">Please wait</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"student-dashboard\">\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"dashboard-card\">\r\n          {/* Header */}\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-info\">\r\n              <h2>Student Dashboard</h2>\r\n              <p className=\"welcome-text\">\r\n                Welcome, {user.name || 'Student'}\r\n              </p>\r\n              {user.registered_id && (\r\n                <p className=\"user-details student-id\">\r\n                  Student ID: {user.registered_id}\r\n                </p>\r\n              )}\r\n              {user.email && (\r\n                <p className=\"user-details user-email\">\r\n                  Email: {user.email}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"header-controls\">\r\n              <button \r\n                onClick={fetchServers}\r\n                disabled={loadingServers}\r\n                className={`btn btn-refresh ${loadingServers ? 'disabled' : ''}`}\r\n              >\r\n                {loadingServers ? (\r\n                  <>\r\n                    <span className=\"loading-spinner\"></span>\r\n                    Refreshing...\r\n                  </>\r\n                ) : (\r\n                  <>🔄 Refresh Servers</>\r\n                )}\r\n              </button>\r\n              <button \r\n                onClick={handleLogout}\r\n                className=\"btn btn-logout\"\r\n              >\r\n                🚪 Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              <div className=\"error-title\">⚠️ Connection Error</div>\r\n              <div className=\"error-content\">{error}</div>\r\n              \r\n              {error.includes('Cannot connect to server') && (\r\n                <div className=\"troubleshooting\">\r\n                  <strong>Troubleshooting Steps:</strong>\r\n                  <ul>\r\n                    <li>Make sure your backend server is running: <code>node server.js</code></li>\r\n                    <li>Check if server is running on port 5000</li>\r\n                    <li>Verify MongoDB is connected</li>\r\n                    <li>Check server console for errors</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {error.includes('HTML instead of JSON') && (\r\n                <div className=\"troubleshooting\">\r\n                  <strong>Server Configuration Issue:</strong>\r\n                  <ul>\r\n                    <li>API routes may not be properly configured</li>\r\n                    <li>Check that server.js includes: <code>app.use(\"/api/auth\", authRoutes);</code></li>\r\n                    <li>Verify the server is not serving HTML for API routes</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              \r\n              {error.includes('No servers found') && (\r\n                <div className=\"troubleshooting\">\r\n                  <strong>Database Issue:</strong>\r\n                  <ul>\r\n                    <li>No servers found in your Serverip collection</li>\r\n                    <li>Add servers to the database using admin panel</li>\r\n                    <li>Check MongoDB connection and collection name</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Server Selection */}\r\n          <div className=\"form-section\">\r\n            <label className=\"form-label\">Select Server:</label>\r\n            {loadingServers ? (\r\n              <div className=\"loading-select\">\r\n                🔄 Loading available servers...\r\n              </div>\r\n            ) : (\r\n              <select\r\n                value={selectedServer ? selectedServer.ip : ''}\r\n                onChange={(e) => {\r\n                  const server = servers.find((s) => s.ip === e.target.value);\r\n                  setSelectedServer(server);\r\n                }}\r\n                className=\"form-select\"\r\n              >\r\n                <option value=\"\" disabled>Choose a server...</option>\r\n                {servers.map((server) => (\r\n                  <option key={server._id || server.ip} value={server.ip}>\r\n                    {server.name} - {server.ip} \r\n                    {server.status !== 'active' ? ` (${server.status})` : ''}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n\r\n          {/* SSH Credentials */}\r\n          <div className=\"credentials-grid\">\r\n            <div className=\"form-section\">\r\n              <label className=\"form-label\">SSH Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter server username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"form-input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-section\">\r\n              <label className=\"form-label\">SSH Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Enter server password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && handleConnect()}\r\n                className=\"form-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Connect Button */}\r\n          <button \r\n            onClick={handleConnect}\r\n            disabled={isConnecting || !username || !password || !selectedServer || loadingServers}\r\n            className=\"connect-button\"\r\n          >\r\n            {isConnecting ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Opening Terminal...\r\n              </>\r\n            ) : (\r\n              <>🖥️ Connect to Server Terminal</>\r\n            )}\r\n          </button>\r\n\r\n          {/* Server Info Card */}\r\n          {selectedServer && (\r\n            <div className=\"server-info-card\">\r\n              <h4 className=\"server-info-title\">📊 Selected Server Information</h4>\r\n              <div className=\"server-info-grid\">\r\n                <div className=\"server-info-item\">\r\n                  <strong>Server Name:</strong> {selectedServer.name}\r\n                </div>\r\n                <div className=\"server-info-item\">\r\n                  <strong>IP Address:</strong> {selectedServer.ip}\r\n                </div>\r\n                <div className=\"server-info-item\">\r\n                  <strong>Port:</strong> {selectedServer.port || 22}\r\n                </div>\r\n                <div className=\"server-info-item\">\r\n                  <strong>Status:</strong> \r\n                  <span className={`server-status status-${selectedServer.status || 'active'}`}>\r\n                    ● {selectedServer.status || 'Active'}\r\n                  </span>\r\n                </div>\r\n                <div className=\"server-info-item\">\r\n                  <strong>Student:</strong> {user.name}\r\n                </div>\r\n                <div className=\"server-info-item\">\r\n                  <strong>Role:</strong> <span className=\"role-badge\">{user.role || 'Student'}</span>\r\n                </div>\r\n                {selectedServer.max_connections && (\r\n                  <div className=\"server-info-item\">\r\n                    <strong>Max Connections:</strong> {selectedServer.max_connections}\r\n                  </div>\r\n                )}\r\n                {selectedServer.created_at && (\r\n                  <div className=\"server-info-item\">\r\n                    <strong>Server Created:</strong> {new Date(selectedServer.created_at).toLocaleDateString()}\r\n                  </div>\r\n                )}\r\n                {selectedServer.description && (\r\n                  <div className=\"server-description\">\r\n                    <strong>Description:</strong> {selectedServer.description}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          <div className=\"instructions-card\">\r\n            <h4 className=\"instructions-title\">📋 Connection Instructions:</h4>\r\n            <ol className=\"instructions-list\">\r\n              <li>Select your assigned server from the dropdown menu above</li>\r\n              <li>Enter your SSH credentials (username and password for the server)</li>\r\n              <li>Click \"Connect to Server Terminal\" to open a new window with terminal access</li>\r\n              <li><strong>Important:</strong> Make sure to allow popups for this website</li>\r\n              <li>The terminal will automatically authenticate using your student profile data</li>\r\n            </ol>\r\n          </div>\r\n\r\n          {/* Security Warning */}\r\n          <div className=\"security-warning\">\r\n            <p>\r\n              🔐 <strong>Security Notice:</strong> Always log out when finished and never share your SSH credentials. \r\n              Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}