{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentDashboard() {\n  _s();\n  const termRef = useRef(null);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (!termRef.current) return;\n\n    // Create terminal\n    const term = new Terminal({\n      cursorBlink: true,\n      rows: 20,\n      cols: 80\n    });\n\n    // Open terminal inside div\n    term.open(termRef.current);\n\n    // ✅ Force terminal to fit container\n    setTimeout(() => {\n      term.resize(80, 20); // or use FitAddon if you want auto-resize\n    }, 0);\n\n    // Connect socket\n    const socket = io(\"http://localhost:5000\");\n    socketRef.current = socket;\n    socket.on(\"ssh-output\", data => term.write(data));\n    term.onData(data => socket.emit(\"ssh-input\", data));\n    socket.emit(\"ssh-connect\", {\n      host: \"192.168.1.100\",\n      username: \"test\",\n      password: \"1234\"\n    });\n    return () => {\n      socket.disconnect();\n      term.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: termRef,\n    style: {\n      height: \"500px\",\n      width: \"100%\",\n      backgroundColor: \"black\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"iHRwzD3Yc1v0qnOgSZFLogXEj6s=\");\n_c = StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","io","Terminal","jsxDEV","_jsxDEV","StudentDashboard","_s","termRef","socketRef","current","term","cursorBlink","rows","cols","open","setTimeout","resize","socket","on","data","write","onData","emit","host","username","password","disconnect","dispose","ref","style","height","width","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nexport default function StudentDashboard() {\r\n  const termRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!termRef.current) return;\r\n\r\n    // Create terminal\r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      rows: 20,\r\n      cols: 80,\r\n    });\r\n\r\n    // Open terminal inside div\r\n    term.open(termRef.current);\r\n\r\n    // ✅ Force terminal to fit container\r\n    setTimeout(() => {\r\n      term.resize(80, 20); // or use FitAddon if you want auto-resize\r\n    }, 0);\r\n\r\n    // Connect socket\r\n    const socket = io(\"http://localhost:5000\");\r\n    socketRef.current = socket;\r\n\r\n    socket.on(\"ssh-output\", (data) => term.write(data));\r\n    term.onData((data) => socket.emit(\"ssh-input\", data));\r\n\r\n    socket.emit(\"ssh-connect\", {\r\n      host: \"192.168.1.100\",\r\n      username: \"test\",\r\n      password: \"1234\",\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      term.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={termRef}\r\n      style={{\r\n        height: \"500px\",\r\n        width: \"100%\",\r\n        backgroundColor: \"black\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMQ,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,OAAO,CAACE,OAAO,EAAE;;IAEtB;IACA,MAAMC,IAAI,GAAG,IAAIR,QAAQ,CAAC;MACxBS,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;IACR,CAAC,CAAC;;IAEF;IACAH,IAAI,CAACI,IAAI,CAACP,OAAO,CAACE,OAAO,CAAC;;IAE1B;IACAM,UAAU,CAAC,MAAM;MACfL,IAAI,CAACM,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,EAAE,CAAC,CAAC;;IAEL;IACA,MAAMC,MAAM,GAAGhB,EAAE,CAAC,uBAAuB,CAAC;IAC1CO,SAAS,CAACC,OAAO,GAAGQ,MAAM;IAE1BA,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAKT,IAAI,CAACU,KAAK,CAACD,IAAI,CAAC,CAAC;IACnDT,IAAI,CAACW,MAAM,CAAEF,IAAI,IAAKF,MAAM,CAACK,IAAI,CAAC,WAAW,EAAEH,IAAI,CAAC,CAAC;IAErDF,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;MACzBC,IAAI,EAAE,eAAe;MACrBC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,OAAO,MAAM;MACXR,MAAM,CAACS,UAAU,CAAC,CAAC;MACnBhB,IAAI,CAACiB,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IACEwB,GAAG,EAAErB,OAAQ;IACbsB,KAAK,EAAE;MACLC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE;IACnB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAC9B,EAAA,CAnDuBD,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}