{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\";\nimport React from \"react\";\nimport \"./StudentDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst servers = [{\n  id: 1,\n  ip: \"172.184.216.215\",\n  description: \"Internship Management Project\"\n}, {\n  id: 2,\n  ip: \"20.245.171.127\",\n  description: \"Internship Management Project\"\n}, {\n  id: 3,\n  ip: \"192.168.1.100\",\n  description: \"Extra Testing Server\"\n}];\nexport default function StudentDashboard() {\n  const handleConnect = ip => {\n    // For now just open a placeholder tab\n    window.open(`http://${ip}`, \"_blank\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Connect With Your Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-list\",\n      children: servers.map(server => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Server \", server.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 16\n          }, this), \" \", server.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 16\n          }, this), \" \", server.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-btn\",\n            onClick: () => handleConnect(server.ip),\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, server.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","servers","id","ip","description","StudentDashboard","handleConnect","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","server","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./StudentDashboard.css\";\r\n\r\nconst servers = [\r\n  {\r\n    id: 1,\r\n    ip: \"172.184.216.215\",\r\n    description: \"Internship Management Project\",\r\n  },\r\n  {\r\n    id: 2,\r\n    ip: \"20.245.171.127\",\r\n    description: \"Internship Management Project\",\r\n  },\r\n  {\r\n    id: 3,\r\n    ip: \"192.168.1.100\",\r\n    description: \"Extra Testing Server\",\r\n  },\r\n];\r\n\r\nexport default function StudentDashboard() {\r\n  const handleConnect = (ip) => {\r\n    // For now just open a placeholder tab\r\n    window.open(`http://${ip}`, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1 className=\"dashboard-title\">Connect With Your Server</h1>\r\n      \r\n      <div className=\"server-list\">\r\n        {servers.map((server) => (\r\n          <div key={server.id} className=\"server-card\">\r\n            <h3>Server {server.id}</h3>\r\n            <p><strong>IP:</strong> {server.ip}</p>\r\n            <p><strong>Description:</strong> {server.description}</p>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" placeholder=\"Enter Username\" className=\"input-box\" />\r\n              <input type=\"password\" placeholder=\"Enter Password\" className=\"input-box\" />\r\n              <button className=\"connect-btn\" onClick={() => handleConnect(server.ip)}>\r\n                Connect\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}