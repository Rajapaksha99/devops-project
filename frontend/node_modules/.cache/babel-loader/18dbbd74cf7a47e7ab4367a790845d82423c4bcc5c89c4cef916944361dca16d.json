{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loadingServers, setLoadingServers] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Get user data from localStorage on component mount\n    const userData = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser(parsedUser);\n      } catch (err) {\n        console.error('Error parsing user data:', err);\n        handleLogout();\n        return;\n      }\n    }\n\n    // Redirect to login if no user data found\n    if (!userData || !token) {\n      window.location.href = '/login';\n      return;\n    }\n\n    // Fetch servers from API\n    fetchServers();\n  }, []);\n  const fetchServers = async () => {\n    try {\n      setLoadingServers(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/servers', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          // Token expired or invalid\n          handleLogout();\n          return;\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success && data.servers && data.servers.length > 0) {\n        // Filter only active servers for students\n        const activeServers = data.servers.filter(server => server.status === 'active');\n        setServers(activeServers);\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\n\n        if (activeServers.length === 0) {\n          setError(\"No active servers available\");\n        }\n      } else {\n        setError(\"No servers available\");\n      }\n    } catch (error) {\n      console.error('Error fetching servers:', error);\n      setError(`Failed to load servers: ${error.message}`);\n\n      // Fallback to hardcoded servers if API fails\n      const fallbackServers = [{\n        _id: 'fallback-1',\n        name: \"Server 1\",\n        ip: \"172.184.216.215\",\n        port: 22,\n        status: \"active\",\n        description: \"Fallback server - API connection failed\"\n      }, {\n        _id: 'fallback-2',\n        name: \"Server 2\",\n        ip: \"20.245.171.127\",\n        port: 22,\n        status: \"active\",\n        description: \"Fallback server - API connection failed\"\n      }, {\n        _id: 'fallback-3',\n        name: \"Server 3\",\n        ip: \"20.245.171.126\",\n        port: 22,\n        status: \"active\",\n        description: \"Fallback server - API connection failed\"\n      }, {\n        _id: 'fallback-4',\n        name: \"Server 4\",\n        ip: \"20.245.171.128\",\n        port: 22,\n        status: \"active\",\n        description: \"Fallback server - API connection failed\"\n      }];\n      setServers(fallbackServers);\n      setSelectedServer(fallbackServers[0]);\n    } finally {\n      setLoadingServers(false);\n    }\n  };\n  const handleConnect = () => {\n    if (!user || !username || !password) {\n      alert(\"Please enter both username and password\");\n      return;\n    }\n    if (!selectedServer) {\n      alert(\"Please select a server\");\n      return;\n    }\n    setIsConnecting(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Enhanced connection data matching server.js expectations\n      const connectionData = {\n        // Server connection details\n        host: selectedServer.ip,\n        username: username,\n        password: password,\n        serverName: selectedServer.name,\n        port: selectedServer.port || 22,\n        // User authentication and identification (matching server.js structure)\n        token: token || '',\n        userId: user.id || user._id || '',\n        userEmail: user.email || '',\n        userName: user.name || '',\n        registeredId: user.registered_id || '',\n        userRole: user.role || 'student',\n        // Legacy support for different data structures\n        user: {\n          id: user.id || user._id,\n          name: user.name,\n          email: user.email,\n          registered_id: user.registered_id,\n          role: user.role || 'student'\n        },\n        // Session metadata\n        connectionTime: new Date().toISOString(),\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        // Additional context\n        dashboardUrl: window.location.origin,\n        browserInfo: navigator.userAgent,\n        serverId: selectedServer._id || selectedServer.id\n      };\n\n      // Store in sessionStorage for secure data transfer\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\n\n      // Create URL parameters\n      const urlParams = new URLSearchParams({\n        sessionKey: sessionKey,\n        serverName: selectedServer.name,\n        serverIp: selectedServer.ip\n      });\n\n      // Create unique window name to allow multiple terminals\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\n\n      // Open new window\n      const newWindow = window.open(`/terminal?${urlParams.toString()}`, windowName, 'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no');\n\n      // Check if popup was blocked\n      if (!newWindow) {\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\n        setIsConnecting(false);\n        return;\n      }\n\n      // Send additional data via postMessage after window loads\n      const sendDataToTerminal = () => {\n        try {\n          newWindow.postMessage({\n            type: 'TERMINAL_CONNECTION_DATA',\n            data: connectionData\n          }, window.location.origin);\n        } catch (error) {\n          console.warn('Could not send data via postMessage:', error);\n        }\n      };\n\n      // Wait for the terminal window to load, then send data\n      setTimeout(sendDataToTerminal, 1000);\n\n      // Focus the new window\n      newWindow.focus();\n\n      // Cleanup: Clear sensitive data after connection\n      setTimeout(() => {\n        setPassword(\"\");\n        setIsConnecting(false);\n      }, 2000);\n\n      // Track the connection\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\n    } catch (error) {\n      console.error('Connection error:', error);\n      alert('Failed to establish connection. Please try again.');\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    // Clear all stored data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear any terminal session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n    window.location.href = '/login';\n  };\n\n  // Show loading state while user data is being retrieved\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            marginBottom: '10px',\n            color: '#495057'\n          },\n          children: \"Loading Dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#6c757d'\n          },\n          children: \"Please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '20px auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f8f9fa',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '30px',\n        paddingBottom: '15px',\n        borderBottom: '2px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: '#2c3e50'\n          },\n          children: \"Student Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            color: '#28a745',\n            fontWeight: 'bold'\n          },\n          children: [\"Welcome, \", user.name || 'Student']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), user.registered_id && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#6f42c1',\n            fontSize: '12px'\n          },\n          children: [\"Student ID: \", user.registered_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), user.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#6c757d',\n            fontSize: '12px'\n          },\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchServers,\n          disabled: loadingServers,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: loadingServers ? 'not-allowed' : 'pointer',\n            fontSize: '14px',\n            transition: 'background-color 0.3s ease'\n          },\n          onMouseOver: e => !loadingServers && (e.target.style.backgroundColor = '#138496'),\n          onMouseOut: e => !loadingServers && (e.target.style.backgroundColor = '#17a2b8'),\n          children: loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            transition: 'background-color 0.3s ease'\n          },\n          onMouseOver: e => e.target.style.backgroundColor = '#c82333',\n          onMouseOut: e => e.target.style.backgroundColor = '#dc3545',\n          children: \"\\uD83D\\uDEAA Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '4px',\n        marginBottom: '20px',\n        color: '#721c24'\n      },\n      children: [\"\\u26A0\\uFE0F \", error, error.includes('API connection failed') && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '5px',\n          fontSize: '12px'\n        },\n        children: \"Using fallback servers. Some features may be limited.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '8px',\n          fontWeight: 'bold',\n          color: '#495057'\n        },\n        children: \"Select Server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), loadingServers ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px',\n          backgroundColor: '#e9ecef',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          textAlign: 'center',\n          color: '#495057'\n        },\n        children: \"\\uD83D\\uDD04 Loading available servers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServer ? selectedServer.ip : '',\n        onChange: e => {\n          const server = servers.find(s => s.ip === e.target.value);\n          setSelectedServer(server);\n        },\n        style: {\n          width: '100%',\n          padding: '12px',\n          fontSize: '16px',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          backgroundColor: 'white',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Choose a server...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: server.ip,\n          children: [server.name, \" - \", server.ip, server.status !== 'active' ? ` (${server.status})` : '', server.max_connections ? ` [Max: ${server.max_connections}]` : '']\n        }, server._id || server.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px',\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"SSH Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter server username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"SSH Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter server password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleConnect(),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      disabled: isConnecting || !username || !password || !selectedServer || loadingServers,\n      style: {\n        width: '100%',\n        padding: '15px',\n        fontSize: '18px',\n        fontWeight: 'bold',\n        backgroundColor: isConnecting || !username || !password || !selectedServer || loadingServers ? '#6c757d' : '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '6px',\n        cursor: isConnecting || !username || !password || !selectedServer || loadingServers ? 'not-allowed' : 'pointer',\n        transition: 'background-color 0.3s ease',\n        marginBottom: '25px'\n      },\n      onMouseOver: e => {\n        if (!e.target.disabled) {\n          e.target.style.backgroundColor = '#218838';\n        }\n      },\n      onMouseOut: e => {\n        if (!e.target.disabled) {\n          e.target.style.backgroundColor = '#28a745';\n        }\n      },\n      children: isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), selectedServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '6px',\n        border: '1px solid #dee2e6',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#495057'\n        },\n        children: \"\\uD83D\\uDCCA Selected Server Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), \" \", selectedServer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IP Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), \" \", selectedServer.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), \" \", selectedServer.port || 22]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: selectedServer.status === 'active' ? '#28a745' : selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\n              marginLeft: '5px',\n              textTransform: 'capitalize',\n              fontWeight: 'bold'\n            },\n            children: [\"\\u25CF \", selectedServer.status || 'Active']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Student:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textTransform: 'capitalize',\n              color: '#6f42c1'\n            },\n            children: user.role || 'Student'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), selectedServer.max_connections && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Max Connections:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }, this), \" \", selectedServer.max_connections]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this), selectedServer.created_at && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), \" \", new Date(selectedServer.created_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this), selectedServer.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '12px',\n          padding: '10px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 15\n        }, this), \" \", selectedServer.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '6px',\n        border: '1px solid #bbdefb',\n        marginBottom: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#1976d2'\n        },\n        children: \"\\uD83D\\uDCCB Connection Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          margin: 0,\n          paddingLeft: '20px',\n          color: '#495057'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Select your assigned server from the dropdown menu above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Enter your SSH credentials (username and password for the server)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Click \\\"Connect to Server Terminal\\\" to open a new window with terminal access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Important:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), \" Make sure to allow popups for this website\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The terminal will automatically authenticate using your student profile data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '15px',\n        backgroundColor: '#fff3cd',\n        borderRadius: '6px',\n        border: '1px solid #ffeaa7'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          color: '#856404',\n          fontSize: '14px'\n        },\n        children: [\"\\uD83D\\uDD10 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Security Notice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 14\n        }, this), \" Always log out when finished and never share your SSH credentials. Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"Du4WXzVGEPhKwOTYRKQf5WM5VpE=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StudentDashboard","_s","servers","setServers","selectedServer","setSelectedServer","username","setUsername","password","setPassword","isConnecting","setIsConnecting","user","setUser","loadingServers","setLoadingServers","error","setError","userData","localStorage","getItem","token","parsedUser","JSON","parse","err","console","handleLogout","window","location","href","fetchServers","response","fetch","method","headers","ok","status","Error","data","json","success","length","activeServers","filter","server","message","fallbackServers","_id","name","ip","port","description","handleConnect","alert","connectionData","host","serverName","userId","id","userEmail","email","userName","registeredId","registered_id","userRole","role","connectionTime","Date","toISOString","sessionId","now","Math","random","toString","substr","dashboardUrl","origin","browserInfo","navigator","userAgent","serverId","sessionKey","sessionStorage","setItem","stringify","urlParams","URLSearchParams","serverIp","windowName","replace","newWindow","open","sendDataToTerminal","postMessage","type","warn","setTimeout","focus","log","removeItem","Object","keys","forEach","key","startsWith","style","display","justifyContent","alignItems","height","fontFamily","children","textAlign","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","paddingBottom","borderBottom","fontWeight","gap","onClick","disabled","border","cursor","transition","onMouseOver","e","target","onMouseOut","includes","marginTop","value","onChange","find","s","width","map","max_connections","gridTemplateColumns","placeholder","boxSizing","onKeyPress","marginLeft","textTransform","created_at","toLocaleDateString","paddingLeft","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst StudentDashboard = () => {\r\n  const [servers, setServers] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingServers, setLoadingServers] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get user data from localStorage on component mount\r\n    const userData = localStorage.getItem('user');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser(parsedUser);\r\n      } catch (err) {\r\n        console.error('Error parsing user data:', err);\r\n        handleLogout();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Redirect to login if no user data found\r\n    if (!userData || !token) {\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n\r\n    // Fetch servers from API\r\n    fetchServers();\r\n  }, []);\r\n\r\n  const fetchServers = async () => {\r\n    try {\r\n      setLoadingServers(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('/api/servers', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          // Token expired or invalid\r\n          handleLogout();\r\n          return;\r\n        }\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success && data.servers && data.servers.length > 0) {\r\n        // Filter only active servers for students\r\n        const activeServers = data.servers.filter(server => server.status === 'active');\r\n        setServers(activeServers);\r\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\r\n        \r\n        if (activeServers.length === 0) {\r\n          setError(\"No active servers available\");\r\n        }\r\n      } else {\r\n        setError(\"No servers available\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching servers:', error);\r\n      setError(`Failed to load servers: ${error.message}`);\r\n      \r\n      // Fallback to hardcoded servers if API fails\r\n      const fallbackServers = [\r\n        { \r\n          _id: 'fallback-1',\r\n          name: \"Server 1\", \r\n          ip: \"172.184.216.215\", \r\n          port: 22, \r\n          status: \"active\",\r\n          description: \"Fallback server - API connection failed\"\r\n        },\r\n        { \r\n          _id: 'fallback-2',\r\n          name: \"Server 2\", \r\n          ip: \"20.245.171.127\", \r\n          port: 22, \r\n          status: \"active\",\r\n          description: \"Fallback server - API connection failed\"\r\n        },\r\n        { \r\n          _id: 'fallback-3',\r\n          name: \"Server 3\", \r\n          ip: \"20.245.171.126\", \r\n          port: 22, \r\n          status: \"active\",\r\n          description: \"Fallback server - API connection failed\"\r\n        },\r\n        { \r\n          _id: 'fallback-4',\r\n          name: \"Server 4\", \r\n          ip: \"20.245.171.128\", \r\n          port: 22, \r\n          status: \"active\",\r\n          description: \"Fallback server - API connection failed\"\r\n        },\r\n      ];\r\n      setServers(fallbackServers);\r\n      setSelectedServer(fallbackServers[0]);\r\n    } finally {\r\n      setLoadingServers(false);\r\n    }\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    if (!user || !username || !password) {\r\n      alert(\"Please enter both username and password\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedServer) {\r\n      alert(\"Please select a server\");\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Enhanced connection data matching server.js expectations\r\n      const connectionData = {\r\n        // Server connection details\r\n        host: selectedServer.ip,\r\n        username: username,\r\n        password: password,\r\n        serverName: selectedServer.name,\r\n        port: selectedServer.port || 22,\r\n        \r\n        // User authentication and identification (matching server.js structure)\r\n        token: token || '',\r\n        userId: user.id || user._id || '',\r\n        userEmail: user.email || '',\r\n        userName: user.name || '',\r\n        registeredId: user.registered_id || '',\r\n        userRole: user.role || 'student',\r\n        \r\n        // Legacy support for different data structures\r\n        user: {\r\n          id: user.id || user._id,\r\n          name: user.name,\r\n          email: user.email,\r\n          registered_id: user.registered_id,\r\n          role: user.role || 'student'\r\n        },\r\n        \r\n        // Session metadata\r\n        connectionTime: new Date().toISOString(),\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        \r\n        // Additional context\r\n        dashboardUrl: window.location.origin,\r\n        browserInfo: navigator.userAgent,\r\n        serverId: selectedServer._id || selectedServer.id\r\n      };\r\n\r\n      // Store in sessionStorage for secure data transfer\r\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\r\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\r\n      \r\n      // Create URL parameters\r\n      const urlParams = new URLSearchParams({\r\n        sessionKey: sessionKey,\r\n        serverName: selectedServer.name,\r\n        serverIp: selectedServer.ip\r\n      });\r\n\r\n      // Create unique window name to allow multiple terminals\r\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\r\n      \r\n      // Open new window\r\n      const newWindow = window.open(\r\n        `/terminal?${urlParams.toString()}`, \r\n        windowName,\r\n        'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no'\r\n      );\r\n\r\n      // Check if popup was blocked\r\n      if (!newWindow) {\r\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n\r\n      // Send additional data via postMessage after window loads\r\n      const sendDataToTerminal = () => {\r\n        try {\r\n          newWindow.postMessage({\r\n            type: 'TERMINAL_CONNECTION_DATA',\r\n            data: connectionData\r\n          }, window.location.origin);\r\n        } catch (error) {\r\n          console.warn('Could not send data via postMessage:', error);\r\n        }\r\n      };\r\n\r\n      // Wait for the terminal window to load, then send data\r\n      setTimeout(sendDataToTerminal, 1000);\r\n      \r\n      // Focus the new window\r\n      newWindow.focus();\r\n\r\n      // Cleanup: Clear sensitive data after connection\r\n      setTimeout(() => {\r\n        setPassword(\"\");\r\n        setIsConnecting(false);\r\n      }, 2000);\r\n\r\n      // Track the connection\r\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\r\n\r\n    } catch (error) {\r\n      console.error('Connection error:', error);\r\n      alert('Failed to establish connection. Please try again.');\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear all stored data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear any terminal session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // Show loading state while user data is being retrieved\r\n  if (!user) {\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <div style={{ \r\n            fontSize: '18px', \r\n            marginBottom: '10px',\r\n            color: '#495057'\r\n          }}>\r\n            Loading Dashboard...\r\n          </div>\r\n          <div style={{ color: '#6c757d' }}>Please wait</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      maxWidth: '800px', \r\n      margin: '20px auto', \r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f8f9fa',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        marginBottom: '30px',\r\n        paddingBottom: '15px',\r\n        borderBottom: '2px solid #dee2e6'\r\n      }}>\r\n        <div>\r\n          <h2 style={{ margin: 0, color: '#2c3e50' }}>Student Dashboard</h2>\r\n          <p style={{ margin: '5px 0 0 0', color: '#28a745', fontWeight: 'bold' }}>\r\n            Welcome, {user.name || 'Student'}\r\n          </p>\r\n          {user.registered_id && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#6f42c1', fontSize: '12px' }}>\r\n              Student ID: {user.registered_id}\r\n            </p>\r\n          )}\r\n          {user.email && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#6c757d', fontSize: '12px' }}>\r\n              Email: {user.email}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          <button \r\n            onClick={fetchServers}\r\n            disabled={loadingServers}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: loadingServers ? 'not-allowed' : 'pointer',\r\n              fontSize: '14px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => !loadingServers && (e.target.style.backgroundColor = '#138496')}\r\n            onMouseOut={(e) => !loadingServers && (e.target.style.backgroundColor = '#17a2b8')}\r\n          >\r\n            {loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'}\r\n          </button>\r\n          <button \r\n            onClick={handleLogout}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: '#dc3545',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => e.target.style.backgroundColor = '#c82333'}\r\n            onMouseOut={(e) => e.target.style.backgroundColor = '#dc3545'}\r\n          >\r\n            🚪 Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div style={{\r\n          padding: '12px',\r\n          backgroundColor: '#f8d7da',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '4px',\r\n          marginBottom: '20px',\r\n          color: '#721c24'\r\n        }}>\r\n          ⚠️ {error}\r\n          {error.includes('API connection failed') && (\r\n            <div style={{ marginTop: '5px', fontSize: '12px' }}>\r\n              Using fallback servers. Some features may be limited.\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Server Selection */}\r\n      <div style={{ marginBottom: '25px' }}>\r\n        <label style={{ \r\n          display: 'block', \r\n          marginBottom: '8px', \r\n          fontWeight: 'bold',\r\n          color: '#495057'\r\n        }}>\r\n          Select Server:\r\n        </label>\r\n        {loadingServers ? (\r\n          <div style={{\r\n            padding: '12px',\r\n            backgroundColor: '#e9ecef',\r\n            border: '2px solid #ced4da',\r\n            borderRadius: '6px',\r\n            textAlign: 'center',\r\n            color: '#495057'\r\n          }}>\r\n            🔄 Loading available servers...\r\n          </div>\r\n        ) : (\r\n          <select\r\n            value={selectedServer ? selectedServer.ip : ''}\r\n            onChange={(e) => {\r\n              const server = servers.find((s) => s.ip === e.target.value);\r\n              setSelectedServer(server);\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              backgroundColor: 'white',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>Choose a server...</option>\r\n            {servers.map((server) => (\r\n              <option key={server._id || server.ip} value={server.ip}>\r\n                {server.name} - {server.ip} \r\n                {server.status !== 'active' ? ` (${server.status})` : ''}\r\n                {server.max_connections ? ` [Max: ${server.max_connections}]` : ''}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n\r\n      {/* SSH Credentials */}\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: '1fr 1fr', \r\n        gap: '20px', \r\n        marginBottom: '25px' \r\n      }}>\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            SSH Username:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter server username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            SSH Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter server password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleConnect()}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connect Button */}\r\n      <button \r\n        onClick={handleConnect}\r\n        disabled={isConnecting || !username || !password || !selectedServer || loadingServers}\r\n        style={{\r\n          width: '100%',\r\n          padding: '15px',\r\n          fontSize: '18px',\r\n          fontWeight: 'bold',\r\n          backgroundColor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? '#6c757d' : '#28a745',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '6px',\r\n          cursor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? 'not-allowed' : 'pointer',\r\n          transition: 'background-color 0.3s ease',\r\n          marginBottom: '25px'\r\n        }}\r\n        onMouseOver={(e) => {\r\n          if (!e.target.disabled) {\r\n            e.target.style.backgroundColor = '#218838';\r\n          }\r\n        }}\r\n        onMouseOut={(e) => {\r\n          if (!e.target.disabled) {\r\n            e.target.style.backgroundColor = '#28a745';\r\n          }\r\n        }}\r\n      >\r\n        {isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'}\r\n      </button>\r\n\r\n      {/* Server Info Card */}\r\n      {selectedServer && (\r\n        <div style={{ \r\n          backgroundColor: 'white',\r\n          padding: '20px',\r\n          borderRadius: '6px',\r\n          border: '1px solid #dee2e6',\r\n          marginBottom: '20px'\r\n        }}>\r\n          <h4 style={{ margin: '0 0 15px 0', color: '#495057' }}>\r\n            📊 Selected Server Information\r\n          </h4>\r\n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n            <div>\r\n              <strong>Server Name:</strong> {selectedServer.name}\r\n            </div>\r\n            <div>\r\n              <strong>IP Address:</strong> {selectedServer.ip}\r\n            </div>\r\n            <div>\r\n              <strong>Port:</strong> {selectedServer.port || 22}\r\n            </div>\r\n            <div>\r\n              <strong>Status:</strong> \r\n              <span style={{ \r\n                color: selectedServer.status === 'active' ? '#28a745' : \r\n                      selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\r\n                marginLeft: '5px',\r\n                textTransform: 'capitalize',\r\n                fontWeight: 'bold'\r\n              }}>\r\n                ● {selectedServer.status || 'Active'}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <strong>Student:</strong> {user.name}\r\n            </div>\r\n            <div>\r\n              <strong>Role:</strong> <span style={{ textTransform: 'capitalize', color: '#6f42c1' }}>{user.role || 'Student'}</span>\r\n            </div>\r\n            {selectedServer.max_connections && (\r\n              <div>\r\n                <strong>Max Connections:</strong> {selectedServer.max_connections}\r\n              </div>\r\n            )}\r\n            {selectedServer.created_at && (\r\n              <div>\r\n                <strong>Server Created:</strong> {new Date(selectedServer.created_at).toLocaleDateString()}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {selectedServer.description && (\r\n            <div style={{ marginTop: '12px', padding: '10px', backgroundColor: '#f8f9fa', borderRadius: '4px' }}>\r\n              <strong>Description:</strong> {selectedServer.description}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        padding: '20px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #bbdefb',\r\n        marginBottom: '15px'\r\n      }}>\r\n        <h4 style={{ margin: '0 0 15px 0', color: '#1976d2' }}>📋 Connection Instructions:</h4>\r\n        <ol style={{ margin: 0, paddingLeft: '20px', color: '#495057' }}>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Select your assigned server from the dropdown menu above\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Enter your SSH credentials (username and password for the server)\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Click \"Connect to Server Terminal\" to open a new window with terminal access\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            <strong>Important:</strong> Make sure to allow popups for this website\r\n          </li>\r\n          <li>\r\n            The terminal will automatically authenticate using your student profile data\r\n          </li>\r\n        </ol>\r\n      </div>\r\n\r\n      {/* Enhanced Security Warning */}\r\n      <div style={{ \r\n        padding: '15px', \r\n        backgroundColor: '#fff3cd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #ffeaa7'\r\n      }}>\r\n        <p style={{ margin: 0, color: '#856404', fontSize: '14px' }}>\r\n          🔐 <strong>Security Notice:</strong> Always log out when finished and never share your SSH credentials. \r\n          Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}