{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/StudentDashboard.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\"; // your backend URL\n\nconst servers = [{\n  name: \"Server 1\",\n  ip: \"172.184.216.215\"\n}, {\n  name: \"Server 2\",\n  ip: \"20.245.171.127\"\n}, {\n  name: \"Server 3\",\n  ip: \"192.168.1.10\"\n}, {\n  name: \"Server 4\",\n  ip: \"192.168.1.11\"\n}, {\n  name: \"Server 5\",\n  ip: \"192.168.1.12\"\n}];\nconst StudentDashboard = () => {\n  _s();\n  const [selectedServer, setSelectedServer] = useState(servers[0]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(SERVER_URL);\n    setSocket(newSocket);\n    return () => newSocket.disconnect();\n  }, []);\n  const handleConnect = () => {\n    if (!socket) return;\n    socket.emit(\"ssh-connect\", {\n      host: selectedServer.ip,\n      username,\n      password\n    });\n\n    // Open a new window for terminal\n    const terminalWindow = window.open(\"\", \"_blank\");\n    if (!terminalWindow) return;\n    terminalWindow.document.write(\"<h3>Terminal Output</h3><pre id='terminal'></pre>\");\n    socket.on(\"ssh-output\", data => {\n      const pre = terminalWindow.document.getElementById(\"terminal\");\n      pre.textContent += data;\n      pre.scrollTop = pre.scrollHeight;\n    });\n\n    // Send commands from prompt (optional)\n    terminalWindow.addEventListener(\"keydown\", e => {\n      if (e.key === \"Enter\") {\n        const input = prompt(\"Enter command:\");\n        if (input) socket.emit(\"ssh-input\", input + \"\\n\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connect to your server:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServer.ip,\n        onChange: e => setSelectedServer(servers.find(s => s.ip === e.target.value)),\n        children: servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: server.ip,\n          children: [server.name, \" - \", server.ip]\n        }, server.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"3wX584hfrMQsE7vOTsKMnTjID8s=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","SERVER_URL","servers","name","ip","StudentDashboard","_s","selectedServer","setSelectedServer","username","setUsername","password","setPassword","socket","setSocket","newSocket","disconnect","handleConnect","emit","host","terminalWindow","window","open","document","write","on","data","pre","getElementById","textContent","scrollTop","scrollHeight","addEventListener","e","key","input","prompt","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","find","s","target","map","server","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["// src/pages/StudentDashboard.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\"; // your backend URL\r\n\r\nconst servers = [\r\n  { name: \"Server 1\", ip: \"172.184.216.215\" },\r\n  { name: \"Server 2\", ip: \"20.245.171.127\" },\r\n  { name: \"Server 3\", ip: \"192.168.1.10\" },\r\n  { name: \"Server 4\", ip: \"192.168.1.11\" },\r\n  { name: \"Server 5\", ip: \"192.168.1.12\" },\r\n];\r\n\r\nconst StudentDashboard = () => {\r\n  const [selectedServer, setSelectedServer] = useState(servers[0]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(SERVER_URL);\r\n    setSocket(newSocket);\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    if (!socket) return;\r\n    socket.emit(\"ssh-connect\", {\r\n      host: selectedServer.ip,\r\n      username,\r\n      password,\r\n    });\r\n\r\n    // Open a new window for terminal\r\n    const terminalWindow = window.open(\"\", \"_blank\");\r\n    if (!terminalWindow) return;\r\n\r\n    terminalWindow.document.write(\"<h3>Terminal Output</h3><pre id='terminal'></pre>\");\r\n\r\n    socket.on(\"ssh-output\", (data) => {\r\n      const pre = terminalWindow.document.getElementById(\"terminal\");\r\n      pre.textContent += data;\r\n      pre.scrollTop = pre.scrollHeight;\r\n    });\r\n\r\n    // Send commands from prompt (optional)\r\n    terminalWindow.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Enter\") {\r\n        const input = prompt(\"Enter command:\");\r\n        if (input) socket.emit(\"ssh-input\", input + \"\\n\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\r\n      <h2>Student Dashboard</h2>\r\n      <p>Connect to your server:</p>\r\n\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <label>Server:</label>\r\n        <select\r\n          value={selectedServer.ip}\r\n          onChange={(e) =>\r\n            setSelectedServer(servers.find((s) => s.ip === e.target.value))\r\n          }\r\n        >\r\n          {servers.map((server) => (\r\n            <option key={server.ip} value={server.ip}>\r\n              {server.name} - {server.ip}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Enter username\"\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter password\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleConnect}>Connect</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}