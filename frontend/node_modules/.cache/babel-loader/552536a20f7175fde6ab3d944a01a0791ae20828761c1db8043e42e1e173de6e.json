{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentDashboard() {\n  _s();\n  const termRef = useRef();\n  const socketRef = useRef();\n  useEffect(() => {\n    const term = new Terminal();\n    term.open(termRef.current);\n    const socket = io(\"http://localhost:5000\");\n    socketRef.current = socket;\n    socket.on(\"ssh-output\", data => term.write(data));\n    term.onData(data => socket.emit(\"ssh-input\", data));\n\n    // connect when user provides credentials\n    socket.emit(\"ssh-connect\", {\n      host: \"192.168.1.100\",\n      // Example IP\n      username: \"test\",\n      password: \"1234\"\n    });\n    return () => {\n      socket.disconnect();\n      term.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: termRef,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(StudentDashboard, \"iHRwzD3Yc1v0qnOgSZFLogXEj6s=\");\n_c = StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","io","Terminal","jsxDEV","_jsxDEV","StudentDashboard","_s","termRef","socketRef","term","open","current","socket","on","data","write","onData","emit","host","username","password","disconnect","dispose","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nexport default function StudentDashboard() {\r\n  const termRef = useRef();\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const term = new Terminal();\r\n    term.open(termRef.current);\r\n\r\n    const socket = io(\"http://localhost:5000\");\r\n    socketRef.current = socket;\r\n\r\n    socket.on(\"ssh-output\", (data) => term.write(data));\r\n    term.onData((data) => socket.emit(\"ssh-input\", data));\r\n\r\n    // connect when user provides credentials\r\n    socket.emit(\"ssh-connect\", {\r\n      host: \"192.168.1.100\", // Example IP\r\n      username: \"test\",\r\n      password: \"1234\",\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      term.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={termRef} style={{ height: \"500px\", width: \"100%\" }} />;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGP,MAAM,CAAC,CAAC;EACxB,MAAMQ,SAAS,GAAGR,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAG,IAAIP,QAAQ,CAAC,CAAC;IAC3BO,IAAI,CAACC,IAAI,CAACH,OAAO,CAACI,OAAO,CAAC;IAE1B,MAAMC,MAAM,GAAGX,EAAE,CAAC,uBAAuB,CAAC;IAC1CO,SAAS,CAACG,OAAO,GAAGC,MAAM;IAE1BA,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAKL,IAAI,CAACM,KAAK,CAACD,IAAI,CAAC,CAAC;IACnDL,IAAI,CAACO,MAAM,CAAEF,IAAI,IAAKF,MAAM,CAACK,IAAI,CAAC,WAAW,EAAEH,IAAI,CAAC,CAAC;;IAErD;IACAF,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;MACzBC,IAAI,EAAE,eAAe;MAAE;MACvBC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,OAAO,MAAM;MACXR,MAAM,CAACS,UAAU,CAAC,CAAC;MACnBZ,IAAI,CAACa,OAAO,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlB,OAAA;IAAKmB,GAAG,EAAEhB,OAAQ;IAACiB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE;AAACxB,EAAA,CA5BuBD,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}