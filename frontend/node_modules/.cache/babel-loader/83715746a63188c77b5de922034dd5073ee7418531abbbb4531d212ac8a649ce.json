{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentDashboard() {\n  _s();\n  const termRef = useRef(null);\n  const socketRef = useRef(null);\n  const terminalInstance = useRef(null);\n  const fitAddonRef = useRef(null);\n  const [host, setHost] = useState(\"192.168.1.100\");\n  const [username, setUsername] = useState(\"test\");\n  const [password, setPassword] = useState(\"1234\");\n  useEffect(() => {\n    if (!termRef.current) return;\n\n    // 1️⃣ Initialize terminal and FitAddon\n    const term = new Terminal({\n      cursorBlink: true\n    });\n    const fitAddon = new FitAddon();\n    terminalInstance.current = term;\n    fitAddonRef.current = fitAddon;\n    term.loadAddon(fitAddon);\n\n    // 2️⃣ Open terminal only after ref is defined\n    term.open(termRef.current);\n\n    // 3️⃣ Safe fit: delay slightly to ensure container is rendered\n    setTimeout(() => {\n      fitAddon.fit();\n    }, 50);\n\n    // 4️⃣ Re-fit on window resize\n    const handleResize = () => fitAddon.fit();\n    window.addEventListener(\"resize\", handleResize);\n\n    // 5️⃣ Socket.io setup\n    const socket = io(\"http://localhost:5000\");\n    socketRef.current = socket;\n    socket.on(\"ssh-output\", data => term.write(data));\n    term.onData(data => socket.emit(\"ssh-input\", data));\n    return () => {\n      socket.disconnect();\n      term.dispose();\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const handleConnect = () => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"ssh-connect\", {\n        host,\n        username,\n        password\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Dashboard - Connect to Your Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Server IP\",\n        value: host,\n        onChange: e => setHost(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: termRef,\n      style: {\n        height: \"500px\",\n        width: \"100%\",\n        background: \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"O9CXGKDEFD24Ec0DxCe2OcEh37c=\");\n_c = StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Terminal","FitAddon","jsxDEV","_jsxDEV","StudentDashboard","_s","termRef","socketRef","terminalInstance","fitAddonRef","host","setHost","username","setUsername","password","setPassword","current","term","cursorBlink","fitAddon","loadAddon","open","setTimeout","fit","handleResize","window","addEventListener","socket","on","data","write","onData","emit","disconnect","dispose","removeEventListener","handleConnect","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","marginRight","onClick","ref","height","width","background","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nexport default function StudentDashboard() {\r\n  const termRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const terminalInstance = useRef(null);\r\n  const fitAddonRef = useRef(null);\r\n\r\n  const [host, setHost] = useState(\"192.168.1.100\");\r\n  const [username, setUsername] = useState(\"test\");\r\n  const [password, setPassword] = useState(\"1234\");\r\n\r\n  useEffect(() => {\r\n    if (!termRef.current) return;\r\n\r\n    // 1️⃣ Initialize terminal and FitAddon\r\n    const term = new Terminal({ cursorBlink: true });\r\n    const fitAddon = new FitAddon();\r\n    terminalInstance.current = term;\r\n    fitAddonRef.current = fitAddon;\r\n\r\n    term.loadAddon(fitAddon);\r\n\r\n    // 2️⃣ Open terminal only after ref is defined\r\n    term.open(termRef.current);\r\n\r\n    // 3️⃣ Safe fit: delay slightly to ensure container is rendered\r\n    setTimeout(() => {\r\n      fitAddon.fit();\r\n    }, 50);\r\n\r\n    // 4️⃣ Re-fit on window resize\r\n    const handleResize = () => fitAddon.fit();\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // 5️⃣ Socket.io setup\r\n    const socket = io(\"http://localhost:5000\");\r\n    socketRef.current = socket;\r\n\r\n    socket.on(\"ssh-output\", (data) => term.write(data));\r\n    term.onData((data) => socket.emit(\"ssh-input\", data));\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      term.dispose();\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit(\"ssh-connect\", { host, username, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Student Dashboard - Connect to Your Server</h1>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Server IP\"\r\n          value={host}\r\n          onChange={(e) => setHost(e.target.value)}\r\n          style={{ marginRight: \"10px\" }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          style={{ marginRight: \"10px\" }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          style={{ marginRight: \"10px\" }}\r\n        />\r\n        <button onClick={handleConnect}>Connect</button>\r\n      </div>\r\n\r\n      <div\r\n        ref={termRef}\r\n        style={{ height: \"500px\", width: \"100%\", background: \"black\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}