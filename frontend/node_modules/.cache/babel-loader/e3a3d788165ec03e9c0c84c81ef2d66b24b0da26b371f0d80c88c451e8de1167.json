{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst servers = [{\n  name: \"Server 1\",\n  ip: \"172.184.216.215\"\n}, {\n  name: \"Server 2\",\n  ip: \"20.245.171.127\"\n}];\nconst StudentDashboard = () => {\n  _s();\n  const [selectedServer, setSelectedServer] = useState(servers[0]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const terminalRef = useRef();\n  useEffect(() => {\n    const newSocket = io(SERVER_URL);\n    setSocket(newSocket);\n    const term = new Terminal();\n    term.open(terminalRef.current);\n    newSocket.on(\"ssh-output\", data => {\n      term.write(data);\n    });\n    term.onData(input => {\n      newSocket.emit(\"ssh-input\", input);\n    });\n    return () => newSocket.disconnect();\n  }, []);\n  const handleConnect = () => {\n    const terminalUrl = `/ssh-terminal?host=${selectedServer.ip}&username=${username}&password=${password}`;\n    window.open(terminalUrl, \"_blank\", \"width=800,height=600\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedServer.ip,\n      onChange: e => setSelectedServer(servers.find(s => s.ip === e.target.value)),\n      children: servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: server.ip,\n        children: [server.name, \" - \", server.ip]\n      }, server.ip, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        width: \"100%\",\n        height: \"500px\",\n        marginTop: \"20px\",\n        background: \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"2GrvBYfOooyUPL0uZ1s8LwBE5jk=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Terminal","jsxDEV","_jsxDEV","SERVER_URL","servers","name","ip","StudentDashboard","_s","selectedServer","setSelectedServer","username","setUsername","password","setPassword","socket","setSocket","terminalRef","newSocket","term","open","current","on","data","write","onData","input","emit","disconnect","handleConnect","terminalUrl","window","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","find","s","target","map","server","type","placeholder","onClick","ref","style","width","height","marginTop","background","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst servers = [\r\n  { name: \"Server 1\", ip: \"172.184.216.215\" },\r\n  { name: \"Server 2\", ip: \"20.245.171.127\" },\r\n];\r\n\r\nconst StudentDashboard = () => {\r\n  const [selectedServer, setSelectedServer] = useState(servers[0]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const terminalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(SERVER_URL);\r\n    setSocket(newSocket);\r\n    const term = new Terminal();\r\n    term.open(terminalRef.current);\r\n\r\n    newSocket.on(\"ssh-output\", (data) => {\r\n      term.write(data);\r\n    });\r\n\r\n    term.onData((input) => {\r\n      newSocket.emit(\"ssh-input\", input);\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, []);\r\n\r\nconst handleConnect = () => {\r\n  const terminalUrl = `/ssh-terminal?host=${selectedServer.ip}&username=${username}&password=${password}`;\r\n  window.open(terminalUrl, \"_blank\", \"width=800,height=600\");\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Student Dashboard</h2>\r\n      <select\r\n        value={selectedServer.ip}\r\n        onChange={(e) =>\r\n          setSelectedServer(servers.find((s) => s.ip === e.target.value))\r\n        }\r\n      >\r\n        {servers.map((server) => (\r\n          <option key={server.ip} value={server.ip}>\r\n            {server.name} - {server.ip}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n\r\n      <button onClick={handleConnect}>Connect</button>\r\n\r\n      <div\r\n        ref={terminalRef}\r\n        style={{ width: \"100%\", height: \"500px\", marginTop: \"20px\", background: \"black\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}