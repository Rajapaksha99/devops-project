{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst TerminalPage = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionData, setConnectionData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\n  const terminalRef = useRef(null);\n  const terminalInstance = useRef(null);\n  const fitAddonRef = useRef(null);\n  const socketRef = useRef(null);\n  const getStoredUserData = useCallback(() => {\n    try {\n      const userData = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (userData) {\n        const user = JSON.parse(userData);\n        return {\n          token: token || '',\n          userId: user.id || '',\n          userEmail: user.email || '',\n          userName: user.name || '',\n          registeredId: user.registered_id || '',\n          userRole: user.role || 'student'\n        };\n      }\n    } catch (err) {\n      console.warn(\"Could not retrieve stored user data:\", err);\n    }\n    return {};\n  }, []);\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\n    if (!socketInstance || !data) {\n      term === null || term === void 0 ? void 0 : term.write(`❌ Cannot connect: Missing connection data\\r\\n`);\n      return;\n    }\n    term === null || term === void 0 ? void 0 : term.write(`🔗 Connecting to SSH server ${data.host}...\\r\\n`);\n    socketInstance.emit(\"ssh-connect\", {\n      host: data.host,\n      username: data.username,\n      password: data.password,\n      user_data: {\n        id: data.userId,\n        name: data.userName,\n        email: data.userEmail,\n        role: data.userRole,\n        registered_id: data.registeredId\n      },\n      server_name: data.serverName || data.host\n    });\n  }, []);\n  const cleanupConnection = useCallback(() => {\n    var _socketRef$current, _terminalInstance$cur;\n    (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.disconnect();\n    (_terminalInstance$cur = terminalInstance.current) === null || _terminalInstance$cur === void 0 ? void 0 : _terminalInstance$cur.dispose();\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) sessionStorage.removeItem(key);\n    });\n  }, []);\n  const initializeTerminal = useCallback(data => {\n    setConnectionStatus(\"connecting\");\n\n    // Initialize terminal only once\n    if (!terminalInstance.current) {\n      var _fitAddonRef$current;\n      terminalInstance.current = new Terminal({\n        cursorBlink: true,\n        fontSize: 14,\n        fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n        rows: 30,\n        cols: 120,\n        scrollback: 1000,\n        convertEol: true,\n        theme: {\n          background: '#000000',\n          foreground: '#ffffff',\n          cursor: '#ffffff'\n        }\n      });\n      fitAddonRef.current = new FitAddon();\n      terminalInstance.current.loadAddon(fitAddonRef.current);\n      terminalInstance.current.open(terminalRef.current);\n      (_fitAddonRef$current = fitAddonRef.current) === null || _fitAddonRef$current === void 0 ? void 0 : _fitAddonRef$current.fit();\n      terminalInstance.current.write(\"🚀 Initializing terminal...\\r\\n\");\n    }\n\n    // Initialize socket\n    const socket = io(SERVER_URL, {\n      query: {\n        userId: data.userId || '',\n        userRole: data.userRole || 'student'\n      },\n      timeout: 10000,\n      forceNew: true\n    });\n    socketRef.current = socket;\n    socket.on(\"connect\", () => {\n      var _terminalInstance$cur2;\n      setIsConnected(true);\n      setConnectionStatus(\"connected\");\n      (_terminalInstance$cur2 = terminalInstance.current) === null || _terminalInstance$cur2 === void 0 ? void 0 : _terminalInstance$cur2.write(`✅ Socket connected\\r\\n`);\n      connectToSSHServer(socket, data, terminalInstance.current);\n    });\n    socket.on(\"ssh-output\", outputData => {\n      var _terminalInstance$cur3;\n      (_terminalInstance$cur3 = terminalInstance.current) === null || _terminalInstance$cur3 === void 0 ? void 0 : _terminalInstance$cur3.write(outputData);\n    });\n    socket.on(\"ssh-connected\", info => {\n      var _terminalInstance$cur4;\n      setConnectionStatus(\"ssh-connected\");\n      (_terminalInstance$cur4 = terminalInstance.current) === null || _terminalInstance$cur4 === void 0 ? void 0 : _terminalInstance$cur4.write(`🎉 SSH Connected: ${info.host}\\r\\n`);\n    });\n    socket.on(\"ssh-error\", err => {\n      var _terminalInstance$cur5;\n      const msg = err.message || err;\n      (_terminalInstance$cur5 = terminalInstance.current) === null || _terminalInstance$cur5 === void 0 ? void 0 : _terminalInstance$cur5.write(`❌ SSH Error: ${msg}\\r\\n`);\n      setError(msg);\n      setConnectionStatus(\"error\");\n    });\n    socket.on(\"disconnect\", reason => {\n      var _terminalInstance$cur6;\n      setIsConnected(false);\n      setConnectionStatus(\"disconnected\");\n      (_terminalInstance$cur6 = terminalInstance.current) === null || _terminalInstance$cur6 === void 0 ? void 0 : _terminalInstance$cur6.write(`🔌 Disconnected: ${reason}\\r\\n`);\n    });\n\n    // Terminal input\n    terminalInstance.current.onData(input => {\n      if (socket.connected) {\n        socket.emit(\"ssh-input\", input);\n      } else {\n        var _terminalInstance$cur7;\n        (_terminalInstance$cur7 = terminalInstance.current) === null || _terminalInstance$cur7 === void 0 ? void 0 : _terminalInstance$cur7.write(`❌ Not connected. Cannot send: ${input}\\r\\n`);\n      }\n    });\n\n    // Handle resize safely\n    const handleResize = () => {\n      var _fitAddonRef$current2;\n      return (_fitAddonRef$current2 = fitAddonRef.current) === null || _fitAddonRef$current2 === void 0 ? void 0 : _fitAddonRef$current2.fit();\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [connectToSSHServer]);\n  useEffect(() => {\n    const storedData = getStoredUserData();\n    if (storedData.userId) {\n      setConnectionData(storedData);\n      initializeTerminal(storedData);\n    } else {\n      setError(\"No connection data found. Please login first.\");\n    }\n    return () => cleanupConnection();\n  }, [getStoredUserData, initializeTerminal, cleanupConnection]);\n  const handleDisconnect = () => {\n    var _socketRef$current2;\n    (_socketRef$current2 = socketRef.current) === null || _socketRef$current2 === void 0 ? void 0 : _socketRef$current2.disconnect();\n    cleanupConnection();\n    window.close();\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: '#2c3e50',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u26A0\\uFE0F Terminal Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.close(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"#2c3e50\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px',\n        color: 'white',\n        background: '#34495e'\n      },\n      children: [\"\\uD83D\\uDDA5\\uFE0F Terminal | Status: \", connectionStatus, \" | \", isConnected ? \"Connected\" : \"Disconnected\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDisconnect,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"\\u274C Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        flex: 1,\n        background: '#000',\n        margin: '5px',\n        border: '1px solid #34495e'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"J6Wxib9Picj1TdoASwNBkzuaMUY=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","Terminal","FitAddon","jsxDEV","_jsxDEV","SERVER_URL","TerminalPage","_s","isConnected","setIsConnected","connectionData","setConnectionData","error","setError","connectionStatus","setConnectionStatus","terminalRef","terminalInstance","fitAddonRef","socketRef","getStoredUserData","userData","localStorage","getItem","token","user","JSON","parse","userId","id","userEmail","email","userName","name","registeredId","registered_id","userRole","role","err","console","warn","connectToSSHServer","socketInstance","data","term","write","host","emit","username","password","user_data","server_name","serverName","cleanupConnection","_socketRef$current","_terminalInstance$cur","current","disconnect","dispose","Object","keys","sessionStorage","forEach","key","startsWith","removeItem","initializeTerminal","_fitAddonRef$current","cursorBlink","fontSize","fontFamily","rows","cols","scrollback","convertEol","theme","background","foreground","cursor","loadAddon","open","fit","socket","query","timeout","forceNew","on","_terminalInstance$cur2","outputData","_terminalInstance$cur3","info","_terminalInstance$cur4","_terminalInstance$cur5","msg","message","reason","_terminalInstance$cur6","onData","input","connected","_terminalInstance$cur7","handleResize","_fitAddonRef$current2","window","addEventListener","removeEventListener","storedData","handleDisconnect","_socketRef$current2","close","style","height","display","justifyContent","alignItems","color","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexDirection","backgroundColor","padding","marginLeft","ref","flex","margin","border","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst TerminalPage = () => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\r\n  \r\n  const terminalRef = useRef(null);\r\n  const terminalInstance = useRef(null);\r\n  const fitAddonRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n\r\n  const getStoredUserData = useCallback(() => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token');\r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        return {\r\n          token: token || '',\r\n          userId: user.id || '',\r\n          userEmail: user.email || '',\r\n          userName: user.name || '',\r\n          registeredId: user.registered_id || '',\r\n          userRole: user.role || 'student'\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.warn(\"Could not retrieve stored user data:\", err);\r\n    }\r\n    return {};\r\n  }, []);\r\n\r\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\r\n    if (!socketInstance || !data) {\r\n      term?.write(`❌ Cannot connect: Missing connection data\\r\\n`);\r\n      return;\r\n    }\r\n    term?.write(`🔗 Connecting to SSH server ${data.host}...\\r\\n`);\r\n    socketInstance.emit(\"ssh-connect\", {\r\n      host: data.host,\r\n      username: data.username,\r\n      password: data.password,\r\n      user_data: {\r\n        id: data.userId,\r\n        name: data.userName,\r\n        email: data.userEmail,\r\n        role: data.userRole,\r\n        registered_id: data.registeredId\r\n      },\r\n      server_name: data.serverName || data.host\r\n    });\r\n  }, []);\r\n\r\n  const cleanupConnection = useCallback(() => {\r\n    socketRef.current?.disconnect();\r\n    terminalInstance.current?.dispose();\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) sessionStorage.removeItem(key);\r\n    });\r\n  }, []);\r\n\r\n  const initializeTerminal = useCallback((data) => {\r\n    setConnectionStatus(\"connecting\");\r\n\r\n    // Initialize terminal only once\r\n    if (!terminalInstance.current) {\r\n      terminalInstance.current = new Terminal({\r\n        cursorBlink: true,\r\n        fontSize: 14,\r\n        fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n        rows: 30,\r\n        cols: 120,\r\n        scrollback: 1000,\r\n        convertEol: true,\r\n        theme: {\r\n          background: '#000000',\r\n          foreground: '#ffffff',\r\n          cursor: '#ffffff'\r\n        }\r\n      });\r\n      fitAddonRef.current = new FitAddon();\r\n      terminalInstance.current.loadAddon(fitAddonRef.current);\r\n      terminalInstance.current.open(terminalRef.current);\r\n      fitAddonRef.current?.fit();\r\n      terminalInstance.current.write(\"🚀 Initializing terminal...\\r\\n\");\r\n    }\r\n\r\n    // Initialize socket\r\n    const socket = io(SERVER_URL, {\r\n      query: { userId: data.userId || '', userRole: data.userRole || 'student' },\r\n      timeout: 10000,\r\n      forceNew: true\r\n    });\r\n    socketRef.current = socket;\r\n\r\n    socket.on(\"connect\", () => {\r\n      setIsConnected(true);\r\n      setConnectionStatus(\"connected\");\r\n      terminalInstance.current?.write(`✅ Socket connected\\r\\n`);\r\n      connectToSSHServer(socket, data, terminalInstance.current);\r\n    });\r\n\r\n    socket.on(\"ssh-output\", (outputData) => {\r\n      terminalInstance.current?.write(outputData);\r\n    });\r\n\r\n    socket.on(\"ssh-connected\", (info) => {\r\n      setConnectionStatus(\"ssh-connected\");\r\n      terminalInstance.current?.write(`🎉 SSH Connected: ${info.host}\\r\\n`);\r\n    });\r\n\r\n    socket.on(\"ssh-error\", (err) => {\r\n      const msg = err.message || err;\r\n      terminalInstance.current?.write(`❌ SSH Error: ${msg}\\r\\n`);\r\n      setError(msg);\r\n      setConnectionStatus(\"error\");\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      setIsConnected(false);\r\n      setConnectionStatus(\"disconnected\");\r\n      terminalInstance.current?.write(`🔌 Disconnected: ${reason}\\r\\n`);\r\n    });\r\n\r\n    // Terminal input\r\n    terminalInstance.current.onData((input) => {\r\n      if (socket.connected) {\r\n        socket.emit(\"ssh-input\", input);\r\n      } else {\r\n        terminalInstance.current?.write(`❌ Not connected. Cannot send: ${input}\\r\\n`);\r\n      }\r\n    });\r\n\r\n    // Handle resize safely\r\n    const handleResize = () => fitAddonRef.current?.fit();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n\r\n  }, [connectToSSHServer]);\r\n\r\n  useEffect(() => {\r\n    const storedData = getStoredUserData();\r\n    if (storedData.userId) {\r\n      setConnectionData(storedData);\r\n      initializeTerminal(storedData);\r\n    } else {\r\n      setError(\"No connection data found. Please login first.\");\r\n    }\r\n\r\n    return () => cleanupConnection();\r\n  }, [getStoredUserData, initializeTerminal, cleanupConnection]);\r\n\r\n  const handleDisconnect = () => {\r\n    socketRef.current?.disconnect();\r\n    cleanupConnection();\r\n    window.close();\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{height:'100vh', display:'flex', justifyContent:'center', alignItems:'center', background:'#2c3e50', color:'white'}}>\r\n        <div>\r\n          <h2>⚠️ Terminal Error</h2>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.close()}>Close</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\", backgroundColor: \"#2c3e50\" }}>\r\n      <div style={{ padding: '8px', color:'white', background:'#34495e' }}>\r\n        🖥️ Terminal | Status: {connectionStatus} | {isConnected ? \"Connected\" : \"Disconnected\"}\r\n        <button onClick={handleDisconnect} style={{marginLeft:'10px'}}>❌ Disconnect</button>\r\n      </div>\r\n      <div ref={terminalRef} style={{ flex: 1, background: '#000', margin: '5px', border: '1px solid #34495e' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}