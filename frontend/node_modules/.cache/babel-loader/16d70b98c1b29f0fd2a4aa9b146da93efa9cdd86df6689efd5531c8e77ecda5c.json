{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst TerminalPage = () => {\n  _s();\n  var _connectionData$sessi;\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionData, setConnectionData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\n  const terminalRef = useRef();\n  const terminalInstance = useRef();\n  const socketRef = useRef();\n  useEffect(() => {\n    initializeConnection();\n\n    // Listen for data from parent window via postMessage\n    const handleMessage = event => {\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\n        setConnectionData(event.data.data);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n      cleanupConnection();\n    };\n  }, []);\n  const getStoredUserData = () => {\n    try {\n      const userData = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (userData) {\n        const user = JSON.parse(userData);\n        return {\n          token: token || '',\n          userId: user.id || '',\n          userEmail: user.email || '',\n          userName: user.name || '',\n          registeredId: user.registered_id || '',\n          userRole: user.role || 'student'\n        };\n      }\n    } catch (err) {\n      console.warn(\"Could not retrieve stored user data:\", err);\n    }\n    return {};\n  };\n  const initializeConnection = () => {\n    try {\n      // Method 1: Try to get data from URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      let data = null;\n\n      // Check for sessionKey method first (more secure)\n      const sessionKey = urlParams.get('sessionKey');\n      if (sessionKey) {\n        const sessionData = sessionStorage.getItem(sessionKey);\n        if (sessionData) {\n          data = JSON.parse(sessionData);\n          // Clean up session data after use\n          sessionStorage.removeItem(sessionKey);\n        }\n      }\n\n      // Fallback to direct URL data\n      if (!data) {\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\n        if (urlData) {\n          data = JSON.parse(decodeURIComponent(urlData));\n        }\n      }\n\n      // Method 2: Try old format for backward compatibility\n      if (!data) {\n        const host = urlParams.get('host');\n        const username = urlParams.get('username');\n        const password = urlParams.get('password');\n        const serverName = urlParams.get('serverName');\n        const token = urlParams.get('token');\n        const userId = urlParams.get('userId');\n        if (host && username && password) {\n          data = {\n            host,\n            username,\n            password,\n            serverName,\n            token,\n            userId,\n            // Try to get additional user data from localStorage\n            ...getStoredUserData()\n          };\n        }\n      }\n\n      // Method 3: Try sessionStorage fallback\n      if (!data) {\n        const stored = sessionStorage.getItem('terminalConnection');\n        if (stored) {\n          data = JSON.parse(stored);\n        }\n      }\n      if (data) {\n        setConnectionData(data);\n        initializeTerminal(data);\n      } else {\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error initializing connection:\", err);\n      setError(\"Failed to initialize connection data\");\n    }\n  };\n  const initializeTerminal = data => {\n    setConnectionStatus(\"connecting\");\n\n    // Initialize Socket.IO\n    const newSocket = io(SERVER_URL, {\n      query: {\n        userId: data.userId || '',\n        userName: data.userName || '',\n        userRole: data.userRole || 'student'\n      }\n    });\n    setSocket(newSocket);\n    socketRef.current = newSocket;\n\n    // Initialize Terminal\n    const term = new Terminal({\n      cursorBlink: true,\n      theme: {\n        background: '#1e1e1e',\n        foreground: '#ffffff',\n        cursor: '#ffffff',\n        selection: '#ffffff40',\n        black: '#000000',\n        red: '#e74c3c',\n        green: '#2ecc71',\n        yellow: '#f1c40f',\n        blue: '#3498db',\n        magenta: '#9b59b6',\n        cyan: '#1abc9c',\n        white: '#ecf0f1'\n      },\n      fontSize: 14,\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n      rows: 30,\n      cols: 120,\n      scrollback: 1000\n    });\n    term.open(terminalRef.current);\n    terminalInstance.current = term;\n\n    // Socket event listeners\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to terminal server\");\n      setIsConnected(true);\n      setConnectionStatus(\"connected\");\n\n      // Auto-connect to SSH server\n      connectToSSHServer(newSocket, data, term);\n    });\n    newSocket.on(\"ssh-output\", outputData => {\n      term.write(outputData);\n    });\n    newSocket.on(\"ssh-connected\", info => {\n      setConnectionStatus(\"ssh-connected\");\n      term.write(`\\r\\n✅ Successfully connected to ${info.host}\\r\\n`);\n      term.write(`📊 Session ID: ${data.sessionId || 'N/A'}\\r\\n`);\n      term.write(`👤 User: ${data.userName || 'Unknown'} (${data.registeredId || 'No ID'})\\r\\n`);\n      term.write(`🖥️  Server: ${data.serverName || data.host}\\r\\n`);\n      term.write(`⏰ Connected at: ${new Date().toLocaleString()}\\r\\n`);\n      term.write(`${'='.repeat(60)}\\r\\n\\r\\n`);\n    });\n    newSocket.on(\"ssh-error\", errorData => {\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorData.message}\\r\\n`);\n      setConnectionStatus(\"error\");\n      setError(errorData.message);\n    });\n    newSocket.on(\"ssh-disconnected\", () => {\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\n      setConnectionStatus(\"disconnected\");\n      setIsConnected(false);\n    });\n    newSocket.on(\"disconnect\", () => {\n      setIsConnected(false);\n      setConnectionStatus(\"disconnected\");\n      term.write(\"\\r\\n[Socket disconnected from server]\\r\\n\");\n    });\n    newSocket.on(\"connect_error\", err => {\n      setError(`Connection error: ${err.message}`);\n      setConnectionStatus(\"error\");\n    });\n\n    // Terminal input handler\n    term.onData(input => {\n      if (newSocket && isConnected) {\n        newSocket.emit(\"ssh-input\", input);\n      }\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      if (term) {\n        term.fit();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  };\n  const connectToSSHServer = (socketInstance, data, term) => {\n    // Enhanced connection data to send to backend\n    const sshConnectionData = {\n      // Server connection details\n      host: data.host,\n      username: data.username,\n      password: data.password,\n      port: data.port || 22,\n      // User information for session tracking\n      user: {\n        id: data.userId,\n        name: data.userName,\n        email: data.userEmail,\n        registered_id: data.registeredId,\n        role: data.userRole\n      },\n      // Session metadata\n      session: {\n        id: data.sessionId,\n        token: data.token,\n        connectionTime: data.connectionTime,\n        serverName: data.serverName,\n        dashboardUrl: data.dashboardUrl\n      },\n      // Browser context\n      browser: {\n        userAgent: data.browserInfo || navigator.userAgent,\n        windowId: window.name,\n        referrer: document.referrer\n      }\n    };\n\n    // Display connection attempt info\n    term.write(`🔗 Establishing SSH connection...\\r\\n`);\n    term.write(`📡 Target: ${data.serverName || 'Server'} (${data.host})\\r\\n`);\n    term.write(`👤 Student: ${data.userName || 'Unknown'}\\r\\n`);\n    term.write(`🆔 ID: ${data.registeredId || 'N/A'}\\r\\n`);\n    term.write(`⏳ Please wait...\\r\\n\\r\\n`);\n\n    // Send connection request with enhanced data\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\n\n    // Also send user activity tracking\n    socketInstance.emit(\"user-activity\", {\n      type: 'terminal_access',\n      userId: data.userId,\n      userName: data.userName,\n      action: 'ssh_connect_attempt',\n      target: data.host,\n      timestamp: new Date().toISOString(),\n      sessionId: data.sessionId\n    });\n  };\n  const cleanupConnection = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    if (terminalInstance.current) {\n      terminalInstance.current.dispose();\n    }\n\n    // Clean up any remaining session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n  };\n  const handleDisconnect = () => {\n    if (socketRef.current) {\n      // Send user disconnection info\n      socketRef.current.emit(\"user-disconnect\", {\n        userId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userId,\n        userName: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userName,\n        sessionId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.sessionId,\n        disconnectTime: new Date().toISOString(),\n        disconnectReason: 'user_initiated'\n      });\n      socketRef.current.disconnect();\n    }\n    cleanupConnection();\n    window.close();\n  };\n  const handleReconnect = () => {\n    if (connectionData && socketRef.current) {\n      setError(\"\");\n      setConnectionStatus(\"reconnecting\");\n      if (terminalInstance.current) {\n        terminalInstance.current.clear();\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\n      }\n      connectToSSHServer(socketRef.current, connectionData, terminalInstance.current);\n    }\n  };\n  const handleNewSession = () => {\n    if (terminalInstance.current) {\n      terminalInstance.current.clear();\n    }\n    if (socketRef.current && connectionData) {\n      // Create new session ID for tracking\n      const newSessionData = {\n        ...connectionData,\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        connectionTime: new Date().toISOString()\n      };\n      setConnectionData(newSessionData);\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\n    }\n  };\n  const handleNewTerminal = () => {\n    handleNewSession();\n  };\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case \"connected\":\n      case \"ssh-connected\":\n        return \"#2ecc71\";\n      case \"connecting\":\n      case \"reconnecting\":\n        return \"#f39c12\";\n      case \"error\":\n        return \"#e74c3c\";\n      default:\n        return \"#95a5a6\";\n    }\n  };\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case \"initializing\":\n        return \"Initializing...\";\n      case \"connecting\":\n        return \"Connecting...\";\n      case \"connected\":\n        return \"Socket Connected\";\n      case \"ssh-connected\":\n        return \"SSH Connected\";\n      case \"reconnecting\":\n        return \"Reconnecting...\";\n      case \"disconnected\":\n        return \"Disconnected\";\n      case \"error\":\n        return \"Connection Error\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  // Get user display info (support both old and new data formats)\n  const getUserDisplayInfo = () => {\n    if (!connectionData) return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A'\n    };\n\n    // New format\n    if (connectionData.userName) {\n      return {\n        name: connectionData.userName,\n        id: connectionData.registeredId || 'N/A',\n        email: connectionData.userEmail || 'N/A',\n        role: connectionData.userRole || 'student'\n      };\n    }\n\n    // Old format\n    if (connectionData.user_data) {\n      return {\n        name: connectionData.user_data.name || 'Unknown',\n        id: connectionData.user_data.registered_id || 'N/A',\n        email: connectionData.user_data.email || 'N/A',\n        role: connectionData.user_data.role || 'student'\n      };\n    }\n    return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A',\n      role: 'student'\n    };\n  };\n  const userInfo = getUserDisplayInfo();\n  if (error && !connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Terminal Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            fontSize: '14px',\n            color: '#95a5a6'\n          },\n          children: \"Please return to the dashboard and try connecting again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.close(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: \"Close Window\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this);\n  }\n  if (!connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Loading Terminal...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: \"Initializing connection data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#2c3e50'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px 20px',\n        backgroundColor: '#34495e',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '2px solid #2c3e50',\n        minHeight: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: 0,\n              fontSize: '18px',\n              fontWeight: 'bold'\n            },\n            children: [\"\\uD83D\\uDDA5\\uFE0F \", (connectionData === null || connectionData === void 0 ? void 0 : connectionData.serverName) || (connectionData === null || connectionData === void 0 ? void 0 : connectionData.host) || \"Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px',\n              padding: '4px 8px',\n              backgroundColor: getStatusColor(),\n              borderRadius: '12px',\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '8px',\n                height: '8px',\n                borderRadius: '50%',\n                backgroundColor: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            color: '#bdc3c7',\n            marginTop: '4px'\n          },\n          children: connectionData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\uD83D\\uDC64 \", connectionData.userName || 'Student', connectionData.registeredId && ` (ID: ${connectionData.registeredId})`, connectionData.userEmail && ` | 📧 ${connectionData.userEmail}`, \"| \\uD83D\\uDD17 \", connectionData.username, \"@\", connectionData.host]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [connectionStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#f39c12',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83D\\uDD04 Reconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewTerminal,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83C\\uDD95 New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\u274C Disconnect & Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), connectionData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#2c3e50',\n        color: '#ecf0f1',\n        fontSize: '12px',\n        borderBottom: '1px solid #34495e'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83C\\uDF10 Server: \", connectionData.host, \" | \\uD83D\\uDC65 Role: \", connectionData.userRole || 'student', \" | \\uD83D\\uDD11 Session: \", ((_connectionData$sessi = connectionData.sessionId) === null || _connectionData$sessi === void 0 ? void 0 : _connectionData$sessi.substr(-8)) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connectionData.connectionTime && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected: \", new Date(connectionData.connectionTime).toLocaleTimeString()]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        flex: 1,\n        padding: '0',\n        backgroundColor: '#1e1e1e',\n        overflow: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#34495e',\n        color: '#bdc3c7',\n        fontSize: '11px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e74c3c'\n          },\n          children: [\"\\u274C Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (connectionData === null || connectionData === void 0 ? void 0 : connectionData.userName) && `Logged in as: ${connectionData.userName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"fzf/oL+vXuZh6u8Lbxw4mfF3fJM=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Terminal","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","TerminalPage","_s","_connectionData$sessi","socket","setSocket","isConnected","setIsConnected","connectionData","setConnectionData","error","setError","connectionStatus","setConnectionStatus","terminalRef","terminalInstance","socketRef","initializeConnection","handleMessage","event","data","type","window","addEventListener","removeEventListener","cleanupConnection","getStoredUserData","userData","localStorage","getItem","token","user","JSON","parse","userId","id","userEmail","email","userName","name","registeredId","registered_id","userRole","role","err","console","warn","urlParams","URLSearchParams","location","search","sessionKey","get","sessionData","sessionStorage","removeItem","urlData","decodeURIComponent","host","username","password","serverName","stored","initializeTerminal","newSocket","query","current","term","cursorBlink","theme","background","foreground","cursor","selection","black","red","green","yellow","blue","magenta","cyan","white","fontSize","fontFamily","rows","cols","scrollback","open","on","log","connectToSSHServer","outputData","write","info","sessionId","Date","toLocaleString","repeat","errorData","message","onData","input","emit","handleResize","fit","socketInstance","sshConnectionData","port","session","connectionTime","dashboardUrl","browser","userAgent","browserInfo","navigator","windowId","referrer","document","action","target","timestamp","toISOString","disconnect","dispose","Object","keys","forEach","key","startsWith","handleDisconnect","disconnectTime","disconnectReason","close","handleReconnect","clear","handleNewSession","newSessionData","now","Math","random","toString","substr","handleNewTerminal","getStatusColor","getStatusText","getUserDisplayInfo","user_data","userInfo","style","height","display","alignItems","justifyContent","backgroundColor","color","children","textAlign","padding","borderRadius","maxWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","onClick","border","flexDirection","borderBottom","minHeight","flex","gap","fontWeight","width","marginTop","toLocaleTimeString","ref","overflow","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst TerminalPage = () => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\r\n  const terminalRef = useRef();\r\n  const terminalInstance = useRef();\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    initializeConnection();\r\n    \r\n    // Listen for data from parent window via postMessage\r\n    const handleMessage = (event) => {\r\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\r\n        setConnectionData(event.data.data);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      window.removeEventListener('message', handleMessage);\r\n      cleanupConnection();\r\n    };\r\n  }, []);\r\n\r\n  const getStoredUserData = () => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        return {\r\n          token: token || '',\r\n          userId: user.id || '',\r\n          userEmail: user.email || '',\r\n          userName: user.name || '',\r\n          registeredId: user.registered_id || '',\r\n          userRole: user.role || 'student'\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.warn(\"Could not retrieve stored user data:\", err);\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const initializeConnection = () => {\r\n    try {\r\n      // Method 1: Try to get data from URL parameters\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      let data = null;\r\n\r\n      // Check for sessionKey method first (more secure)\r\n      const sessionKey = urlParams.get('sessionKey');\r\n      if (sessionKey) {\r\n        const sessionData = sessionStorage.getItem(sessionKey);\r\n        if (sessionData) {\r\n          data = JSON.parse(sessionData);\r\n          // Clean up session data after use\r\n          sessionStorage.removeItem(sessionKey);\r\n        }\r\n      }\r\n\r\n      // Fallback to direct URL data\r\n      if (!data) {\r\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\r\n        if (urlData) {\r\n          data = JSON.parse(decodeURIComponent(urlData));\r\n        }\r\n      }\r\n\r\n      // Method 2: Try old format for backward compatibility\r\n      if (!data) {\r\n        const host = urlParams.get('host');\r\n        const username = urlParams.get('username');\r\n        const password = urlParams.get('password');\r\n        const serverName = urlParams.get('serverName');\r\n        const token = urlParams.get('token');\r\n        const userId = urlParams.get('userId');\r\n\r\n        if (host && username && password) {\r\n          data = {\r\n            host,\r\n            username,\r\n            password,\r\n            serverName,\r\n            token,\r\n            userId,\r\n            // Try to get additional user data from localStorage\r\n            ...getStoredUserData()\r\n          };\r\n        }\r\n      }\r\n\r\n      // Method 3: Try sessionStorage fallback\r\n      if (!data) {\r\n        const stored = sessionStorage.getItem('terminalConnection');\r\n        if (stored) {\r\n          data = JSON.parse(stored);\r\n        }\r\n      }\r\n\r\n      if (data) {\r\n        setConnectionData(data);\r\n        initializeTerminal(data);\r\n      } else {\r\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error initializing connection:\", err);\r\n      setError(\"Failed to initialize connection data\");\r\n    }\r\n  };\r\n\r\n  const initializeTerminal = (data) => {\r\n    setConnectionStatus(\"connecting\");\r\n    \r\n    // Initialize Socket.IO\r\n    const newSocket = io(SERVER_URL, {\r\n      query: {\r\n        userId: data.userId || '',\r\n        userName: data.userName || '',\r\n        userRole: data.userRole || 'student'\r\n      }\r\n    });\r\n    \r\n    setSocket(newSocket);\r\n    socketRef.current = newSocket;\r\n\r\n    // Initialize Terminal\r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      theme: {\r\n        background: '#1e1e1e',\r\n        foreground: '#ffffff',\r\n        cursor: '#ffffff',\r\n        selection: '#ffffff40',\r\n        black: '#000000',\r\n        red: '#e74c3c',\r\n        green: '#2ecc71',\r\n        yellow: '#f1c40f',\r\n        blue: '#3498db',\r\n        magenta: '#9b59b6',\r\n        cyan: '#1abc9c',\r\n        white: '#ecf0f1'\r\n      },\r\n      fontSize: 14,\r\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n      rows: 30,\r\n      cols: 120,\r\n      scrollback: 1000\r\n    });\r\n\r\n    term.open(terminalRef.current);\r\n    terminalInstance.current = term;\r\n\r\n    // Socket event listeners\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to terminal server\");\r\n      setIsConnected(true);\r\n      setConnectionStatus(\"connected\");\r\n      \r\n      // Auto-connect to SSH server\r\n      connectToSSHServer(newSocket, data, term);\r\n    });\r\n\r\n    newSocket.on(\"ssh-output\", (outputData) => {\r\n      term.write(outputData);\r\n    });\r\n\r\n    newSocket.on(\"ssh-connected\", (info) => {\r\n      setConnectionStatus(\"ssh-connected\");\r\n      term.write(`\\r\\n✅ Successfully connected to ${info.host}\\r\\n`);\r\n      term.write(`📊 Session ID: ${data.sessionId || 'N/A'}\\r\\n`);\r\n      term.write(`👤 User: ${data.userName || 'Unknown'} (${data.registeredId || 'No ID'})\\r\\n`);\r\n      term.write(`🖥️  Server: ${data.serverName || data.host}\\r\\n`);\r\n      term.write(`⏰ Connected at: ${new Date().toLocaleString()}\\r\\n`);\r\n      term.write(`${'='.repeat(60)}\\r\\n\\r\\n`);\r\n    });\r\n\r\n    newSocket.on(\"ssh-error\", (errorData) => {\r\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorData.message}\\r\\n`);\r\n      setConnectionStatus(\"error\");\r\n      setError(errorData.message);\r\n    });\r\n\r\n    newSocket.on(\"ssh-disconnected\", () => {\r\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\r\n      setConnectionStatus(\"disconnected\");\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", () => {\r\n      setIsConnected(false);\r\n      setConnectionStatus(\"disconnected\");\r\n      term.write(\"\\r\\n[Socket disconnected from server]\\r\\n\");\r\n    });\r\n\r\n    newSocket.on(\"connect_error\", (err) => {\r\n      setError(`Connection error: ${err.message}`);\r\n      setConnectionStatus(\"error\");\r\n    });\r\n\r\n    // Terminal input handler\r\n    term.onData((input) => {\r\n      if (newSocket && isConnected) {\r\n        newSocket.emit(\"ssh-input\", input);\r\n      }\r\n    });\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      if (term) {\r\n        term.fit();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  };\r\n\r\n  const connectToSSHServer = (socketInstance, data, term) => {\r\n    // Enhanced connection data to send to backend\r\n    const sshConnectionData = {\r\n      // Server connection details\r\n      host: data.host,\r\n      username: data.username,\r\n      password: data.password,\r\n      port: data.port || 22,\r\n      \r\n      // User information for session tracking\r\n      user: {\r\n        id: data.userId,\r\n        name: data.userName,\r\n        email: data.userEmail,\r\n        registered_id: data.registeredId,\r\n        role: data.userRole\r\n      },\r\n      \r\n      // Session metadata\r\n      session: {\r\n        id: data.sessionId,\r\n        token: data.token,\r\n        connectionTime: data.connectionTime,\r\n        serverName: data.serverName,\r\n        dashboardUrl: data.dashboardUrl\r\n      },\r\n      \r\n      // Browser context\r\n      browser: {\r\n        userAgent: data.browserInfo || navigator.userAgent,\r\n        windowId: window.name,\r\n        referrer: document.referrer\r\n      }\r\n    };\r\n\r\n    // Display connection attempt info\r\n    term.write(`🔗 Establishing SSH connection...\\r\\n`);\r\n    term.write(`📡 Target: ${data.serverName || 'Server'} (${data.host})\\r\\n`);\r\n    term.write(`👤 Student: ${data.userName || 'Unknown'}\\r\\n`);\r\n    term.write(`🆔 ID: ${data.registeredId || 'N/A'}\\r\\n`);\r\n    term.write(`⏳ Please wait...\\r\\n\\r\\n`);\r\n\r\n    // Send connection request with enhanced data\r\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\r\n    \r\n    // Also send user activity tracking\r\n    socketInstance.emit(\"user-activity\", {\r\n      type: 'terminal_access',\r\n      userId: data.userId,\r\n      userName: data.userName,\r\n      action: 'ssh_connect_attempt',\r\n      target: data.host,\r\n      timestamp: new Date().toISOString(),\r\n      sessionId: data.sessionId\r\n    });\r\n  };\r\n\r\n  const cleanupConnection = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    if (terminalInstance.current) {\r\n      terminalInstance.current.dispose();\r\n    }\r\n    \r\n    // Clean up any remaining session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    if (socketRef.current) {\r\n      // Send user disconnection info\r\n      socketRef.current.emit(\"user-disconnect\", {\r\n        userId: connectionData?.userId,\r\n        userName: connectionData?.userName,\r\n        sessionId: connectionData?.sessionId,\r\n        disconnectTime: new Date().toISOString(),\r\n        disconnectReason: 'user_initiated'\r\n      });\r\n      \r\n      socketRef.current.disconnect();\r\n    }\r\n    \r\n    cleanupConnection();\r\n    window.close();\r\n  };\r\n\r\n  const handleReconnect = () => {\r\n    if (connectionData && socketRef.current) {\r\n      setError(\"\");\r\n      setConnectionStatus(\"reconnecting\");\r\n      if (terminalInstance.current) {\r\n        terminalInstance.current.clear();\r\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\r\n      }\r\n      connectToSSHServer(socketRef.current, connectionData, terminalInstance.current);\r\n    }\r\n  };\r\n\r\n  const handleNewSession = () => {\r\n    if (terminalInstance.current) {\r\n      terminalInstance.current.clear();\r\n    }\r\n    if (socketRef.current && connectionData) {\r\n      // Create new session ID for tracking\r\n      const newSessionData = {\r\n        ...connectionData,\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        connectionTime: new Date().toISOString()\r\n      };\r\n      setConnectionData(newSessionData);\r\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\r\n    }\r\n  };\r\n\r\n  const handleNewTerminal = () => {\r\n    handleNewSession();\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case \"connected\":\r\n      case \"ssh-connected\":\r\n        return \"#2ecc71\";\r\n      case \"connecting\":\r\n      case \"reconnecting\":\r\n        return \"#f39c12\";\r\n      case \"error\":\r\n        return \"#e74c3c\";\r\n      default:\r\n        return \"#95a5a6\";\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (connectionStatus) {\r\n      case \"initializing\":\r\n        return \"Initializing...\";\r\n      case \"connecting\":\r\n        return \"Connecting...\";\r\n      case \"connected\":\r\n        return \"Socket Connected\";\r\n      case \"ssh-connected\":\r\n        return \"SSH Connected\";\r\n      case \"reconnecting\":\r\n        return \"Reconnecting...\";\r\n      case \"disconnected\":\r\n        return \"Disconnected\";\r\n      case \"error\":\r\n        return \"Connection Error\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  // Get user display info (support both old and new data formats)\r\n  const getUserDisplayInfo = () => {\r\n    if (!connectionData) return { name: 'Unknown', id: 'N/A', email: 'N/A' };\r\n    \r\n    // New format\r\n    if (connectionData.userName) {\r\n      return {\r\n        name: connectionData.userName,\r\n        id: connectionData.registeredId || 'N/A',\r\n        email: connectionData.userEmail || 'N/A',\r\n        role: connectionData.userRole || 'student'\r\n      };\r\n    }\r\n    \r\n    // Old format\r\n    if (connectionData.user_data) {\r\n      return {\r\n        name: connectionData.user_data.name || 'Unknown',\r\n        id: connectionData.user_data.registered_id || 'N/A',\r\n        email: connectionData.user_data.email || 'N/A',\r\n        role: connectionData.user_data.role || 'student'\r\n      };\r\n    }\r\n    \r\n    return { name: 'Unknown', id: 'N/A', email: 'N/A', role: 'student' };\r\n  };\r\n\r\n  const userInfo = getUserDisplayInfo();\r\n\r\n  if (error && !connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>⚠️</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Terminal Connection Error</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>{error}</p>\r\n          <p style={{ margin: '0 0 20px 0', fontSize: '14px', color: '#95a5a6' }}>\r\n            Please return to the dashboard and try connecting again.\r\n          </p>\r\n          <button \r\n            onClick={() => window.close()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            Close Window\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>🔄</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Loading Terminal...</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>Initializing connection data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column', backgroundColor: '#2c3e50' }}>\r\n      {/* Enhanced Header with User Info */}\r\n      <div style={{ \r\n        padding: '12px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '2px solid #2c3e50',\r\n        minHeight: '60px'\r\n      }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n            <h3 style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>\r\n              🖥️ {connectionData?.serverName || connectionData?.host || \"Terminal\"}\r\n            </h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              gap: '6px',\r\n              padding: '4px 8px',\r\n              backgroundColor: getStatusColor(),\r\n              borderRadius: '12px',\r\n              fontSize: '12px'\r\n            }}>\r\n              <div style={{ \r\n                width: '8px', \r\n                height: '8px', \r\n                borderRadius: '50%', \r\n                backgroundColor: 'white' \r\n              }}></div>\r\n              {getStatusText()}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ fontSize: '13px', color: '#bdc3c7', marginTop: '4px' }}>\r\n            {connectionData && (\r\n              <>\r\n                👤 {connectionData.userName || 'Student'} \r\n                {connectionData.registeredId && ` (ID: ${connectionData.registeredId})`}\r\n                {connectionData.userEmail && ` | 📧 ${connectionData.userEmail}`}\r\n                | 🔗 {connectionData.username}@{connectionData.host}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          {connectionStatus === \"error\" && (\r\n            <button \r\n              onClick={handleReconnect}\r\n              style={{\r\n                padding: '6px 12px',\r\n                backgroundColor: '#f39c12',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              🔄 Reconnect\r\n            </button>\r\n          )}\r\n          \r\n          <button \r\n            onClick={handleNewTerminal}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#3498db',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            🆕 New Session\r\n          </button>\r\n          \r\n          <button \r\n            onClick={handleDisconnect}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            ❌ Disconnect & Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connection Info Bar */}\r\n      {connectionData && (\r\n        <div style={{ \r\n          padding: '8px 20px', \r\n          backgroundColor: '#2c3e50', \r\n          color: '#ecf0f1',\r\n          fontSize: '12px',\r\n          borderBottom: '1px solid #34495e'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              🌐 Server: {connectionData.host} | \r\n              👥 Role: {connectionData.userRole || 'student'} | \r\n              🔑 Session: {connectionData.sessionId?.substr(-8) || 'N/A'}\r\n            </div>\r\n            <div>\r\n              {connectionData.connectionTime && (\r\n                <>Connected: {new Date(connectionData.connectionTime).toLocaleTimeString()}</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Terminal Container */}\r\n      <div \r\n        ref={terminalRef} \r\n        style={{ \r\n          flex: 1, \r\n          padding: '0',\r\n          backgroundColor: '#1e1e1e',\r\n          overflow: 'hidden'\r\n        }} \r\n      />\r\n\r\n      {/* Status Footer */}\r\n      <div style={{ \r\n        padding: '8px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: '#bdc3c7',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div>\r\n          {error ? (\r\n            <span style={{ color: '#e74c3c' }}>❌ Error: {error}</span>\r\n          ) : (\r\n            <span>\r\n              Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {connectionData?.userName && `Logged in as: ${connectionData.userName}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}