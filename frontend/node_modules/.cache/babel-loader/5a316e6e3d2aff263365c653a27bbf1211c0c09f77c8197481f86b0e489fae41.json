{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./Login.css\"; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", form);\n      const role = res.data.role;\n      if (role === \"admin\") navigate(\"/admin\");else navigate(\"/student\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"Email\",\n        type: \"email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"create-account-text\",\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"create-account-link\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"jaaYBdRTgxq2cV7fuzCnMi6AxzY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","form","setForm","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","res","post","role","data","err","_err$response","_err$response$data","alert","response","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./Login.css\"; // Import CSS\r\n\r\nfunction Login() {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", form);\r\n      const role = res.data.role;\r\n      if (role === \"admin\") navigate(\"/admin\");\r\n      else navigate(\"/student\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2>Login</h2>\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n        <p className=\"create-account-text\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"/register\" className=\"create-account-link\">\r\n            Create Account\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}