{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loadingServers, setLoadingServers] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Get user data from localStorage on component mount\n    const userData = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        setUser(parsedUser);\n      } catch (err) {\n        console.error('Error parsing user data:', err);\n        handleLogout();\n        return;\n      }\n    }\n\n    // Redirect to login if no user data found\n    if (!userData || !token) {\n      window.location.href = '/login';\n      return;\n    }\n\n    // Fetch servers from API\n    fetchServers();\n  }, []);\n  const fetchServers = async () => {\n    try {\n      setLoadingServers(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n\n      // Determine the correct API base URL\n      const getApiBaseUrl = () => {\n        // If in development, use localhost:5000\n        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n          return 'http://localhost:5000';\n        }\n        // If in production, assume same domain different port or same domain\n        return window.location.origin.replace(':3000', ':5000');\n      };\n      const API_BASE_URL = getApiBaseUrl();\n\n      // Try different possible API endpoints\n      const apiEndpoints = [`${API_BASE_URL}/api/servers`, '/api/servers' // Fallback for proxy setup\n      ];\n      let response = null;\n      let lastError = null;\n      for (const endpoint of apiEndpoints) {\n        try {\n          console.log(`Trying API endpoint: ${endpoint}`);\n          response = await fetch(endpoint, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n\n          // Check if response is HTML (common error)\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.includes('text/html')) {\n            throw new Error(`Received HTML instead of JSON from ${endpoint}. Server might not be running on correct port.`);\n          }\n          if (response.ok) {\n            break; // Success, exit loop\n          } else {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n        } catch (err) {\n          console.warn(`Failed to fetch from ${endpoint}:`, err.message);\n          lastError = err;\n          response = null;\n        }\n      }\n      if (!response) {\n        throw lastError || new Error('All API endpoints failed');\n      }\n      if (response.status === 401) {\n        // Token expired or invalid\n        handleLogout();\n        return;\n      }\n      const data = await response.json();\n      console.log('Received server data:', data);\n      if (data.success && data.servers && data.servers.length > 0) {\n        // Filter only active servers for students\n        const activeServers = data.servers.filter(server => server.status === 'active');\n        console.log('Active servers found:', activeServers);\n        setServers(activeServers);\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\n\n        if (activeServers.length === 0) {\n          setError(\"No active servers available in database\");\n        }\n      } else {\n        setError(\"No servers found in database\");\n        console.warn('No servers returned from API:', data);\n      }\n    } catch (error) {\n      console.error('Error fetching servers:', error);\n\n      // More specific error messages\n      let errorMessage = error.message;\n      if (errorMessage.includes('fetch')) {\n        errorMessage = 'Cannot connect to server. Please check if the backend server is running on port 5000.';\n      } else if (errorMessage.includes('HTML')) {\n        errorMessage = 'Server returned HTML instead of JSON. Check your API routes configuration.';\n      } else if (errorMessage.includes('JSON')) {\n        errorMessage = 'Invalid JSON response from server. Check server logs for errors.';\n      }\n      setError(`API Error: ${errorMessage}`);\n\n      // Remove fallback servers - force user to fix API issue\n      setServers([]);\n      setSelectedServer(null);\n    } finally {\n      setLoadingServers(false);\n    }\n  };\n  const handleConnect = () => {\n    if (!user || !username || !password) {\n      alert(\"Please enter both username and password\");\n      return;\n    }\n    if (!selectedServer) {\n      alert(\"Please select a server\");\n      return;\n    }\n    setIsConnecting(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Enhanced connection data matching server.js expectations\n      const connectionData = {\n        // Server connection details\n        host: selectedServer.ip,\n        username: username,\n        password: password,\n        serverName: selectedServer.name,\n        port: selectedServer.port || 22,\n        // User authentication and identification (matching server.js structure)\n        token: token || '',\n        userId: user.id || user._id || '',\n        userEmail: user.email || '',\n        userName: user.name || '',\n        registeredId: user.registered_id || '',\n        userRole: user.role || 'student',\n        // Legacy support for different data structures\n        user: {\n          id: user.id || user._id,\n          name: user.name,\n          email: user.email,\n          registered_id: user.registered_id,\n          role: user.role || 'student'\n        },\n        // Session metadata\n        connectionTime: new Date().toISOString(),\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        // Additional context\n        dashboardUrl: window.location.origin,\n        browserInfo: navigator.userAgent,\n        serverId: selectedServer._id || selectedServer.id\n      };\n\n      // Store in sessionStorage for secure data transfer\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\n\n      // Create URL parameters\n      const urlParams = new URLSearchParams({\n        sessionKey: sessionKey,\n        serverName: selectedServer.name,\n        serverIp: selectedServer.ip\n      });\n\n      // Create unique window name to allow multiple terminals\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\n\n      // Open new window\n      const newWindow = window.open(`/terminal?${urlParams.toString()}`, windowName, 'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no');\n\n      // Check if popup was blocked\n      if (!newWindow) {\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\n        setIsConnecting(false);\n        return;\n      }\n\n      // Send additional data via postMessage after window loads\n      const sendDataToTerminal = () => {\n        try {\n          newWindow.postMessage({\n            type: 'TERMINAL_CONNECTION_DATA',\n            data: connectionData\n          }, window.location.origin);\n        } catch (error) {\n          console.warn('Could not send data via postMessage:', error);\n        }\n      };\n\n      // Wait for the terminal window to load, then send data\n      setTimeout(sendDataToTerminal, 1000);\n\n      // Focus the new window\n      newWindow.focus();\n\n      // Cleanup: Clear sensitive data after connection\n      setTimeout(() => {\n        setPassword(\"\");\n        setIsConnecting(false);\n      }, 2000);\n\n      // Track the connection\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\n    } catch (error) {\n      console.error('Connection error:', error);\n      alert('Failed to establish connection. Please try again.');\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    // Clear all stored data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear any terminal session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n    window.location.href = '/login';\n  };\n\n  // Show loading state while user data is being retrieved\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            marginBottom: '10px',\n            color: '#495057'\n          },\n          children: \"Loading Dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#6c757d'\n          },\n          children: \"Please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '20px auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f8f9fa',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '30px',\n        paddingBottom: '15px',\n        borderBottom: '2px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: '#2c3e50'\n          },\n          children: \"Student Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            color: '#28a745',\n            fontWeight: 'bold'\n          },\n          children: [\"Welcome, \", user.name || 'Student']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), user.registered_id && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#6f42c1',\n            fontSize: '12px'\n          },\n          children: [\"Student ID: \", user.registered_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), user.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#6c757d',\n            fontSize: '12px'\n          },\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchServers,\n          disabled: loadingServers,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: loadingServers ? 'not-allowed' : 'pointer',\n            fontSize: '14px',\n            transition: 'background-color 0.3s ease'\n          },\n          onMouseOver: e => !loadingServers && (e.target.style.backgroundColor = '#138496'),\n          onMouseOut: e => !loadingServers && (e.target.style.backgroundColor = '#17a2b8'),\n          children: loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            transition: 'background-color 0.3s ease'\n          },\n          onMouseOver: e => e.target.style.backgroundColor = '#c82333',\n          onMouseOut: e => e.target.style.backgroundColor = '#dc3545',\n          children: \"\\uD83D\\uDEAA Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '15px',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '4px',\n        marginBottom: '20px',\n        color: '#721c24'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          marginBottom: '8px'\n        },\n        children: \"\\u26A0\\uFE0F Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), error.includes('Cannot connect to server') && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          backgroundColor: '#f5c6cb',\n          padding: '8px',\n          borderRadius: '3px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Troubleshooting Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Make sure your backend server is running: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"node server.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check if server is running on port 5000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Verify MongoDB is connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check server console for errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }, this), error.includes('HTML instead of JSON') && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          backgroundColor: '#f5c6cb',\n          padding: '8px',\n          borderRadius: '3px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Server Configuration Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"API routes may not be properly configured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Check that server.js includes: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"app.use(\\\"/api/auth\\\", authRoutes);\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Verify the server is not serving HTML for API routes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this), error.includes('No servers found') && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          backgroundColor: '#f5c6cb',\n          padding: '8px',\n          borderRadius: '3px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Database Issue:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '15px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Add servers using admin panel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '8px',\n          fontWeight: 'bold',\n          color: '#495057'\n        },\n        children: \"Select Server to Connect with it's terminal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), loadingServers ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px',\n          backgroundColor: '#e9ecef',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          textAlign: 'center',\n          color: '#495057'\n        },\n        children: \"\\uD83D\\uDD04 Loading available servers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServer ? selectedServer.ip : '',\n        onChange: e => {\n          const server = servers.find(s => s.ip === e.target.value);\n          setSelectedServer(server);\n        },\n        style: {\n          width: '100%',\n          padding: '12px',\n          fontSize: '16px',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          backgroundColor: 'white',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Choose a server...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: server.ip,\n          children: [server.name, \" - \", server.ip, server.status !== 'active' ? ` (${server.status})` : '']\n        }, server._id || server.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 3\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px',\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"Server Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter server username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"SSH Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter server password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleConnect(),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      disabled: isConnecting || !username || !password || !selectedServer || loadingServers,\n      style: {\n        width: '100%',\n        padding: '15px',\n        fontSize: '18px',\n        fontWeight: 'bold',\n        backgroundColor: isConnecting || !username || !password || !selectedServer || loadingServers ? '#6c757d' : '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '6px',\n        cursor: isConnecting || !username || !password || !selectedServer || loadingServers ? 'not-allowed' : 'pointer',\n        transition: 'background-color 0.3s ease',\n        marginBottom: '25px'\n      },\n      onMouseOver: e => {\n        if (!e.target.disabled) {\n          e.target.style.backgroundColor = '#218838';\n        }\n      },\n      onMouseOut: e => {\n        if (!e.target.disabled) {\n          e.target.style.backgroundColor = '#28a745';\n        }\n      },\n      children: isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), selectedServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '6px',\n        border: '1px solid #dee2e6',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#495057'\n        },\n        children: \"\\uD83D\\uDCCA Selected Server Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), \" \", selectedServer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IP Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this), \" \", selectedServer.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), \" \", selectedServer.port || 22]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: selectedServer.status === 'active' ? '#28a745' : selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\n              marginLeft: '5px',\n              textTransform: 'capitalize',\n              fontWeight: 'bold'\n            },\n            children: [\"\\u25CF \", selectedServer.status || 'Active']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Student:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textTransform: 'capitalize',\n              color: '#6f42c1'\n            },\n            children: user.role || 'Student'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), selectedServer.max_connections && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Max Connections:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 17\n          }, this), \" \", selectedServer.max_connections]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 15\n        }, this), selectedServer.created_at && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this), \" \", new Date(selectedServer.created_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this), selectedServer.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '12px',\n          padding: '10px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this), \" \", selectedServer.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '6px',\n        border: '1px solid #bbdefb',\n        marginBottom: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#1976d2'\n        },\n        children: \"\\uD83D\\uDCCB Connection Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          margin: 0,\n          paddingLeft: '20px',\n          color: '#495057'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Select your assigned server from the dropdown menu above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Enter your SSH credentials (username and password for the server)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Click \\\"Connect to Server Terminal\\\" to open a new window with terminal access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Important:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), \" Make sure to allow popups for this website\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The terminal will automatically authenticate using your student profile data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '15px',\n        backgroundColor: '#fff3cd',\n        borderRadius: '6px',\n        border: '1px solid #ffeaa7'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          color: '#856404',\n          fontSize: '14px'\n        },\n        children: [\"\\uD83D\\uDD10 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Security Notice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 14\n        }, this), \" Always log out when finished and never share your SSH credentials. Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"Du4WXzVGEPhKwOTYRKQf5WM5VpE=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StudentDashboard","_s","servers","setServers","selectedServer","setSelectedServer","username","setUsername","password","setPassword","isConnecting","setIsConnecting","user","setUser","loadingServers","setLoadingServers","error","setError","userData","localStorage","getItem","token","parsedUser","JSON","parse","err","console","handleLogout","window","location","href","fetchServers","getApiBaseUrl","hostname","origin","replace","API_BASE_URL","apiEndpoints","response","lastError","endpoint","log","fetch","method","headers","contentType","get","includes","Error","ok","status","statusText","warn","message","data","json","success","length","activeServers","filter","server","errorMessage","handleConnect","alert","connectionData","host","ip","serverName","name","port","userId","id","_id","userEmail","email","userName","registeredId","registered_id","userRole","role","connectionTime","Date","toISOString","sessionId","now","Math","random","toString","substr","dashboardUrl","browserInfo","navigator","userAgent","serverId","sessionKey","sessionStorage","setItem","stringify","urlParams","URLSearchParams","serverIp","windowName","newWindow","open","sendDataToTerminal","postMessage","type","setTimeout","focus","removeItem","Object","keys","forEach","key","startsWith","style","display","justifyContent","alignItems","height","fontFamily","children","textAlign","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","paddingBottom","borderBottom","fontWeight","gap","onClick","disabled","border","cursor","transition","onMouseOver","e","target","onMouseOut","marginTop","paddingLeft","value","onChange","find","s","width","map","gridTemplateColumns","placeholder","boxSizing","onKeyPress","marginLeft","textTransform","max_connections","created_at","toLocaleDateString","description","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst StudentDashboard = () => {\r\n  const [servers, setServers] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingServers, setLoadingServers] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get user data from localStorage on component mount\r\n    const userData = localStorage.getItem('user');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const parsedUser = JSON.parse(userData);\r\n        setUser(parsedUser);\r\n      } catch (err) {\r\n        console.error('Error parsing user data:', err);\r\n        handleLogout();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Redirect to login if no user data found\r\n    if (!userData || !token) {\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n\r\n    // Fetch servers from API\r\n    fetchServers();\r\n  }, []);\r\n\r\n  const fetchServers = async () => {\r\n    try {\r\n      setLoadingServers(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Determine the correct API base URL\r\n      const getApiBaseUrl = () => {\r\n        // If in development, use localhost:5000\r\n        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n          return 'http://localhost:5000';\r\n        }\r\n        // If in production, assume same domain different port or same domain\r\n        return window.location.origin.replace(':3000', ':5000');\r\n      };\r\n\r\n      const API_BASE_URL = getApiBaseUrl();\r\n      \r\n      // Try different possible API endpoints\r\n      const apiEndpoints = [\r\n        `${API_BASE_URL}/api/servers`,\r\n        '/api/servers', // Fallback for proxy setup\r\n      ];\r\n      \r\n      let response = null;\r\n      let lastError = null;\r\n      \r\n      for (const endpoint of apiEndpoints) {\r\n        try {\r\n          console.log(`Trying API endpoint: ${endpoint}`);\r\n          \r\n          response = await fetch(endpoint, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          });\r\n          \r\n          // Check if response is HTML (common error)\r\n          const contentType = response.headers.get('content-type');\r\n          if (contentType && contentType.includes('text/html')) {\r\n            throw new Error(`Received HTML instead of JSON from ${endpoint}. Server might not be running on correct port.`);\r\n          }\r\n          \r\n          if (response.ok) {\r\n            break; // Success, exit loop\r\n          } else {\r\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n          }\r\n          \r\n        } catch (err) {\r\n          console.warn(`Failed to fetch from ${endpoint}:`, err.message);\r\n          lastError = err;\r\n          response = null;\r\n        }\r\n      }\r\n      \r\n      if (!response) {\r\n        throw lastError || new Error('All API endpoints failed');\r\n      }\r\n\r\n      if (response.status === 401) {\r\n        // Token expired or invalid\r\n        handleLogout();\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Received server data:', data);\r\n      \r\n      if (data.success && data.servers && data.servers.length > 0) {\r\n        // Filter only active servers for students\r\n        const activeServers = data.servers.filter(server => server.status === 'active');\r\n        console.log('Active servers found:', activeServers);\r\n        \r\n        setServers(activeServers);\r\n        setSelectedServer(activeServers[0] || null); // Select first active server by default\r\n        \r\n        if (activeServers.length === 0) {\r\n          setError(\"No active servers available in database\");\r\n        }\r\n      } else {\r\n        setError(\"No servers found in database\");\r\n        console.warn('No servers returned from API:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching servers:', error);\r\n      \r\n      // More specific error messages\r\n      let errorMessage = error.message;\r\n      if (errorMessage.includes('fetch')) {\r\n        errorMessage = 'Cannot connect to server. Please check if the backend server is running on port 5000.';\r\n      } else if (errorMessage.includes('HTML')) {\r\n        errorMessage = 'Server returned HTML instead of JSON. Check your API routes configuration.';\r\n      } else if (errorMessage.includes('JSON')) {\r\n        errorMessage = 'Invalid JSON response from server. Check server logs for errors.';\r\n      }\r\n      \r\n      setError(`API Error: ${errorMessage}`);\r\n      \r\n      // Remove fallback servers - force user to fix API issue\r\n      setServers([]);\r\n      setSelectedServer(null);\r\n      \r\n    } finally {\r\n      setLoadingServers(false);\r\n    }\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    if (!user || !username || !password) {\r\n      alert(\"Please enter both username and password\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedServer) {\r\n      alert(\"Please select a server\");\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Enhanced connection data matching server.js expectations\r\n      const connectionData = {\r\n        // Server connection details\r\n        host: selectedServer.ip,\r\n        username: username,\r\n        password: password,\r\n        serverName: selectedServer.name,\r\n        port: selectedServer.port || 22,\r\n        \r\n        // User authentication and identification (matching server.js structure)\r\n        token: token || '',\r\n        userId: user.id || user._id || '',\r\n        userEmail: user.email || '',\r\n        userName: user.name || '',\r\n        registeredId: user.registered_id || '',\r\n        userRole: user.role || 'student',\r\n        \r\n        // Legacy support for different data structures\r\n        user: {\r\n          id: user.id || user._id,\r\n          name: user.name,\r\n          email: user.email,\r\n          registered_id: user.registered_id,\r\n          role: user.role || 'student'\r\n        },\r\n        \r\n        // Session metadata\r\n        connectionTime: new Date().toISOString(),\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        \r\n        // Additional context\r\n        dashboardUrl: window.location.origin,\r\n        browserInfo: navigator.userAgent,\r\n        serverId: selectedServer._id || selectedServer.id\r\n      };\r\n\r\n      // Store in sessionStorage for secure data transfer\r\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\r\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\r\n      \r\n      // Create URL parameters\r\n      const urlParams = new URLSearchParams({\r\n        sessionKey: sessionKey,\r\n        serverName: selectedServer.name,\r\n        serverIp: selectedServer.ip\r\n      });\r\n\r\n      // Create unique window name to allow multiple terminals\r\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id || user._id}_${Date.now()}`;\r\n      \r\n      // Open new window\r\n      const newWindow = window.open(\r\n        `/terminal?${urlParams.toString()}`, \r\n        windowName,\r\n        'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no'\r\n      );\r\n\r\n      // Check if popup was blocked\r\n      if (!newWindow) {\r\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n\r\n      // Send additional data via postMessage after window loads\r\n      const sendDataToTerminal = () => {\r\n        try {\r\n          newWindow.postMessage({\r\n            type: 'TERMINAL_CONNECTION_DATA',\r\n            data: connectionData\r\n          }, window.location.origin);\r\n        } catch (error) {\r\n          console.warn('Could not send data via postMessage:', error);\r\n        }\r\n      };\r\n\r\n      // Wait for the terminal window to load, then send data\r\n      setTimeout(sendDataToTerminal, 1000);\r\n      \r\n      // Focus the new window\r\n      newWindow.focus();\r\n\r\n      // Cleanup: Clear sensitive data after connection\r\n      setTimeout(() => {\r\n        setPassword(\"\");\r\n        setIsConnecting(false);\r\n      }, 2000);\r\n\r\n      // Track the connection\r\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name} (${selectedServer.ip})`);\r\n\r\n    } catch (error) {\r\n      console.error('Connection error:', error);\r\n      alert('Failed to establish connection. Please try again.');\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear all stored data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear any terminal session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // Show loading state while user data is being retrieved\r\n  if (!user) {\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <div style={{ \r\n            fontSize: '18px', \r\n            marginBottom: '10px',\r\n            color: '#495057'\r\n          }}>\r\n            Loading Dashboard...\r\n          </div>\r\n          <div style={{ color: '#6c757d' }}>Please wait</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      maxWidth: '800px', \r\n      margin: '20px auto', \r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f8f9fa',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        marginBottom: '30px',\r\n        paddingBottom: '15px',\r\n        borderBottom: '2px solid #dee2e6'\r\n      }}>\r\n        <div>\r\n          <h2 style={{ margin: 0, color: '#2c3e50' }}>Student Dashboard</h2>\r\n          <p style={{ margin: '5px 0 0 0', color: '#28a745', fontWeight: 'bold' }}>\r\n            Welcome, {user.name || 'Student'}\r\n          </p>\r\n          {user.registered_id && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#6f42c1', fontSize: '12px' }}>\r\n              Student ID: {user.registered_id}\r\n            </p>\r\n          )}\r\n          {user.email && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#6c757d', fontSize: '12px' }}>\r\n              Email: {user.email}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          <button \r\n            onClick={fetchServers}\r\n            disabled={loadingServers}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: loadingServers ? 'not-allowed' : 'pointer',\r\n              fontSize: '14px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => !loadingServers && (e.target.style.backgroundColor = '#138496')}\r\n            onMouseOut={(e) => !loadingServers && (e.target.style.backgroundColor = '#17a2b8')}\r\n          >\r\n            {loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'}\r\n          </button>\r\n          <button \r\n            onClick={handleLogout}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: '#dc3545',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px',\r\n              transition: 'background-color 0.3s ease'\r\n            }}\r\n            onMouseOver={(e) => e.target.style.backgroundColor = '#c82333'}\r\n            onMouseOut={(e) => e.target.style.backgroundColor = '#dc3545'}\r\n          >\r\n            🚪 Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div style={{\r\n          padding: '15px',\r\n          backgroundColor: '#f8d7da',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '4px',\r\n          marginBottom: '20px',\r\n          color: '#721c24'\r\n        }}>\r\n          <div style={{ fontWeight: 'bold', marginBottom: '8px' }}>⚠️ Connection Error</div>\r\n          <div style={{ marginBottom: '10px' }}>{error}</div>\r\n          \r\n          {error.includes('Cannot connect to server') && (\r\n            <div style={{ fontSize: '12px', backgroundColor: '#f5c6cb', padding: '8px', borderRadius: '3px', marginTop: '10px' }}>\r\n              <strong>Troubleshooting Steps:</strong>\r\n              <ul style={{ margin: '5px 0', paddingLeft: '15px' }}>\r\n                <li>Make sure your backend server is running: <code>node server.js</code></li>\r\n                <li>Check if server is running on port 5000</li>\r\n                <li>Verify MongoDB is connected</li>\r\n                <li>Check server console for errors</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {error.includes('HTML instead of JSON') && (\r\n            <div style={{ fontSize: '12px', backgroundColor: '#f5c6cb', padding: '8px', borderRadius: '3px', marginTop: '10px' }}>\r\n              <strong>Server Configuration Issue:</strong>\r\n              <ul style={{ margin: '5px 0', paddingLeft: '15px' }}>\r\n                <li>API routes may not be properly configured</li>\r\n                <li>Check that server.js includes: <code>app.use(\"/api/auth\", authRoutes);</code></li>\r\n                <li>Verify the server is not serving HTML for API routes</li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n          \r\n          {error.includes('No servers found') && (\r\n            <div style={{ fontSize: '12px', backgroundColor: '#f5c6cb', padding: '8px', borderRadius: '3px', marginTop: '10px' }}>\r\n              <strong>Database Issue:</strong>\r\n              <ul style={{ margin: '5px 0', paddingLeft: '15px' }}>\r\n                \r\n                <li>Add servers using admin panel</li>\r\n             \r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Server Selection */}\r\n      <div style={{ marginBottom: '25px' }}>\r\n        <label style={{ \r\n          display: 'block', \r\n          marginBottom: '8px', \r\n          fontWeight: 'bold',\r\n          color: '#495057'\r\n        }}>\r\n          Select Server to Connect with it's terminal:\r\n        </label>\r\n        {loadingServers ? (\r\n          <div style={{\r\n            padding: '12px',\r\n            backgroundColor: '#e9ecef',\r\n            border: '2px solid #ced4da',\r\n            borderRadius: '6px',\r\n            textAlign: 'center',\r\n            color: '#495057'\r\n          }}>\r\n            🔄 Loading available servers...\r\n          </div>\r\n        ) : (\r\n          <select\r\n            value={selectedServer ? selectedServer.ip : ''}\r\n            onChange={(e) => {\r\n              const server = servers.find((s) => s.ip === e.target.value);\r\n              setSelectedServer(server);\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              backgroundColor: 'white',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>Choose a server...</option>\r\n{servers.map((server) => (\r\n  <option key={server._id || server.ip} value={server.ip}>\r\n    {server.name} - {server.ip} \r\n    {server.status !== 'active' ? ` (${server.status})` : ''}\r\n  </option>\r\n))}\r\n\r\n          </select>\r\n        )}\r\n      </div>\r\n\r\n      {/* SSH Credentials */}\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: '1fr 1fr', \r\n        gap: '20px', \r\n        marginBottom: '25px' \r\n      }}>\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            Server Username:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter server username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            SSH Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter server password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleConnect()}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connect Button */}\r\n      <button \r\n        onClick={handleConnect}\r\n        disabled={isConnecting || !username || !password || !selectedServer || loadingServers}\r\n        style={{\r\n          width: '100%',\r\n          padding: '15px',\r\n          fontSize: '18px',\r\n          fontWeight: 'bold',\r\n          backgroundColor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? '#6c757d' : '#28a745',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '6px',\r\n          cursor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? 'not-allowed' : 'pointer',\r\n          transition: 'background-color 0.3s ease',\r\n          marginBottom: '25px'\r\n        }}\r\n        onMouseOver={(e) => {\r\n          if (!e.target.disabled) {\r\n            e.target.style.backgroundColor = '#218838';\r\n          }\r\n        }}\r\n        onMouseOut={(e) => {\r\n          if (!e.target.disabled) {\r\n            e.target.style.backgroundColor = '#28a745';\r\n          }\r\n        }}\r\n      >\r\n        {isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'}\r\n      </button>\r\n\r\n      {/* Server Info Card */}\r\n      {selectedServer && (\r\n        <div style={{ \r\n          backgroundColor: 'white',\r\n          padding: '20px',\r\n          borderRadius: '6px',\r\n          border: '1px solid #dee2e6',\r\n          marginBottom: '20px'\r\n        }}>\r\n          <h4 style={{ margin: '0 0 15px 0', color: '#495057' }}>\r\n            📊 Selected Server Information\r\n          </h4>\r\n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\r\n            <div>\r\n              <strong>Server Name:</strong> {selectedServer.name}\r\n            </div>\r\n            <div>\r\n              <strong>IP Address:</strong> {selectedServer.ip}\r\n            </div>\r\n            <div>\r\n              <strong>Port:</strong> {selectedServer.port || 22}\r\n            </div>\r\n            <div>\r\n              <strong>Status:</strong> \r\n              <span style={{ \r\n                color: selectedServer.status === 'active' ? '#28a745' : \r\n                      selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\r\n                marginLeft: '5px',\r\n                textTransform: 'capitalize',\r\n                fontWeight: 'bold'\r\n              }}>\r\n                ● {selectedServer.status || 'Active'}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <strong>Student:</strong> {user.name}\r\n            </div>\r\n            <div>\r\n              <strong>Role:</strong> <span style={{ textTransform: 'capitalize', color: '#6f42c1' }}>{user.role || 'Student'}</span>\r\n            </div>\r\n            {selectedServer.max_connections && (\r\n              <div>\r\n                <strong>Max Connections:</strong> {selectedServer.max_connections}\r\n              </div>\r\n            )}\r\n            {selectedServer.created_at && (\r\n              <div>\r\n                <strong>Server Created:</strong> {new Date(selectedServer.created_at).toLocaleDateString()}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {selectedServer.description && (\r\n            <div style={{ marginTop: '12px', padding: '10px', backgroundColor: '#f8f9fa', borderRadius: '4px' }}>\r\n              <strong>Description:</strong> {selectedServer.description}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        padding: '20px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #bbdefb',\r\n        marginBottom: '15px'\r\n      }}>\r\n        <h4 style={{ margin: '0 0 15px 0', color: '#1976d2' }}>📋 Connection Instructions:</h4>\r\n        <ol style={{ margin: 0, paddingLeft: '20px', color: '#495057' }}>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Select your assigned server from the dropdown menu above\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Enter your SSH credentials (username and password for the server)\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Click \"Connect to Server Terminal\" to open a new window with terminal access\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            <strong>Important:</strong> Make sure to allow popups for this website\r\n          </li>\r\n          <li>\r\n            The terminal will automatically authenticate using your student profile data\r\n          </li>\r\n        </ol>\r\n      </div>\r\n\r\n      {/* Enhanced Security Warning */}\r\n      <div style={{ \r\n        padding: '15px', \r\n        backgroundColor: '#fff3cd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #ffeaa7'\r\n      }}>\r\n        <p style={{ margin: 0, color: '#856404', fontSize: '14px' }}>\r\n          🔐 <strong>Security Notice:</strong> Always log out when finished and never share your SSH credentials. \r\n          Your session is tracked and logged for security purposes. Close the terminal window when done to end your session properly.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}