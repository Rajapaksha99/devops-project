{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Users, Server, Terminal, Clock, Activity, Eye, AlertTriangle, RefreshCw, Search, Filter, BarChart3, User, ArrowLeft, Monitor, Command as CommandIcon, Calendar, Globe, Shield, Zap, Plus, Trash2, Edit, Save, X, Settings, Database, CheckCircle, XCircle, Loader } from 'lucide-react';\nconst AdminDashboard = () => {\n  _s();\n  const [dashboardStats, setDashboardStats] = useState(null);\n  const [servers, setServers] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [serverSessions, setServerSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [sessionDetails, setSessionDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [currentView, setCurrentView] = useState('overview');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Server management states\n  const [showAddServerModal, setShowAddServerModal] = useState(false);\n  const [editingServer, setEditingServer] = useState(null);\n  const [serverForm, setServerForm] = useState({\n    server_name: '',\n    server_ip: '',\n    ssh_port: 22,\n    ssh_username: '',\n    description: '',\n    is_active: true\n  });\n  const [serverActionLoading, setServerActionLoading] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState(null);\n  const API_BASE = 'http://localhost:5000/api';\n  const getAuthHeaders = () => ({\n    'Authorization': `Bearer ${localStorage.getItem('token')}`,\n    'Content-Type': 'application/json'\n  });\n\n  // Fetch dashboard statistics\n  const fetchDashboardStats = useCallback(async () => {\n    try {\n      const response = await fetch(`${API_BASE}/admin/dashboard/stats`, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDashboardStats(data);\n      }\n    } catch (err) {\n      console.error('Error fetching dashboard stats:', err);\n    }\n  }, []);\n\n  // Fetch servers list\n  const fetchServers = useCallback(async () => {\n    try {\n      const response = await fetch(`${API_BASE}/admin/servers`, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setServers(data);\n      }\n    } catch (err) {\n      console.error('Error fetching servers:', err);\n    }\n  }, []);\n\n  // Fetch students list\n  const fetchStudents = useCallback(async () => {\n    try {\n      const response = await fetch(`${API_BASE}/admin/students`, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setStudents(data);\n      }\n    } catch (err) {\n      console.error('Error fetching students:', err);\n    }\n  }, []);\n\n  // Add new server\n  const addServer = useCallback(async serverData => {\n    setServerActionLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/admin/servers`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(serverData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setError('');\n        fetchServers(); // Refresh servers list\n        setShowAddServerModal(false);\n        resetServerForm();\n        // Show success message (you can implement a toast notification here)\n        setError(`✅ Server \"${serverData.server_name}\" added successfully!`);\n        setTimeout(() => setError(''), 3000);\n      } else {\n        const errorData = await response.json();\n        setError(`Failed to add server: ${errorData.message || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error adding server:', err);\n      setError('Error adding server. Please try again.');\n    } finally {\n      setServerActionLoading(false);\n    }\n  }, [fetchServers]);\n\n  // Update server\n  const updateServer = useCallback(async (serverId, serverData) => {\n    setServerActionLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/admin/servers/${serverId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(serverData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setError('');\n        fetchServers(); // Refresh servers list\n        setEditingServer(null);\n        resetServerForm();\n        setError(`✅ Server \"${serverData.server_name}\" updated successfully!`);\n        setTimeout(() => setError(''), 3000);\n      } else {\n        const errorData = await response.json();\n        setError(`Failed to update server: ${errorData.message || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error updating server:', err);\n      setError('Error updating server. Please try again.');\n    } finally {\n      setServerActionLoading(false);\n    }\n  }, [fetchServers]);\n\n  // Delete server\n  const deleteServer = useCallback(async serverId => {\n    setServerActionLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/admin/servers/${serverId}`, {\n        method: 'DELETE',\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setError('');\n        fetchServers(); // Refresh servers list\n        setDeleteConfirm(null);\n        setError(`✅ Server deleted successfully!`);\n        setTimeout(() => setError(''), 3000);\n      } else {\n        const errorData = await response.json();\n        setError(`Failed to delete server: ${errorData.message || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error deleting server:', err);\n      setError('Error deleting server. Please try again.');\n    } finally {\n      setServerActionLoading(false);\n    }\n  }, [fetchServers]);\n\n  // Reset server form\n  const resetServerForm = () => {\n    setServerForm({\n      server_name: '',\n      server_ip: '',\n      ssh_port: 22,\n      ssh_username: '',\n      description: '',\n      is_active: true\n    });\n  };\n\n  // Handle server form submission\n  const handleServerFormSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!serverForm.server_name.trim() || !serverForm.server_ip.trim() || !serverForm.ssh_username.trim()) {\n      setError('Please fill in all required fields (Name, IP, SSH Username)');\n      return;\n    }\n\n    // Validate IP address format\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (!ipRegex.test(serverForm.server_ip)) {\n      setError('Please enter a valid IP address format (e.g., 192.168.1.100)');\n      return;\n    }\n\n    // Validate port\n    const port = parseInt(serverForm.ssh_port);\n    if (port < 1 || port > 65535) {\n      setError('SSH port must be between 1 and 65535');\n      return;\n    }\n    if (editingServer) {\n      updateServer(editingServer.id || editingServer._id, serverForm);\n    } else {\n      addServer(serverForm);\n    }\n  };\n\n  // Handle edit server\n  const handleEditServer = server => {\n    setServerForm({\n      server_name: server.server_name || '',\n      server_ip: server.server_ip || '',\n      ssh_port: server.ssh_port || 22,\n      ssh_username: server.ssh_username || '',\n      description: server.description || '',\n      is_active: server.is_active !== undefined ? server.is_active : true\n    });\n    setEditingServer(server);\n    setShowAddServerModal(true);\n  };\n\n  // Handle delete confirmation\n  const handleDeleteConfirm = server => {\n    setDeleteConfirm(server);\n  };\n\n  // Fetch server sessions\n  const fetchServerSessions = useCallback(async serverIp => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/admin/servers/${serverIp}/sessions?limit=10`, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setServerSessions(data.sessions);\n        setSelectedServer(serverIp);\n        setCurrentView('servers');\n      }\n    } catch (err) {\n      setError('Error fetching server sessions');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch session details\n  const fetchSessionDetails = useCallback(async sessionId => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/admin/sessions/${sessionId}`, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSessionDetails(data);\n        setSelectedSession(sessionId);\n        setCurrentView('session-details');\n      }\n    } catch (err) {\n      setError('Error fetching session details');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Initial data load\n  useEffect(() => {\n    fetchDashboardStats();\n    fetchServers();\n    fetchStudents();\n  }, [fetchDashboardStats, fetchServers, fetchStudents]);\n\n  // Auto-refresh every 30 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchDashboardStats();\n      fetchServers();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [fetchDashboardStats, fetchServers]);\n  const handleRefresh = () => {\n    fetchDashboardStats();\n    fetchServers();\n    fetchStudents();\n  };\n  const formatDuration = seconds => {\n    if (!seconds) return '0s';\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    if (hours > 0) return `${hours}h ${minutes}m`;\n    if (minutes > 0) return `${minutes}m ${secs}s`;\n    return `${secs}s`;\n  };\n  const formatDateTime = dateString => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleString();\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return '#10b981';\n      case 'disconnected':\n        return '#6b7280';\n      case 'timeout':\n        return '#f59e0b';\n      default:\n        return '#6b7280';\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  };\n  const filteredServers = servers.filter(server => {\n    var _server$server_name, _server$server_ip;\n    return ((_server$server_name = server.server_name) === null || _server$server_name === void 0 ? void 0 : _server$server_name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_server$server_ip = server.server_ip) === null || _server$server_ip === void 0 ? void 0 : _server$server_ip.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n  const filteredStudents = students.filter(student => {\n    var _student$name, _student$email, _student$registered_i;\n    return ((_student$name = student.name) === null || _student$name === void 0 ? void 0 : _student$name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_student$email = student.email) === null || _student$email === void 0 ? void 0 : _student$email.toLowerCase().includes(searchTerm.toLowerCase())) || ((_student$registered_i = student.registered_id) === null || _student$registered_i === void 0 ? void 0 : _student$registered_i.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n\n  // CSS Styles (keeping existing styles and adding new ones)\n  const styles = `\n    .admin-dashboard {\n      min-height: 100vh;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n\n    .dashboard-header {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n      padding: 1rem 2rem;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n\n    .dashboard-title {\n      color: white;\n      margin: 0;\n      font-size: 1.8rem;\n      font-weight: 600;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .dashboard-controls {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n    }\n\n    .btn {\n      padding: 0.5rem 1rem;\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      font-weight: 500;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      text-decoration: none;\n    }\n\n    .btn-primary {\n      background: rgba(59, 130, 246, 0.8);\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: rgba(18, 86, 196, 1);\n      transform: translateY(-1px);\n    }\n\n    .btn-secondary {\n      background: rgba(255, 255, 255, 0.1);\n      color: white;\n      border: 1px solid rgba(255, 255, 255, 0.2);\n    }\n\n    .btn-secondary:hover {\n      background: rgba(255, 255, 255, 0.2);\n    }\n\n    .btn-success {\n      background: rgba(34, 197, 94, 0.8);\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: rgba(34, 197, 94, 1);\n    }\n\n    .btn-warning {\n      background: rgba(245, 158, 11, 0.8);\n      color: white;\n    }\n\n    .btn-warning:hover {\n      background: rgba(245, 158, 11, 1);\n    }\n\n    .btn-danger {\n      background: rgba(239, 68, 68, 0.8);\n      color: white;\n    }\n\n    .btn-danger:hover {\n      background: rgba(239, 68, 68, 1);\n    }\n\n    .btn-small {\n      padding: 0.25rem 0.75rem;\n      font-size: 0.875rem;\n    }\n\n    .dashboard-content {\n      padding: 2rem;\n      max-width: 1400px;\n      margin: 0 auto;\n    }\n\n    .navigation-tabs {\n      display: flex;\n      gap: 0.5rem;\n      margin-bottom: 2rem;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 12px;\n      padding: 0.5rem;\n    }\n\n    .nav-tab {\n      padding: 0.75rem 1.5rem;\n      border-radius: 8px;\n      border: none;\n      background: transparent;\n      color: rgba(255, 255, 255, 1);\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-weight: 500;\n    }\n\n    .nav-tab.active {\n      background: rgba(255, 255, 255, 0.2);\n      color: white;\n      backdrop-filter: blur(10px);\n    }\n\n    .nav-tab:hover:not(.active) {\n      background: rgba(255, 255, 255, 0.1);\n      color: rgba(255, 255, 255, 0.9);\n    }\n\n    .stats-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n      gap: 1.5rem;\n      margin-bottom: 2rem;\n    }\n\n    .stat-card {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      padding: 1.5rem;\n      color: white;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .stat-card:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\n    }\n\n    .stat-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1rem;\n    }\n\n    .stat-icon {\n      padding: 0.75rem;\n      border-radius: 12px;\n      background: rgba(255, 255, 255, 0.1);\n    }\n\n    .stat-value {\n      font-size: 2rem;\n      font-weight: 700;\n      margin-bottom: 0.25rem;\n    }\n\n    .stat-label {\n      color: rgba(255, 255, 255, 0.8);\n      font-size: 0.9rem;\n    }\n\n    .search-bar {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      margin-bottom: 2rem;\n    }\n\n    .search-input {\n      flex: 1;\n      padding: 0.75rem 1rem;\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 12px;\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      color: white;\n      font-size: 1rem;\n    }\n\n    .search-input::placeholder {\n      color: rgba(255, 255, 255, 0.6);\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: rgba(59, 130, 246, 0.5);\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n    }\n\n    .content-grid {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .servers-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n      gap: 1.5rem;\n    }\n\n    .server-card {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      padding: 1.5rem;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      position: relative;\n    }\n\n    .server-card:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\n      background: rgba(255, 255, 255, 0.15);\n    }\n\n    .server-card-actions {\n      position: absolute;\n      top: 1rem;\n      right: 1rem;\n      display: flex;\n      gap: 0.5rem;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    }\n\n    .server-card:hover .server-card-actions {\n      opacity: 1;\n    }\n\n    .server-header {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      margin-bottom: 1rem;\n    }\n\n    .server-status {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .status-dot {\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: #10b981;\n    }\n\n    .server-stats {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1rem;\n      margin-top: 1rem;\n    }\n\n    .server-stat {\n      text-align: center;\n    }\n\n    .server-stat-value {\n      font-size: 1.25rem;\n      font-weight: 600;\n      color: #ffffffff;\n    }\n\n    .server-stat-label {\n      font-size: 0.75rem;\n      color: rgba(255, 255, 255, 0.7);\n    }\n\n    .session-table {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      overflow: hidden;\n    }\n\n    .table-header {\n      background: rgba(255, 255, 255, 0.1);\n      padding: 1rem;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    .table {\n      width: 100%;\n      color: white;\n    }\n\n    .table thead {\n      background: rgba(255, 255, 255, 0.05);\n    }\n\n    .table th,\n    .table td {\n      padding: 1rem;\n      text-align: left;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    }\n\n    .table th {\n      font-weight: 600;\n      color: rgba(255, 255, 255, 0.9);\n      font-size: 0.875rem;\n      text-transform: uppercase;\n      letter-spacing: 0.05em;\n    }\n\n    .table tbody tr {\n      cursor: pointer;\n      transition: background-color 0.2s ease;\n    }\n\n    .table tbody tr:hover {\n      background: rgba(255, 255, 255, 0.05);\n    }\n\n    .status-badge {\n      display: inline-flex;\n      align-items: center;\n      gap: 0.25rem;\n      padding: 0.25rem 0.75rem;\n      border-radius: 20px;\n      font-size: 0.75rem;\n      font-weight: 500;\n    }\n\n    .status-active {\n      background: rgba(16, 185, 129, 0.2);\n      color: #10b981;\n      border: 1px solid rgba(16, 185, 129, 0.3);\n    }\n\n    .status-inactive {\n      background: rgba(239, 68, 68, 0.2);\n      color: #f87171;\n      border: 1px solid rgba(239, 68, 68, 0.3);\n    }\n\n    .status-disconnected {\n      background: rgba(107, 114, 128, 0.2);\n      color: #9ca3af;\n      border: 1px solid rgba(107, 114, 128, 0.3);\n    }\n\n    .session-details {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    .session-info-card {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      padding: 1.5rem;\n      color: white;\n    }\n\n    .session-info-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 1rem;\n    }\n\n    .info-item {\n      display: flex;\n      flex-direction: column;\n      gap: 0.25rem;\n    }\n\n    .info-label {\n      font-size: 0.75rem;\n      color: rgba(255, 255, 255, 0.7);\n      text-transform: uppercase;\n      letter-spacing: 0.05em;\n    }\n\n    .info-value {\n      font-size: 1rem;\n      font-weight: 500;\n    }\n\n    .commands-section {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      padding: 1.5rem;\n      color: white;\n    }\n\n    .command-item {\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 8px;\n      padding: 1rem;\n      margin-bottom: 1rem;\n      border-left: 4px solid #60a5fa;\n    }\n\n    .command-header {\n      display: flex;\n      justify-content: between;\n      align-items: center;\n      margin-bottom: 0.5rem;\n    }\n\n    .command-text {\n      font-family: 'Courier New', monospace;\n      font-weight: 600;\n      color: #60a5fa;\n      flex: 1;\n    }\n\n    .command-time {\n      font-size: 0.75rem;\n      color: rgba(255, 255, 255, 0.6);\n    }\n\n    .command-output {\n      background: rgba(0, 0, 0, 0.3);\n      border-radius: 4px;\n      padding: 0.75rem;\n      margin-top: 0.5rem;\n      font-family: 'Courier New', monospace;\n      font-size: 0.875rem;\n      white-space: pre-wrap;\n      max-height: 200px;\n      overflow-y: auto;\n      border: 1px solid rgba(255, 255, 255, 0.1);\n    }\n\n    .loading-spinner {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 2rem;\n      color: white;\n    }\n\n    .error-message {\n      background: rgba(239, 68, 68, 0.1);\n      border: 1px solid rgba(239, 68, 68, 0.3);\n      color: #f87171;\n      padding: 1rem;\n      border-radius: 12px;\n      margin-bottom: 1rem;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .success-message {\n      background: rgba(34, 197, 94, 0.1);\n      border: 1px solid rgba(34, 197, 94, 0.3);\n      color: #4ade80;\n      padding: 1rem;\n      border-radius: 12px;\n      margin-bottom: 1rem;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .breadcrumb {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      margin-bottom: 1rem;\n      color: rgba(255, 255, 255, 0.8);\n    }\n\n    .breadcrumb-item {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .breadcrumb-separator {\n      color: rgba(255, 255, 255, 0.5);\n    }\n\n    /* Modal Styles */\n    .modal-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      backdrop-filter: blur(4px);\n    }\n\n    .modal-content {\n      background: rgba(255, 255, 255, 0.1);\n      backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 16px;\n      padding: 2rem;\n      max-width: 500px;\n      width: 90%;\n      color: white;\n      max-height: 90vh;\n      overflow-y: auto;\n    }\n\n    .modal-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .modal-title {\n      margin: 0;\n      font-size: 1.25rem;\n      font-weight: 600;\n    }\n\n    .form-group {\n      margin-bottom: 1rem;\n    }\n\n    .form-label {\n      display: block;\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: rgba(255, 255, 255, 0.9);\n    }\n\n    .form-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      border-radius: 8px;\n      background: rgba(255, 255, 255, 0.1);\n      color: white;\n      font-size: 1rem;\n      box-sizing: border-box;\n    }\n\n    .form-input::placeholder {\n      color: rgba(255, 255, 255, 0.5);\n    }\n\n    .form-input:focus {\n      outline: none;\n      border-color: rgba(59, 130, 246, 0.5);\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n    }\n\n    .form-textarea {\n      min-height: 100px;\n      resize: vertical;\n    }\n\n    .form-checkbox {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .form-checkbox input {\n      width: auto;\n    }\n\n    .modal-actions {\n      display: flex;\n      gap: 1rem;\n      justify-content: flex-end;\n      margin-top: 1.5rem;\n    }\n\n    .confirm-dialog {\n      background: rgba(239, 68, 68, 0.1);\n      border: 1px solid rgba(239, 68, 68, 0.3);\n      border-radius: 12px;\n      padding: 1.5rem;\n      text-align: center;\n    }\n\n    .confirm-dialog h3 {\n      margin-top: 0;\n      color: #f87171;\n    }\n\n    .confirm-dialog p {\n      margin-bottom: 1.5rem;\n      color: rgba(255, 255, 255, 0.8);\n    }\n\n    .server-management-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .servers-management-grid {\n      display: grid;\n      gap: 1.5rem;\n    }\n\n    @media (max-width: 768px) {\n      .dashboard-header {\n        flex-direction: column;\n        gap: 1rem;\n        text-align: center;\n      }\n\n      .dashboard-controls {\n        flex-wrap: wrap;\n        justify-content: center;\n      }\n\n      .stats-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .servers-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .navigation-tabs {\n        flex-wrap: wrap;\n      }\n\n      .search-bar {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .modal-content {\n        width: 95%;\n        padding: 1.5rem;\n      }\n\n      .modal-actions {\n        flex-direction: column;\n      }\n    }\n\n    .animate-pulse {\n      animation: pulse 2s infinite;\n    }\n\n    @keyframes pulse {\n      0%, 100% { opacity: 1; }\n      50% { opacity: 0.5; }\n    }\n  `;\n};\n_s(AdminDashboard, \"lwngGIEIEPw4k+0Cn6ks1wyLV+I=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Users","Server","Terminal","Clock","Activity","Eye","AlertTriangle","RefreshCw","Search","Filter","BarChart3","User","ArrowLeft","Monitor","Command","CommandIcon","Calendar","Globe","Shield","Zap","Plus","Trash2","Edit","Save","X","Settings","Database","CheckCircle","XCircle","Loader","AdminDashboard","_s","dashboardStats","setDashboardStats","servers","setServers","students","setStudents","selectedServer","setSelectedServer","serverSessions","setServerSessions","selectedSession","setSelectedSession","sessionDetails","setSessionDetails","loading","setLoading","error","setError","currentView","setCurrentView","searchTerm","setSearchTerm","showAddServerModal","setShowAddServerModal","editingServer","setEditingServer","serverForm","setServerForm","server_name","server_ip","ssh_port","ssh_username","description","is_active","serverActionLoading","setServerActionLoading","deleteConfirm","setDeleteConfirm","API_BASE","getAuthHeaders","localStorage","getItem","fetchDashboardStats","response","fetch","headers","ok","data","json","err","console","fetchServers","fetchStudents","addServer","serverData","method","body","JSON","stringify","result","resetServerForm","setTimeout","errorData","message","updateServer","serverId","deleteServer","handleServerFormSubmit","e","preventDefault","trim","ipRegex","test","port","parseInt","id","_id","handleEditServer","server","undefined","handleDeleteConfirm","fetchServerSessions","serverIp","sessions","fetchSessionDetails","sessionId","interval","setInterval","clearInterval","handleRefresh","formatDuration","seconds","hours","Math","floor","minutes","secs","formatDateTime","dateString","Date","toLocaleString","getStatusColor","status","handleLogout","removeItem","window","location","href","filteredServers","filter","_server$server_name","_server$server_ip","toLowerCase","includes","filteredStudents","student","_student$name","_student$email","_student$registered_i","name","email","registered_id","styles","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  Users, \r\n  Server, \r\n  Terminal, \r\n  Clock, \r\n  Activity, \r\n  Eye, \r\n  AlertTriangle,\r\n  RefreshCw,\r\n  Search,\r\n  Filter,\r\n  BarChart3,\r\n  User,\r\n  ArrowLeft,\r\n  Monitor,\r\n  Command as CommandIcon,\r\n  Calendar,\r\n  Globe,\r\n  Shield,\r\n  Zap,\r\n  Plus,\r\n  Trash2,\r\n  Edit,\r\n  Save,\r\n  X,\r\n  Settings,\r\n  Database,\r\n  CheckCircle,\r\n  XCircle,\r\n  Loader\r\n} from 'lucide-react';\r\n\r\nconst AdminDashboard = () => {\r\n  const [dashboardStats, setDashboardStats] = useState(null);\r\n  const [servers, setServers] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [serverSessions, setServerSessions] = useState([]);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [sessionDetails, setSessionDetails] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [currentView, setCurrentView] = useState('overview');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Server management states\r\n  const [showAddServerModal, setShowAddServerModal] = useState(false);\r\n  const [editingServer, setEditingServer] = useState(null);\r\n  const [serverForm, setServerForm] = useState({\r\n    server_name: '',\r\n    server_ip: '',\r\n    ssh_port: 22,\r\n    ssh_username: '',\r\n    description: '',\r\n    is_active: true\r\n  });\r\n  const [serverActionLoading, setServerActionLoading] = useState(false);\r\n  const [deleteConfirm, setDeleteConfirm] = useState(null);\r\n\r\n  const API_BASE = 'http://localhost:5000/api';\r\n  \r\n  const getAuthHeaders = () => ({\r\n    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  // Fetch dashboard statistics\r\n  const fetchDashboardStats = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/dashboard/stats`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDashboardStats(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching dashboard stats:', err);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch servers list\r\n  const fetchServers = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/servers`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setServers(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching servers:', err);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch students list\r\n  const fetchStudents = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/students`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStudents(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching students:', err);\r\n    }\r\n  }, []);\r\n\r\n  // Add new server\r\n  const addServer = useCallback(async (serverData) => {\r\n    setServerActionLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/servers`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify(serverData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setError('');\r\n        fetchServers(); // Refresh servers list\r\n        setShowAddServerModal(false);\r\n        resetServerForm();\r\n        // Show success message (you can implement a toast notification here)\r\n        setError(`✅ Server \"${serverData.server_name}\" added successfully!`);\r\n        setTimeout(() => setError(''), 3000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(`Failed to add server: ${errorData.message || 'Unknown error'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error adding server:', err);\r\n      setError('Error adding server. Please try again.');\r\n    } finally {\r\n      setServerActionLoading(false);\r\n    }\r\n  }, [fetchServers]);\r\n\r\n  // Update server\r\n  const updateServer = useCallback(async (serverId, serverData) => {\r\n    setServerActionLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/servers/${serverId}`, {\r\n        method: 'PUT',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify(serverData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setError('');\r\n        fetchServers(); // Refresh servers list\r\n        setEditingServer(null);\r\n        resetServerForm();\r\n        setError(`✅ Server \"${serverData.server_name}\" updated successfully!`);\r\n        setTimeout(() => setError(''), 3000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(`Failed to update server: ${errorData.message || 'Unknown error'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating server:', err);\r\n      setError('Error updating server. Please try again.');\r\n    } finally {\r\n      setServerActionLoading(false);\r\n    }\r\n  }, [fetchServers]);\r\n\r\n  // Delete server\r\n  const deleteServer = useCallback(async (serverId) => {\r\n    setServerActionLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/servers/${serverId}`, {\r\n        method: 'DELETE',\r\n        headers: getAuthHeaders()\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setError('');\r\n        fetchServers(); // Refresh servers list\r\n        setDeleteConfirm(null);\r\n        setError(`✅ Server deleted successfully!`);\r\n        setTimeout(() => setError(''), 3000);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(`Failed to delete server: ${errorData.message || 'Unknown error'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting server:', err);\r\n      setError('Error deleting server. Please try again.');\r\n    } finally {\r\n      setServerActionLoading(false);\r\n    }\r\n  }, [fetchServers]);\r\n\r\n  // Reset server form\r\n  const resetServerForm = () => {\r\n    setServerForm({\r\n      server_name: '',\r\n      server_ip: '',\r\n      ssh_port: 22,\r\n      ssh_username: '',\r\n      description: '',\r\n      is_active: true\r\n    });\r\n  };\r\n\r\n  // Handle server form submission\r\n  const handleServerFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!serverForm.server_name.trim() || !serverForm.server_ip.trim() || !serverForm.ssh_username.trim()) {\r\n      setError('Please fill in all required fields (Name, IP, SSH Username)');\r\n      return;\r\n    }\r\n\r\n    // Validate IP address format\r\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    if (!ipRegex.test(serverForm.server_ip)) {\r\n      setError('Please enter a valid IP address format (e.g., 192.168.1.100)');\r\n      return;\r\n    }\r\n\r\n    // Validate port\r\n    const port = parseInt(serverForm.ssh_port);\r\n    if (port < 1 || port > 65535) {\r\n      setError('SSH port must be between 1 and 65535');\r\n      return;\r\n    }\r\n\r\n    if (editingServer) {\r\n      updateServer(editingServer.id || editingServer._id, serverForm);\r\n    } else {\r\n      addServer(serverForm);\r\n    }\r\n  };\r\n\r\n  // Handle edit server\r\n  const handleEditServer = (server) => {\r\n    setServerForm({\r\n      server_name: server.server_name || '',\r\n      server_ip: server.server_ip || '',\r\n      ssh_port: server.ssh_port || 22,\r\n      ssh_username: server.ssh_username || '',\r\n      description: server.description || '',\r\n      is_active: server.is_active !== undefined ? server.is_active : true\r\n    });\r\n    setEditingServer(server);\r\n    setShowAddServerModal(true);\r\n  };\r\n\r\n  // Handle delete confirmation\r\n  const handleDeleteConfirm = (server) => {\r\n    setDeleteConfirm(server);\r\n  };\r\n\r\n  // Fetch server sessions\r\n  const fetchServerSessions = useCallback(async (serverIp) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/servers/${serverIp}/sessions?limit=10`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setServerSessions(data.sessions);\r\n        setSelectedServer(serverIp);\r\n        setCurrentView('servers');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching server sessions');\r\n      console.error('Error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch session details\r\n  const fetchSessionDetails = useCallback(async (sessionId) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/admin/sessions/${sessionId}`, {\r\n        headers: getAuthHeaders()\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSessionDetails(data);\r\n        setSelectedSession(sessionId);\r\n        setCurrentView('session-details');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching session details');\r\n      console.error('Error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Initial data load\r\n  useEffect(() => {\r\n    fetchDashboardStats();\r\n    fetchServers();\r\n    fetchStudents();\r\n  }, [fetchDashboardStats, fetchServers, fetchStudents]);\r\n\r\n  // Auto-refresh every 30 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchDashboardStats();\r\n      fetchServers();\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchDashboardStats, fetchServers]);\r\n\r\n  const handleRefresh = () => {\r\n    fetchDashboardStats();\r\n    fetchServers();\r\n    fetchStudents();\r\n  };\r\n\r\n  const formatDuration = (seconds) => {\r\n    if (!seconds) return '0s';\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    \r\n    if (hours > 0) return `${hours}h ${minutes}m`;\r\n    if (minutes > 0) return `${minutes}m ${secs}s`;\r\n    return `${secs}s`;\r\n  };\r\n\r\n  const formatDateTime = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'active': return '#10b981';\r\n      case 'disconnected': return '#6b7280';\r\n      case 'timeout': return '#f59e0b';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  const filteredServers = servers.filter(server => \r\n    server.server_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    server.server_ip?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const filteredStudents = students.filter(student =>\r\n    student.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    student.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    student.registered_id?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // CSS Styles (keeping existing styles and adding new ones)\r\n  const styles = `\r\n    .admin-dashboard {\r\n      min-height: 100vh;\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .dashboard-header {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n      padding: 1rem 2rem;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .dashboard-title {\r\n      color: white;\r\n      margin: 0;\r\n      font-size: 1.8rem;\r\n      font-weight: 600;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .dashboard-controls {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .btn {\r\n      padding: 0.5rem 1rem;\r\n      border: none;\r\n      border-radius: 8px;\r\n      cursor: pointer;\r\n      font-weight: 500;\r\n      transition: all 0.2s ease;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      text-decoration: none;\r\n    }\r\n\r\n    .btn-primary {\r\n      background: rgba(59, 130, 246, 0.8);\r\n      color: white;\r\n    }\r\n\r\n    .btn-primary:hover {\r\n      background: rgba(18, 86, 196, 1);\r\n      transform: translateY(-1px);\r\n    }\r\n\r\n    .btn-secondary {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      color: white;\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n    }\r\n\r\n    .btn-secondary:hover {\r\n      background: rgba(255, 255, 255, 0.2);\r\n    }\r\n\r\n    .btn-success {\r\n      background: rgba(34, 197, 94, 0.8);\r\n      color: white;\r\n    }\r\n\r\n    .btn-success:hover {\r\n      background: rgba(34, 197, 94, 1);\r\n    }\r\n\r\n    .btn-warning {\r\n      background: rgba(245, 158, 11, 0.8);\r\n      color: white;\r\n    }\r\n\r\n    .btn-warning:hover {\r\n      background: rgba(245, 158, 11, 1);\r\n    }\r\n\r\n    .btn-danger {\r\n      background: rgba(239, 68, 68, 0.8);\r\n      color: white;\r\n    }\r\n\r\n    .btn-danger:hover {\r\n      background: rgba(239, 68, 68, 1);\r\n    }\r\n\r\n    .btn-small {\r\n      padding: 0.25rem 0.75rem;\r\n      font-size: 0.875rem;\r\n    }\r\n\r\n    .dashboard-content {\r\n      padding: 2rem;\r\n      max-width: 1400px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .navigation-tabs {\r\n      display: flex;\r\n      gap: 0.5rem;\r\n      margin-bottom: 2rem;\r\n      background: rgba(255, 255, 255, 0.1);\r\n      border-radius: 12px;\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .nav-tab {\r\n      padding: 0.75rem 1.5rem;\r\n      border-radius: 8px;\r\n      border: none;\r\n      background: transparent;\r\n      color: rgba(255, 255, 255, 1);\r\n      cursor: pointer;\r\n      transition: all 0.2s ease;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .nav-tab.active {\r\n      background: rgba(255, 255, 255, 0.2);\r\n      color: white;\r\n      backdrop-filter: blur(10px);\r\n    }\r\n\r\n    .nav-tab:hover:not(.active) {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      color: rgba(255, 255, 255, 0.9);\r\n    }\r\n\r\n    .stats-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n      gap: 1.5rem;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .stat-card {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      padding: 1.5rem;\r\n      color: white;\r\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n    }\r\n\r\n    .stat-card:hover {\r\n      transform: translateY(-4px);\r\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .stat-header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .stat-icon {\r\n      padding: 0.75rem;\r\n      border-radius: 12px;\r\n      background: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .stat-value {\r\n      font-size: 2rem;\r\n      font-weight: 700;\r\n      margin-bottom: 0.25rem;\r\n    }\r\n\r\n    .stat-label {\r\n      color: rgba(255, 255, 255, 0.8);\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .search-bar {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .search-input {\r\n      flex: 1;\r\n      padding: 0.75rem 1rem;\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 12px;\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      color: white;\r\n      font-size: 1rem;\r\n    }\r\n\r\n    .search-input::placeholder {\r\n      color: rgba(255, 255, 255, 0.6);\r\n    }\r\n\r\n    .search-input:focus {\r\n      outline: none;\r\n      border-color: rgba(59, 130, 246, 0.5);\r\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n    }\r\n\r\n    .content-grid {\r\n      display: grid;\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .servers-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .server-card {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      padding: 1.5rem;\r\n      color: white;\r\n      cursor: pointer;\r\n      transition: all 0.2s ease;\r\n      position: relative;\r\n    }\r\n\r\n    .server-card:hover {\r\n      transform: translateY(-4px);\r\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);\r\n      background: rgba(255, 255, 255, 0.15);\r\n    }\r\n\r\n    .server-card-actions {\r\n      position: absolute;\r\n      top: 1rem;\r\n      right: 1rem;\r\n      display: flex;\r\n      gap: 0.5rem;\r\n      opacity: 0;\r\n      transition: opacity 0.2s ease;\r\n    }\r\n\r\n    .server-card:hover .server-card-actions {\r\n      opacity: 1;\r\n    }\r\n\r\n    .server-header {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .server-status {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      font-size: 0.875rem;\r\n    }\r\n\r\n    .status-dot {\r\n      width: 8px;\r\n      height: 8px;\r\n      border-radius: 50%;\r\n      background: #10b981;\r\n    }\r\n\r\n    .server-stats {\r\n      display: grid;\r\n      grid-template-columns: repeat(2, 1fr);\r\n      gap: 1rem;\r\n      margin-top: 1rem;\r\n    }\r\n\r\n    .server-stat {\r\n      text-align: center;\r\n    }\r\n\r\n    .server-stat-value {\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      color: #ffffffff;\r\n    }\r\n\r\n    .server-stat-label {\r\n      font-size: 0.75rem;\r\n      color: rgba(255, 255, 255, 0.7);\r\n    }\r\n\r\n    .session-table {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .table-header {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      padding: 1rem;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    .table {\r\n      width: 100%;\r\n      color: white;\r\n    }\r\n\r\n    .table thead {\r\n      background: rgba(255, 255, 255, 0.05);\r\n    }\r\n\r\n    .table th,\r\n    .table td {\r\n      padding: 1rem;\r\n      text-align: left;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .table th {\r\n      font-weight: 600;\r\n      color: rgba(255, 255, 255, 0.9);\r\n      font-size: 0.875rem;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.05em;\r\n    }\r\n\r\n    .table tbody tr {\r\n      cursor: pointer;\r\n      transition: background-color 0.2s ease;\r\n    }\r\n\r\n    .table tbody tr:hover {\r\n      background: rgba(255, 255, 255, 0.05);\r\n    }\r\n\r\n    .status-badge {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      gap: 0.25rem;\r\n      padding: 0.25rem 0.75rem;\r\n      border-radius: 20px;\r\n      font-size: 0.75rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .status-active {\r\n      background: rgba(16, 185, 129, 0.2);\r\n      color: #10b981;\r\n      border: 1px solid rgba(16, 185, 129, 0.3);\r\n    }\r\n\r\n    .status-inactive {\r\n      background: rgba(239, 68, 68, 0.2);\r\n      color: #f87171;\r\n      border: 1px solid rgba(239, 68, 68, 0.3);\r\n    }\r\n\r\n    .status-disconnected {\r\n      background: rgba(107, 114, 128, 0.2);\r\n      color: #9ca3af;\r\n      border: 1px solid rgba(107, 114, 128, 0.3);\r\n    }\r\n\r\n    .session-details {\r\n      display: grid;\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .session-info-card {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      padding: 1.5rem;\r\n      color: white;\r\n    }\r\n\r\n    .session-info-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n      gap: 1rem;\r\n    }\r\n\r\n    .info-item {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.25rem;\r\n    }\r\n\r\n    .info-label {\r\n      font-size: 0.75rem;\r\n      color: rgba(255, 255, 255, 0.7);\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.05em;\r\n    }\r\n\r\n    .info-value {\r\n      font-size: 1rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .commands-section {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(10px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      padding: 1.5rem;\r\n      color: white;\r\n    }\r\n\r\n    .command-item {\r\n      background: rgba(0, 0, 0, 0.2);\r\n      border-radius: 8px;\r\n      padding: 1rem;\r\n      margin-bottom: 1rem;\r\n      border-left: 4px solid #60a5fa;\r\n    }\r\n\r\n    .command-header {\r\n      display: flex;\r\n      justify-content: between;\r\n      align-items: center;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .command-text {\r\n      font-family: 'Courier New', monospace;\r\n      font-weight: 600;\r\n      color: #60a5fa;\r\n      flex: 1;\r\n    }\r\n\r\n    .command-time {\r\n      font-size: 0.75rem;\r\n      color: rgba(255, 255, 255, 0.6);\r\n    }\r\n\r\n    .command-output {\r\n      background: rgba(0, 0, 0, 0.3);\r\n      border-radius: 4px;\r\n      padding: 0.75rem;\r\n      margin-top: 0.5rem;\r\n      font-family: 'Courier New', monospace;\r\n      font-size: 0.875rem;\r\n      white-space: pre-wrap;\r\n      max-height: 200px;\r\n      overflow-y: auto;\r\n      border: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .loading-spinner {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      padding: 2rem;\r\n      color: white;\r\n    }\r\n\r\n    .error-message {\r\n      background: rgba(239, 68, 68, 0.1);\r\n      border: 1px solid rgba(239, 68, 68, 0.3);\r\n      color: #f87171;\r\n      padding: 1rem;\r\n      border-radius: 12px;\r\n      margin-bottom: 1rem;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .success-message {\r\n      background: rgba(34, 197, 94, 0.1);\r\n      border: 1px solid rgba(34, 197, 94, 0.3);\r\n      color: #4ade80;\r\n      padding: 1rem;\r\n      border-radius: 12px;\r\n      margin-bottom: 1rem;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .breadcrumb {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      margin-bottom: 1rem;\r\n      color: rgba(255, 255, 255, 0.8);\r\n    }\r\n\r\n    .breadcrumb-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .breadcrumb-separator {\r\n      color: rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    /* Modal Styles */\r\n    .modal-overlay {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      z-index: 1000;\r\n      backdrop-filter: blur(4px);\r\n    }\r\n\r\n    .modal-content {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      backdrop-filter: blur(20px);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      padding: 2rem;\r\n      max-width: 500px;\r\n      width: 90%;\r\n      color: white;\r\n      max-height: 90vh;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    .modal-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1.5rem;\r\n    }\r\n\r\n    .modal-title {\r\n      margin: 0;\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .form-group {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .form-label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      font-weight: 500;\r\n      color: rgba(255, 255, 255, 0.9);\r\n    }\r\n\r\n    .form-input {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      border-radius: 8px;\r\n      background: rgba(255, 255, 255, 0.1);\r\n      color: white;\r\n      font-size: 1rem;\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    .form-input::placeholder {\r\n      color: rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .form-input:focus {\r\n      outline: none;\r\n      border-color: rgba(59, 130, 246, 0.5);\r\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n    }\r\n\r\n    .form-textarea {\r\n      min-height: 100px;\r\n      resize: vertical;\r\n    }\r\n\r\n    .form-checkbox {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .form-checkbox input {\r\n      width: auto;\r\n    }\r\n\r\n    .modal-actions {\r\n      display: flex;\r\n      gap: 1rem;\r\n      justify-content: flex-end;\r\n      margin-top: 1.5rem;\r\n    }\r\n\r\n    .confirm-dialog {\r\n      background: rgba(239, 68, 68, 0.1);\r\n      border: 1px solid rgba(239, 68, 68, 0.3);\r\n      border-radius: 12px;\r\n      padding: 1.5rem;\r\n      text-align: center;\r\n    }\r\n\r\n    .confirm-dialog h3 {\r\n      margin-top: 0;\r\n      color: #f87171;\r\n    }\r\n\r\n    .confirm-dialog p {\r\n      margin-bottom: 1.5rem;\r\n      color: rgba(255, 255, 255, 0.8);\r\n    }\r\n\r\n    .server-management-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1.5rem;\r\n    }\r\n\r\n    .servers-management-grid {\r\n      display: grid;\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .dashboard-header {\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        text-align: center;\r\n      }\r\n\r\n      .dashboard-controls {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n      }\r\n\r\n      .stats-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n\r\n      .servers-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n\r\n      .navigation-tabs {\r\n        flex-wrap: wrap;\r\n      }\r\n\r\n      .search-bar {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n      }\r\n\r\n      .modal-content {\r\n        width: 95%;\r\n        padding: 1.5rem;\r\n      }\r\n\r\n      .modal-actions {\r\n        flex-direction: column;\r\n      }\r\n    }\r\n\r\n    .animate-pulse {\r\n      animation: pulse 2s infinite;\r\n    }\r\n\r\n    @keyframes pulse {\r\n      0%, 100% { opacity: 1; }\r\n      50% { opacity: 0.5; }\r\n    }\r\n  `};\r\n  export default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}