{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh project slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/StudentDashboard.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport \"xterm/css/xterm.css\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const termRef = useRef(null);\n  const socketRef = useRef(null);\n  const fitAddonRef = useRef(null);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    // Initialize terminal\n    const term = new Terminal({\n      cursorBlink: true,\n      rows: 20,\n      cols: 80\n    });\n    const fitAddon = new FitAddon();\n    fitAddonRef.current = fitAddon;\n    term.loadAddon(fitAddon);\n    if (termRef.current) {\n      term.open(termRef.current);\n      fitAddon.fit();\n    }\n\n    // Connect to backend socket\n    socketRef.current = io(\"http://localhost:5000\"); // <-- Change if backend runs elsewhere\n\n    socketRef.current.on(\"connect\", () => {\n      setConnected(true);\n      term.writeln(\"✅ Connected to server!\");\n    });\n    socketRef.current.on(\"output\", data => {\n      term.write(data);\n    });\n    term.onData(data => {\n      socketRef.current.emit(\"input\", data);\n    });\n    socketRef.current.on(\"disconnect\", () => {\n      setConnected(false);\n      term.writeln(\"\\r\\n❌ Disconnected from server\");\n    });\n\n    // cleanup\n    return () => {\n      term.dispose();\n      socketRef.current.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", connected ? \"🟢 Connected\" : \"🔴 Disconnected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: termRef,\n      style: {\n        width: \"100%\",\n        height: \"500px\",\n        background: \"black\",\n        borderRadius: \"8px\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"7IPkG1MwCH/cykcKYLs9Vs1zUw0=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Terminal","FitAddon","io","jsxDEV","_jsxDEV","StudentDashboard","_s","termRef","socketRef","fitAddonRef","connected","setConnected","term","cursorBlink","rows","cols","fitAddon","current","loadAddon","open","fit","on","writeln","data","write","onData","emit","dispose","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","background","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh project slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["// src/pages/StudentDashboard.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Terminal } from \"xterm\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\nimport \"xterm/css/xterm.css\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst StudentDashboard = () => {\r\n  const termRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const fitAddonRef = useRef(null);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize terminal\r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      rows: 20,\r\n      cols: 80,\r\n    });\r\n\r\n    const fitAddon = new FitAddon();\r\n    fitAddonRef.current = fitAddon;\r\n\r\n    term.loadAddon(fitAddon);\r\n\r\n    if (termRef.current) {\r\n      term.open(termRef.current);\r\n      fitAddon.fit();\r\n    }\r\n\r\n    // Connect to backend socket\r\n    socketRef.current = io(\"http://localhost:5000\"); // <-- Change if backend runs elsewhere\r\n\r\n    socketRef.current.on(\"connect\", () => {\r\n      setConnected(true);\r\n      term.writeln(\"✅ Connected to server!\");\r\n    });\r\n\r\n    socketRef.current.on(\"output\", (data) => {\r\n      term.write(data);\r\n    });\r\n\r\n    term.onData((data) => {\r\n      socketRef.current.emit(\"input\", data);\r\n    });\r\n\r\n    socketRef.current.on(\"disconnect\", () => {\r\n      setConnected(false);\r\n      term.writeln(\"\\r\\n❌ Disconnected from server\");\r\n    });\r\n\r\n    // cleanup\r\n    return () => {\r\n      term.dispose();\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-bold mb-2\">Student Dashboard</h2>\r\n      <p>Status: {connected ? \"🟢 Connected\" : \"🔴 Disconnected\"}</p>\r\n\r\n      <div\r\n        ref={termRef}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"500px\",\r\n          background: \"black\",\r\n          borderRadius: \"8px\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}