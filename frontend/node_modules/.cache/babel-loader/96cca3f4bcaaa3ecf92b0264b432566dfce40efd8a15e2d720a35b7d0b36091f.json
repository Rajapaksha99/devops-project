{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loadingServers, setLoadingServers] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Get user data from localStorage on component mount\n    const userData = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (userData) {\n      const parsedUser = JSON.parse(userData);\n      setUser(parsedUser);\n    }\n\n    // Redirect to login if no user data found\n    if (!userData || !token) {\n      window.location.href = '/login';\n      return;\n    }\n\n    // Fetch servers from API\n    fetchServers();\n  }, []);\n  const fetchServers = async () => {\n    try {\n      setLoadingServers(true);\n      setError(null);\n      const response = await fetch('/api/servers', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success && data.servers && data.servers.length > 0) {\n        setServers(data.servers);\n        setSelectedServer(data.servers[0]); // Select first server by default\n      } else {\n        setError(\"No servers available\");\n      }\n    } catch (error) {\n      console.error('Error fetching servers:', error);\n      setError(`Failed to load servers: ${error.message}`);\n\n      // Fallback to hardcoded servers if API fails\n      const fallbackServers = [{\n        name: \"Server 1\",\n        ip: \"172.184.216.215\"\n      }, {\n        name: \"Server 2\",\n        ip: \"20.245.171.127\"\n      }, {\n        name: \"Server 3\",\n        ip: \"20.245.171.126\"\n      }, {\n        name: \"Server 4\",\n        ip: \"20.245.171.128\"\n      }];\n      setServers(fallbackServers);\n      setSelectedServer(fallbackServers[0]);\n      setError(\"Using fallback servers - API connection failed\");\n    } finally {\n      setLoadingServers(false);\n    }\n  };\n  const handleConnect = () => {\n    if (!user || !username || !password) {\n      alert(\"Please enter both username and password\");\n      return;\n    }\n    if (!selectedServer) {\n      alert(\"Please select a server\");\n      return;\n    }\n    setIsConnecting(true);\n    try {\n      const token = localStorage.getItem('token');\n\n      // Enhanced connection data with all user information\n      const connectionData = {\n        // Server connection details\n        host: selectedServer.ip,\n        username: username,\n        password: password,\n        serverName: selectedServer.name,\n        port: selectedServer.port || 22,\n        // User authentication and identification\n        token: token || '',\n        userId: user.id || '',\n        userEmail: user.email || '',\n        userName: user.name || '',\n        registeredId: user.registered_id || '',\n        userRole: user.role || 'student',\n        // Session metadata\n        connectionTime: new Date().toISOString(),\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        // Additional context\n        dashboardUrl: window.location.origin,\n        browserInfo: navigator.userAgent\n      };\n\n      // Method 1: Pass data via URL parameters (encoded for security)\n      const encodedData = encodeURIComponent(JSON.stringify(connectionData));\n      const params = new URLSearchParams({\n        data: encodedData\n      });\n\n      // Method 2: Store in sessionStorage as backup (more secure for sensitive data)\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\n\n      // Also store the session key for the terminal to retrieve\n      const urlParams = new URLSearchParams({\n        sessionKey: sessionKey,\n        fallbackData: encodedData // Fallback if sessionStorage fails\n      });\n\n      // Create unique window name to allow multiple terminals\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id}_${Date.now()}`;\n\n      // Open new window with enhanced parameters\n      const newWindow = window.open(`/terminal?${urlParams.toString()}`, windowName, 'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no');\n\n      // Check if popup was blocked\n      if (!newWindow) {\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\n        setIsConnecting(false);\n        return;\n      }\n\n      // Optional: Send additional data via postMessage after window loads\n      const sendDataToTerminal = () => {\n        try {\n          newWindow.postMessage({\n            type: 'TERMINAL_CONNECTION_DATA',\n            data: connectionData\n          }, window.location.origin);\n        } catch (error) {\n          console.warn('Could not send data via postMessage:', error);\n        }\n      };\n\n      // Wait a bit for the terminal window to load, then send data\n      setTimeout(sendDataToTerminal, 1000);\n\n      // Focus the new window\n      newWindow.focus();\n\n      // Cleanup: Clear sensitive data after connection\n      setTimeout(() => {\n        setPassword(\"\");\n        setIsConnecting(false);\n      }, 2000);\n\n      // Optional: Track the connection for the user\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name}`);\n    } catch (error) {\n      console.error('Connection error:', error);\n      alert('Failed to establish connection. Please try again.');\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    // Clear all stored data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear any terminal session data\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n    window.location.href = '/login';\n  };\n\n  // Show loading state while user data is being retrieved\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '20px auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f8f9fa',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '30px',\n        paddingBottom: '15px',\n        borderBottom: '2px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: '#2c3e50'\n          },\n          children: \"Student Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            color: '#5d24c7ff'\n          },\n          children: [\"Hello Welcome, \", user.name || 'Student']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), user.registered_id && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#371bb8ff',\n            fontSize: '12px'\n          },\n          children: [\"SLT ID: \", user.registered_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), user.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0 0 0',\n            color: '#6c757d',\n            fontSize: '12px'\n          },\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchServers,\n          disabled: loadingServers,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: loadingServers ? 'not-allowed' : 'pointer',\n            fontSize: '14px'\n          },\n          children: loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '4px',\n        marginBottom: '20px',\n        color: '#721c24'\n      },\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '8px',\n          fontWeight: 'bold',\n          color: '#495057'\n        },\n        children: \"Select Server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), loadingServers ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px',\n          backgroundColor: '#e9ecef',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          textAlign: 'center'\n        },\n        children: \"Loading servers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServer ? selectedServer.ip : '',\n        onChange: e => {\n          const server = servers.find(s => s.ip === e.target.value);\n          setSelectedServer(server);\n        },\n        style: {\n          width: '100%',\n          padding: '12px',\n          fontSize: '16px',\n          border: '2px solid #ced4da',\n          borderRadius: '6px',\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Choose a server...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: server.ip,\n          children: [server.name, \" - \", server.ip, \" \", server.status !== 'active' ? `(${server.status})` : '']\n        }, server.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px',\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"Server Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter SSH username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            color: '#495057'\n          },\n          children: \"Server Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter SSH password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleConnect(),\n          style: {\n            width: '100%',\n            padding: '12px',\n            fontSize: '16px',\n            border: '2px solid #ced4da',\n            borderRadius: '6px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      disabled: isConnecting || !username || !password || !selectedServer || loadingServers,\n      style: {\n        width: '100%',\n        padding: '15px',\n        fontSize: '18px',\n        fontWeight: 'bold',\n        backgroundColor: isConnecting || !username || !password || !selectedServer || loadingServers ? '#6c757d' : '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '6px',\n        cursor: isConnecting || !username || !password || !selectedServer || loadingServers ? 'not-allowed' : 'pointer',\n        transition: 'background-color 0.3s ease',\n        marginBottom: '25px'\n      },\n      children: isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), selectedServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '6px',\n        border: '1px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#495057'\n        },\n        children: \"Selected Server Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), \" \", selectedServer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IP Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), \" \", selectedServer.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), \" \", selectedServer.port || 22]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: selectedServer.status === 'active' ? '#28a745' : selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\n              marginLeft: '5px',\n              textTransform: 'capitalize'\n            },\n            children: selectedServer.status || 'Active'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), \" \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textTransform: 'capitalize'\n            },\n            children: user.role || 'Student'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), selectedServer.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), \" \", selectedServer.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '25px',\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '6px',\n        border: '1px solid #bbdefb'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#1976d2'\n        },\n        children: \"\\uD83D\\uDCCB Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          margin: 0,\n          paddingLeft: '20px',\n          color: '#495057'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Select your assigned server from the dropdown menu above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Enter your SSH credentials (username and password for the server)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: \"Click \\\"Connect to Server Terminal\\\" to open a new window with terminal access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Important:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), \" Make sure to allow popups for this website\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The terminal window will automatically connect to your selected server with your user data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        padding: '15px',\n        backgroundColor: '#fff3cd',\n        borderRadius: '6px',\n        border: '1px solid #ffeaa7'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          color: '#856404',\n          fontSize: '14px'\n        },\n        children: [\"\\u26A0\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Security Notice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 14\n        }, this), \" Always log out when finished and never share your SSH credentials. The terminal connection will be closed when you close the terminal window. Your user session data is securely passed to the terminal.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"Du4WXzVGEPhKwOTYRKQf5WM5VpE=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StudentDashboard","_s","servers","setServers","selectedServer","setSelectedServer","username","setUsername","password","setPassword","isConnecting","setIsConnecting","user","setUser","loadingServers","setLoadingServers","error","setError","userData","localStorage","getItem","token","parsedUser","JSON","parse","window","location","href","fetchServers","response","fetch","method","headers","ok","Error","status","data","json","success","length","console","message","fallbackServers","name","ip","handleConnect","alert","connectionData","host","serverName","port","userId","id","userEmail","email","userName","registeredId","registered_id","userRole","role","connectionTime","Date","toISOString","sessionId","now","Math","random","toString","substr","dashboardUrl","origin","browserInfo","navigator","userAgent","encodedData","encodeURIComponent","stringify","params","URLSearchParams","sessionKey","sessionStorage","setItem","urlParams","fallbackData","windowName","replace","newWindow","open","sendDataToTerminal","postMessage","type","warn","setTimeout","focus","log","handleLogout","removeItem","Object","keys","forEach","key","startsWith","style","display","justifyContent","alignItems","height","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","marginBottom","paddingBottom","borderBottom","color","fontSize","gap","onClick","disabled","border","cursor","fontWeight","textAlign","value","onChange","e","server","find","s","target","width","map","gridTemplateColumns","placeholder","boxSizing","onKeyPress","transition","marginLeft","textTransform","description","marginTop","paddingLeft","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst StudentDashboard = () => {\r\n  const [servers, setServers] = useState([]);\r\n  const [selectedServer, setSelectedServer] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loadingServers, setLoadingServers] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get user data from localStorage on component mount\r\n    const userData = localStorage.getItem('user');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (userData) {\r\n      const parsedUser = JSON.parse(userData);\r\n      setUser(parsedUser);\r\n    }\r\n\r\n    // Redirect to login if no user data found\r\n    if (!userData || !token) {\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n\r\n    // Fetch servers from API\r\n    fetchServers();\r\n  }, []);\r\n\r\n  const fetchServers = async () => {\r\n    try {\r\n      setLoadingServers(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch('/api/servers', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success && data.servers && data.servers.length > 0) {\r\n        setServers(data.servers);\r\n        setSelectedServer(data.servers[0]); // Select first server by default\r\n      } else {\r\n        setError(\"No servers available\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching servers:', error);\r\n      setError(`Failed to load servers: ${error.message}`);\r\n      \r\n      // Fallback to hardcoded servers if API fails\r\n      const fallbackServers = [\r\n        { name: \"Server 1\", ip: \"172.184.216.215\" },\r\n        { name: \"Server 2\", ip: \"20.245.171.127\" },\r\n        { name: \"Server 3\", ip: \"20.245.171.126\" },\r\n        { name: \"Server 4\", ip: \"20.245.171.128\" },\r\n      ];\r\n      setServers(fallbackServers);\r\n      setSelectedServer(fallbackServers[0]);\r\n      setError(\"Using fallback servers - API connection failed\");\r\n    } finally {\r\n      setLoadingServers(false);\r\n    }\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    if (!user || !username || !password) {\r\n      alert(\"Please enter both username and password\");\r\n      return;\r\n    }\r\n\r\n    if (!selectedServer) {\r\n      alert(\"Please select a server\");\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Enhanced connection data with all user information\r\n      const connectionData = {\r\n        // Server connection details\r\n        host: selectedServer.ip,\r\n        username: username,\r\n        password: password,\r\n        serverName: selectedServer.name,\r\n        port: selectedServer.port || 22,\r\n        \r\n        // User authentication and identification\r\n        token: token || '',\r\n        userId: user.id || '',\r\n        userEmail: user.email || '',\r\n        userName: user.name || '',\r\n        registeredId: user.registered_id || '',\r\n        userRole: user.role || 'student',\r\n        \r\n        // Session metadata\r\n        connectionTime: new Date().toISOString(),\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        \r\n        // Additional context\r\n        dashboardUrl: window.location.origin,\r\n        browserInfo: navigator.userAgent\r\n      };\r\n\r\n      // Method 1: Pass data via URL parameters (encoded for security)\r\n      const encodedData = encodeURIComponent(JSON.stringify(connectionData));\r\n      const params = new URLSearchParams({\r\n        data: encodedData\r\n      });\r\n\r\n      // Method 2: Store in sessionStorage as backup (more secure for sensitive data)\r\n      const sessionKey = `terminal_${selectedServer.ip}_${Date.now()}`;\r\n      sessionStorage.setItem(sessionKey, JSON.stringify(connectionData));\r\n      \r\n      // Also store the session key for the terminal to retrieve\r\n      const urlParams = new URLSearchParams({\r\n        sessionKey: sessionKey,\r\n        fallbackData: encodedData // Fallback if sessionStorage fails\r\n      });\r\n\r\n      // Create unique window name to allow multiple terminals\r\n      const windowName = `terminal_${selectedServer.name.replace(/\\s+/g, '_')}_${user.id}_${Date.now()}`;\r\n      \r\n      // Open new window with enhanced parameters\r\n      const newWindow = window.open(\r\n        `/terminal?${urlParams.toString()}`, \r\n        windowName,\r\n        'width=1200,height=800,scrollbars=yes,resizable=yes,menubar=no,toolbar=no,status=no'\r\n      );\r\n\r\n      // Check if popup was blocked\r\n      if (!newWindow) {\r\n        alert(\"Popup blocked! Please allow popups for this site and try again.\");\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n\r\n      // Optional: Send additional data via postMessage after window loads\r\n      const sendDataToTerminal = () => {\r\n        try {\r\n          newWindow.postMessage({\r\n            type: 'TERMINAL_CONNECTION_DATA',\r\n            data: connectionData\r\n          }, window.location.origin);\r\n        } catch (error) {\r\n          console.warn('Could not send data via postMessage:', error);\r\n        }\r\n      };\r\n\r\n      // Wait a bit for the terminal window to load, then send data\r\n      setTimeout(sendDataToTerminal, 1000);\r\n\r\n      // Focus the new window\r\n      newWindow.focus();\r\n\r\n      // Cleanup: Clear sensitive data after connection\r\n      setTimeout(() => {\r\n        setPassword(\"\");\r\n        setIsConnecting(false);\r\n      }, 2000);\r\n\r\n      // Optional: Track the connection for the user\r\n      console.log(`Terminal connection opened for ${user.name} to ${selectedServer.name}`);\r\n\r\n    } catch (error) {\r\n      console.error('Connection error:', error);\r\n      alert('Failed to establish connection. Please try again.');\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear all stored data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear any terminal session data\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // Show loading state while user data is being retrieved\r\n  if (!user) {\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div>Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      maxWidth: '800px', \r\n      margin: '20px auto', \r\n      padding: '20px',\r\n      fontFamily: 'Arial, sans-serif',\r\n      backgroundColor: '#f8f9fa',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        marginBottom: '30px',\r\n        paddingBottom: '15px',\r\n        borderBottom: '2px solid #dee2e6'\r\n      }}>\r\n        <div>\r\n          <h2 style={{ margin: 0, color: '#2c3e50' }}>Student Dashboard</h2>\r\n          <p style={{ margin: '5px 0 0 0', color: '#5d24c7ff' }}>\r\n            Hello Welcome, {user.name || 'Student'}\r\n          </p>\r\n          {user.registered_id && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#371bb8ff', fontSize: '12px' }}>\r\n              SLT ID: {user.registered_id}\r\n            </p>\r\n          )}\r\n          {user.email && (\r\n            <p style={{ margin: '2px 0 0 0', color: '#6c757d', fontSize: '12px' }}>\r\n              Email: {user.email}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          <button \r\n            onClick={fetchServers}\r\n            disabled={loadingServers}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: loadingServers ? '#6c757d' : '#17a2b8',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: loadingServers ? 'not-allowed' : 'pointer',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            {loadingServers ? 'Refreshing...' : '🔄 Refresh Servers'}\r\n          </button>\r\n          <button \r\n            onClick={handleLogout}\r\n            style={{\r\n              padding: '8px 16px',\r\n              backgroundColor: '#dc3545',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div style={{\r\n          padding: '12px',\r\n          backgroundColor: '#f8d7da',\r\n          border: '1px solid #f5c6cb',\r\n          borderRadius: '4px',\r\n          marginBottom: '20px',\r\n          color: '#721c24'\r\n        }}>\r\n          ⚠️ {error}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Server Selection */}\r\n      <div style={{ marginBottom: '25px' }}>\r\n        <label style={{ \r\n          display: 'block', \r\n          marginBottom: '8px', \r\n          fontWeight: 'bold',\r\n          color: '#495057'\r\n        }}>\r\n          Select Server:\r\n        </label>\r\n        {loadingServers ? (\r\n          <div style={{\r\n            padding: '12px',\r\n            backgroundColor: '#e9ecef',\r\n            border: '2px solid #ced4da',\r\n            borderRadius: '6px',\r\n            textAlign: 'center'\r\n          }}>\r\n            Loading servers...\r\n          </div>\r\n        ) : (\r\n          <select\r\n            value={selectedServer ? selectedServer.ip : ''}\r\n            onChange={(e) => {\r\n              const server = servers.find((s) => s.ip === e.target.value);\r\n              setSelectedServer(server);\r\n            }}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              backgroundColor: 'white'\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>Choose a server...</option>\r\n            {servers.map((server) => (\r\n              <option key={server.ip} value={server.ip}>\r\n                {server.name} - {server.ip} {server.status !== 'active' ? `(${server.status})` : ''}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n\r\n      {/* SSH Credentials */}\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: '1fr 1fr', \r\n        gap: '20px', \r\n        marginBottom: '25px' \r\n      }}>\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            Server Username:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter SSH username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label style={{ \r\n            display: 'block', \r\n            marginBottom: '8px', \r\n            fontWeight: 'bold',\r\n            color: '#495057'\r\n          }}>\r\n            Server Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter SSH password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleConnect()}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              fontSize: '16px',\r\n              border: '2px solid #ced4da',\r\n              borderRadius: '6px',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connect Button */}\r\n      <button \r\n        onClick={handleConnect}\r\n        disabled={isConnecting || !username || !password || !selectedServer || loadingServers}\r\n        style={{\r\n          width: '100%',\r\n          padding: '15px',\r\n          fontSize: '18px',\r\n          fontWeight: 'bold',\r\n          backgroundColor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? '#6c757d' : '#28a745',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '6px',\r\n          cursor: (isConnecting || !username || !password || !selectedServer || loadingServers) ? 'not-allowed' : 'pointer',\r\n          transition: 'background-color 0.3s ease',\r\n          marginBottom: '25px'\r\n        }}\r\n      >\r\n        {isConnecting ? '🔄 Opening Terminal...' : '🖥️ Connect to Server Terminal'}\r\n      </button>\r\n\r\n      {/* Server Info Card */}\r\n      {selectedServer && (\r\n        <div style={{ \r\n          backgroundColor: 'white',\r\n          padding: '20px',\r\n          borderRadius: '6px',\r\n          border: '1px solid #dee2e6'\r\n        }}>\r\n          <h4 style={{ margin: '0 0 15px 0', color: '#495057' }}>\r\n            Selected Server Information\r\n          </h4>\r\n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px' }}>\r\n            <div>\r\n              <strong>Server Name:</strong> {selectedServer.name}\r\n            </div>\r\n            <div>\r\n              <strong>IP Address:</strong> {selectedServer.ip}\r\n            </div>\r\n            <div>\r\n              <strong>Port:</strong> {selectedServer.port || 22}\r\n            </div>\r\n            <div>\r\n              <strong>Status:</strong> \r\n              <span style={{ \r\n                color: selectedServer.status === 'active' ? '#28a745' : \r\n                      selectedServer.status === 'maintenance' ? '#ffc107' : '#dc3545',\r\n                marginLeft: '5px',\r\n                textTransform: 'capitalize'\r\n              }}>\r\n                {selectedServer.status || 'Active'}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <strong>User:</strong> {user.name}\r\n            </div>\r\n            <div>\r\n              <strong>Role:</strong> <span style={{ textTransform: 'capitalize' }}>{user.role || 'Student'}</span>\r\n            </div>\r\n          </div>\r\n          {selectedServer.description && (\r\n            <div style={{ marginTop: '10px' }}>\r\n              <strong>Description:</strong> {selectedServer.description}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        marginTop: '25px', \r\n        padding: '20px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #bbdefb'\r\n      }}>\r\n        <h4 style={{ margin: '0 0 15px 0', color: '#1976d2' }}>📋 Instructions:</h4>\r\n        <ol style={{ margin: 0, paddingLeft: '20px', color: '#495057' }}>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Select your assigned server from the dropdown menu above\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Enter your SSH credentials (username and password for the server)\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            Click \"Connect to Server Terminal\" to open a new window with terminal access\r\n          </li>\r\n          <li style={{ marginBottom: '8px' }}>\r\n            <strong>Important:</strong> Make sure to allow popups for this website\r\n          </li>\r\n          <li>\r\n            The terminal window will automatically connect to your selected server with your user data\r\n          </li>\r\n        </ol>\r\n      </div>\r\n\r\n      {/* Enhanced Security Warning */}\r\n      <div style={{ \r\n        marginTop: '15px', \r\n        padding: '15px', \r\n        backgroundColor: '#fff3cd', \r\n        borderRadius: '6px',\r\n        border: '1px solid #ffeaa7'\r\n      }}>\r\n        <p style={{ margin: 0, color: '#856404', fontSize: '14px' }}>\r\n          ⚠️ <strong>Security Notice:</strong> Always log out when finished and never share your SSH credentials. \r\n          The terminal connection will be closed when you close the terminal window. Your user session data is securely passed to the terminal.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}