{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\SSHTerminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst SSHTerminal = () => {\n  _s();\n  const terminalRef = useRef(null);\n  const [searchParams] = useSearchParams();\n  const host = searchParams.get(\"host\");\n  const username = searchParams.get(\"username\");\n  const password = searchParams.get(\"password\");\n  useEffect(() => {\n    if (!terminalRef.current) return;\n\n    // Make container fill the window\n    terminalRef.current.style.width = \"100vw\";\n    terminalRef.current.style.height = \"100vh\";\n    const socket = io(SERVER_URL, {\n      transports: [\"websocket\"]\n    });\n    const xterm = new Terminal({\n      cursorBlink: true,\n      fontFamily: \"monospace\",\n      fontSize: 14,\n      rows: 30,\n      cols: 100,\n      theme: {\n        background: \"#000000\",\n        foreground: \"#00ff00\"\n      }\n    });\n    xterm.open(terminalRef.current);\n    socket.on(\"connect\", () => {\n      socket.emit(\"ssh-connect\", {\n        host,\n        username,\n        password\n      });\n    });\n    socket.on(\"ssh-output\", data => {\n      xterm.write(data);\n    });\n    xterm.onData(input => {\n      socket.emit(\"ssh-input\", input);\n    });\n    return () => {\n      socket.disconnect();\n      xterm.dispose();\n    };\n  }, [terminalRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: terminalRef,\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      background: \"#000\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SSHTerminal, \"BWue8VYVf3prKjuJgyxOTFHyYJA=\", false, function () {\n  return [useSearchParams];\n});\n_c = SSHTerminal;\nexport default SSHTerminal;\nvar _c;\n$RefreshReg$(_c, \"SSHTerminal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useSearchParams","Terminal","io","jsxDEV","_jsxDEV","SERVER_URL","SSHTerminal","_s","terminalRef","searchParams","host","get","username","password","current","style","width","height","socket","transports","xterm","cursorBlink","fontFamily","fontSize","rows","cols","theme","background","foreground","open","on","emit","data","write","onData","input","disconnect","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/SSHTerminal.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst SSHTerminal = () => {\r\n  const terminalRef = useRef(null);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const host = searchParams.get(\"host\");\r\n  const username = searchParams.get(\"username\");\r\n  const password = searchParams.get(\"password\");\r\n\r\n  useEffect(() => {\r\n    if (!terminalRef.current) return;\r\n\r\n    // Make container fill the window\r\n    terminalRef.current.style.width = \"100vw\";\r\n    terminalRef.current.style.height = \"100vh\";\r\n\r\n    const socket = io(SERVER_URL, { transports: [\"websocket\"] });\r\n\r\n    const xterm = new Terminal({\r\n      cursorBlink: true,\r\n      fontFamily: \"monospace\",\r\n      fontSize: 14,\r\n      rows: 30,\r\n      cols: 100,\r\n      theme: {\r\n        background: \"#000000\",\r\n        foreground: \"#00ff00\"\r\n      }\r\n    });\r\n\r\n    xterm.open(terminalRef.current);\r\n\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"ssh-connect\", { host, username, password });\r\n    });\r\n\r\n    socket.on(\"ssh-output\", (data) => {\r\n      xterm.write(data);\r\n    });\r\n\r\n    xterm.onData((input) => {\r\n      socket.emit(\"ssh-input\", input);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      xterm.dispose();\r\n    };\r\n  }, [terminalRef]);\r\n\r\n  return (\r\n    <div\r\n      ref={terminalRef}\r\n      style={{ width: \"100vw\", height: \"100vh\", background: \"#000\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SSHTerminal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,qBAAqB;AAC5B,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACW,YAAY,CAAC,GAAGT,eAAe,CAAC,CAAC;EAExC,MAAMU,IAAI,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC;EACrC,MAAMC,QAAQ,GAAGH,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAC7C,MAAME,QAAQ,GAAGJ,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAE7Cd,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,WAAW,CAACM,OAAO,EAAE;;IAE1B;IACAN,WAAW,CAACM,OAAO,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACzCR,WAAW,CAACM,OAAO,CAACC,KAAK,CAACE,MAAM,GAAG,OAAO;IAE1C,MAAMC,MAAM,GAAGhB,EAAE,CAACG,UAAU,EAAE;MAAEc,UAAU,EAAE,CAAC,WAAW;IAAE,CAAC,CAAC;IAE5D,MAAMC,KAAK,GAAG,IAAInB,QAAQ,CAAC;MACzBoB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,WAAW;MACvBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,GAAG;MACTC,KAAK,EAAE;QACLC,UAAU,EAAE,SAAS;QACrBC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;IAEFR,KAAK,CAACS,IAAI,CAACrB,WAAW,CAACM,OAAO,CAAC;IAE/BI,MAAM,CAACY,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBZ,MAAM,CAACa,IAAI,CAAC,aAAa,EAAE;QAAErB,IAAI;QAAEE,QAAQ;QAAEC;MAAS,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEFK,MAAM,CAACY,EAAE,CAAC,YAAY,EAAGE,IAAI,IAAK;MAChCZ,KAAK,CAACa,KAAK,CAACD,IAAI,CAAC;IACnB,CAAC,CAAC;IAEFZ,KAAK,CAACc,MAAM,CAAEC,KAAK,IAAK;MACtBjB,MAAM,CAACa,IAAI,CAAC,WAAW,EAAEI,KAAK,CAAC;IACjC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXjB,MAAM,CAACkB,UAAU,CAAC,CAAC;MACnBhB,KAAK,CAACiB,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,CAAC7B,WAAW,CAAC,CAAC;EAEjB,oBACEJ,OAAA;IACEkC,GAAG,EAAE9B,WAAY;IACjBO,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEU,UAAU,EAAE;IAAO;EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEN,CAAC;AAACnC,EAAA,CAvDID,WAAW;EAAA,QAEQN,eAAe;AAAA;AAAA2C,EAAA,GAFlCrC,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}