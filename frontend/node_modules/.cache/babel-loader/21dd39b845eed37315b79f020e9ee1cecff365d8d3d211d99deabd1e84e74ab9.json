{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { FitAddon } from 'xterm-addon-fit';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:5000\";\nconst TerminalPage = () => {\n  _s();\n  var _connectionData$sessi;\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionData, setConnectionData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\n\n  // Refs that don't cause re-renders\n  const terminalRef = useRef();\n  const terminalInstance = useRef();\n  const socketRef = useRef();\n  const fitAddonRef = useRef(); // Move fitAddon to ref to prevent recreation\n  const isInitializedRef = useRef(false); // Prevent multiple initializations\n\n  const getStoredUserData = useCallback(() => {\n    try {\n      const userData = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (userData) {\n        const user = JSON.parse(userData);\n        return {\n          token: token || '',\n          userId: user.id || '',\n          userEmail: user.email || '',\n          userName: user.name || '',\n          registeredId: user.registered_id || '',\n          userRole: user.role || 'student'\n        };\n      }\n    } catch (err) {\n      console.warn(\"Could not retrieve stored user data:\", err);\n    }\n    return {};\n  }, []);\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\n    if (!socketInstance || !data) {\n      console.error(\"Missing socket instance or connection data\");\n      term.write(`❌ Cannot connect: Missing connection data\\r\\n`);\n      return;\n    }\n    console.log(\"Attempting SSH connection with data:\", data);\n    const sshConnectionData = {\n      host: data.host,\n      username: data.username,\n      password: data.password,\n      port: data.port || 22,\n      user: {\n        id: data.userId,\n        name: data.userName,\n        email: data.userEmail,\n        registered_id: data.registeredId,\n        role: data.userRole\n      },\n      session: {\n        id: data.sessionId,\n        token: data.token,\n        connectionTime: data.connectionTime,\n        serverName: data.serverName,\n        dashboardUrl: data.dashboardUrl\n      },\n      browser: {\n        userAgent: data.browserInfo || navigator.userAgent,\n        windowId: window.name,\n        referrer: document.referrer\n      }\n    };\n    term.write(`🔗 Connecting to SSH server...\\r\\n`);\n    term.write(`📡 Host: ${data.host}:${data.port || 22}\\r\\n`);\n    term.write(`👤 User: ${data.username}\\r\\n`);\n    term.write(`🔐 Authenticating...\\r\\n\\r\\n`);\n    console.log(\"Sending SSH connection data:\", sshConnectionData);\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\n    socketInstance.emit(\"connect-ssh\", sshConnectionData);\n    socketInstance.emit(\"user-activity\", {\n      type: 'terminal_access',\n      userId: data.userId,\n      userName: data.userName,\n      action: 'ssh_connect_attempt',\n      target: data.host,\n      timestamp: new Date().toISOString(),\n      sessionId: data.sessionId\n    });\n    const timeoutId = setTimeout(() => {\n      if (connectionStatus === \"connecting\" || connectionStatus === \"connected\") {\n        term.write(`⏱️ Connection is taking longer than expected...\\r\\n`);\n        term.write(`💡 Check if your backend server is handling SSH connections properly\\r\\n\\r\\n`);\n      }\n    }, 10000);\n\n    // Store timeout ID to clear it later if needed\n    return timeoutId;\n  }, []); // Remove connectionStatus dependency\n\n  const cleanupConnection = useCallback(() => {\n    console.log(\"Cleaning up connection...\");\n    if (socketRef.current) {\n      socketRef.current.removeAllListeners(); // Remove all listeners first\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n    if (terminalInstance.current) {\n      terminalInstance.current.dispose();\n      terminalInstance.current = null;\n    }\n\n    // Clean up session storage\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Reset initialization flag\n    isInitializedRef.current = false;\n  }, []);\n  const initializeTerminal = useCallback(data => {\n    // Prevent multiple initializations\n    if (isInitializedRef.current) {\n      console.log(\"Terminal already initialized, skipping...\");\n      return;\n    }\n    console.log(\"Initializing terminal with data:\", data);\n    isInitializedRef.current = true;\n    setConnectionStatus(\"connecting\");\n\n    // Create fitAddon only once\n    if (!fitAddonRef.current) {\n      fitAddonRef.current = new FitAddon();\n    }\n\n    // Initialize Terminal\n    const term = new Terminal({\n      cursorBlink: true,\n      theme: {\n        background: '#000000',\n        foreground: '#ffffff',\n        cursor: '#ffffff',\n        selection: '#ffffff40',\n        black: '#000000',\n        red: '#e74c3c',\n        green: '#2ecc71',\n        yellow: '#f1c40f',\n        blue: '#3498db',\n        magenta: '#9b59b6',\n        cyan: '#1abc9c',\n        white: '#ecf0f1'\n      },\n      fontSize: 14,\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n      rows: 30,\n      cols: 120,\n      scrollback: 1000,\n      convertEol: true\n    });\n    term.loadAddon(fitAddonRef.current);\n    if (terminalRef.current) {\n      term.open(terminalRef.current);\n      fitAddonRef.current.fit();\n      terminalInstance.current = term;\n      term.write('🚀 Initializing terminal...\\r\\n');\n      term.write(`📡 Connecting to ${SERVER_URL}...\\r\\n\\r\\n`);\n    }\n\n    // Clean up existing socket before creating new one\n    if (socketRef.current) {\n      socketRef.current.removeAllListeners();\n      socketRef.current.disconnect();\n    }\n\n    // Initialize Socket.IO\n    const newSocket = io(SERVER_URL, {\n      query: {\n        userId: data.userId || '',\n        userName: data.userName || '',\n        userRole: data.userRole || 'student'\n      },\n      timeout: 10000,\n      forceNew: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    socketRef.current = newSocket;\n\n    // Socket event listeners\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to terminal server\");\n      setIsConnected(true);\n      setConnectionStatus(\"connected\");\n      term.write(`✅ Socket connected to ${SERVER_URL}\\r\\n`);\n      term.write(`🔗 Establishing SSH connection...\\r\\n\\r\\n`);\n      connectToSSHServer(newSocket, data, term);\n    });\n    newSocket.on(\"ssh-output\", outputData => {\n      if (term && !term.isDisposed) {\n        term.write(outputData);\n      }\n    });\n    newSocket.on(\"ssh-connected\", info => {\n      setConnectionStatus(\"ssh-connected\");\n      setError(\"\");\n      term.write(`\\r\\n🎉 SSH CONNECTION ESTABLISHED! 🎉\\r\\n`);\n      term.write(`✅ Connected to: ${info.host || data.host}\\r\\n`);\n      term.write(`👤 User: ${data.userName || 'Unknown'}\\r\\n`);\n      term.write(`🆔 ID: ${data.registeredId || 'No ID'}\\r\\n`);\n      term.write(`⏰ Time: ${new Date().toLocaleString()}\\r\\n`);\n      term.write(`${'='.repeat(50)}\\r\\n`);\n      term.write(`💡 You can now run commands like: pwd, ls, whoami\\r\\n`);\n      term.write(`${'='.repeat(50)}\\r\\n\\r\\n`);\n    });\n    newSocket.on(\"ssh-error\", errorData => {\n      const errorMsg = errorData.message || errorData;\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorMsg}\\r\\n`);\n      term.write(`\\r\\n🔄 Retrying connection in 3 seconds...\\r\\n`);\n      setConnectionStatus(\"error\");\n      setError(errorMsg);\n      setTimeout(() => {\n        if (socketRef.current && data) {\n          connectToSSHServer(socketRef.current, data, term);\n        }\n      }, 3000);\n    });\n    newSocket.on(\"ssh-disconnected\", () => {\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\n      setConnectionStatus(\"disconnected\");\n      setIsConnected(false);\n    });\n    newSocket.on(\"disconnect\", reason => {\n      setIsConnected(false);\n      setConnectionStatus(\"disconnected\");\n      term.write(`\\r\\n[Socket disconnected: ${reason}]\\r\\n`);\n      if (reason !== 'io client disconnect') {\n        setTimeout(() => {\n          if (socketRef.current && !socketRef.current.connected) {\n            term.write(`\\r\\n🔄 Attempting to reconnect...\\r\\n`);\n            socketRef.current.connect();\n          }\n        }, 2000);\n      }\n    });\n    newSocket.on(\"connect_error\", err => {\n      const errorMsg = `Connection error: ${err.message}`;\n      setError(errorMsg);\n      setConnectionStatus(\"error\");\n      term.write(`\\r\\n❌ ${errorMsg}\\r\\n`);\n      term.write(`\\r\\n💡 Make sure your backend server is running on ${SERVER_URL}\\r\\n`);\n    });\n\n    // Terminal input handler\n    term.onData(input => {\n      console.log(\"Terminal input:\", input);\n      if (newSocket && newSocket.connected) {\n        newSocket.emit(\"ssh-input\", input);\n        console.log(\"Sent to server:\", input);\n      } else {\n        term.write(`\\r\\n❌ Not connected to server. Cannot send: ${input}\\r\\n`);\n      }\n    });\n    term.onKey(({\n      key,\n      domEvent\n    }) => {\n      if (domEvent.ctrlKey && domEvent.key === 'c') {\n        if (newSocket && newSocket.connected) {\n          newSocket.emit(\"ssh-input\", '\\x03');\n        }\n      }\n    });\n\n    // Handle window resize - using ref to prevent recreation\n    const handleResize = () => {\n      if (term && term.element && fitAddonRef.current && !term.isDisposed) {\n        try {\n          fitAddonRef.current.fit();\n        } catch (fitError) {\n          console.warn(\"Fit error:\", fitError);\n          // Fallback resize logic\n          if (terminalRef.current) {\n            const cols = Math.floor(terminalRef.current.clientWidth / 9);\n            const rows = Math.floor(terminalRef.current.clientHeight / 17);\n            term.resize(cols, rows);\n          }\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Return cleanup function\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (newSocket) {\n        newSocket.removeAllListeners();\n        newSocket.disconnect();\n      }\n      if (term && !term.isDisposed) {\n        term.dispose();\n      }\n    };\n  }, [connectToSSHServer]); // Only depend on connectToSSHServer\n\n  const initializeConnection = useCallback(() => {\n    // Prevent multiple initializations\n    if (isInitializedRef.current) {\n      console.log(\"Connection already initialized, skipping...\");\n      return;\n    }\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      let data = null;\n\n      // Check for sessionKey method first\n      const sessionKey = urlParams.get('sessionKey');\n      if (sessionKey) {\n        const sessionData = sessionStorage.getItem(sessionKey);\n        if (sessionData) {\n          data = JSON.parse(sessionData);\n          sessionStorage.removeItem(sessionKey);\n        }\n      }\n\n      // Fallback to direct URL data\n      if (!data) {\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\n        if (urlData) {\n          data = JSON.parse(decodeURIComponent(urlData));\n        }\n      }\n\n      // Old format compatibility\n      if (!data) {\n        const host = urlParams.get('host');\n        const username = urlParams.get('username');\n        const password = urlParams.get('password');\n        const serverName = urlParams.get('serverName');\n        const token = urlParams.get('token');\n        const userId = urlParams.get('userId');\n        if (host && username && password) {\n          data = {\n            host,\n            username,\n            password,\n            serverName,\n            token,\n            userId,\n            ...getStoredUserData()\n          };\n        }\n      }\n\n      // SessionStorage fallback\n      if (!data) {\n        const stored = sessionStorage.getItem('terminalConnection');\n        if (stored) {\n          data = JSON.parse(stored);\n        }\n      }\n      if (data) {\n        console.log(\"Setting connection data:\", data);\n        setConnectionData(data);\n        // Don't call initializeTerminal here - let useEffect handle it\n      } else {\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error initializing connection:\", err);\n      setError(\"Failed to initialize connection data\");\n    }\n  }, [getStoredUserData]);\n\n  // Separate useEffect for initial connection data loading\n  useEffect(() => {\n    if (!isInitializedRef.current) {\n      console.log(\"Loading initial connection data...\");\n      initializeConnection();\n    }\n  }, []); // Empty dependency array - run only once\n\n  // Separate useEffect for terminal initialization when connectionData changes\n  useEffect(() => {\n    if (connectionData && !isInitializedRef.current) {\n      console.log(\"Initializing terminal with connection data...\");\n      const cleanup = initializeTerminal(connectionData);\n      return cleanup; // Return cleanup function\n    }\n  }, [connectionData, initializeTerminal]);\n\n  // Handle postMessage communication\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\n        if (!isInitializedRef.current) {\n          setConnectionData(event.data.data);\n        }\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []); // Empty dependency array\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      console.log(\"Component unmounting, cleaning up...\");\n      cleanupConnection();\n    };\n  }, [cleanupConnection]);\n  const handleDisconnect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.emit(\"user-disconnect\", {\n        userId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userId,\n        userName: connectionData === null || connectionData === void 0 ? void 0 : connectionData.userName,\n        sessionId: connectionData === null || connectionData === void 0 ? void 0 : connectionData.sessionId,\n        disconnectTime: new Date().toISOString(),\n        disconnectReason: 'user_initiated'\n      });\n      socketRef.current.disconnect();\n    }\n    cleanupConnection();\n    window.close();\n  }, [connectionData, cleanupConnection]);\n  const handleReconnect = useCallback(() => {\n    if (connectionData) {\n      setError(\"\");\n      setConnectionStatus(\"reconnecting\");\n\n      // Reset initialization flag to allow reconnection\n      isInitializedRef.current = false;\n      if (terminalInstance.current && !terminalInstance.current.isDisposed) {\n        terminalInstance.current.clear();\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\n      }\n\n      // Clean up existing connection\n      if (socketRef.current) {\n        socketRef.current.removeAllListeners();\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n      if (terminalInstance.current) {\n        terminalInstance.current.dispose();\n        terminalInstance.current = null;\n      }\n\n      // Reinitialize after cleanup\n      setTimeout(() => {\n        initializeTerminal(connectionData);\n      }, 1000);\n    }\n  }, [connectionData, initializeTerminal]);\n  const handleNewSession = useCallback(() => {\n    if (terminalInstance.current && !terminalInstance.current.isDisposed) {\n      terminalInstance.current.clear();\n    }\n    if (socketRef.current && connectionData) {\n      const newSessionData = {\n        ...connectionData,\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        connectionTime: new Date().toISOString()\n      };\n      setConnectionData(newSessionData);\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\n    }\n  }, [connectionData, connectToSSHServer]);\n  const handleNewTerminal = useCallback(() => {\n    handleNewSession();\n  }, [handleNewSession]);\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case \"connected\":\n      case \"ssh-connected\":\n        return \"#2ecc71\";\n      case \"connecting\":\n      case \"reconnecting\":\n        return \"#f39c12\";\n      case \"error\":\n        return \"#e74c3c\";\n      default:\n        return \"#95a5a6\";\n    }\n  };\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case \"initializing\":\n        return \"Initializing...\";\n      case \"connecting\":\n        return \"Connecting...\";\n      case \"connected\":\n        return \"Socket Connected\";\n      case \"ssh-connected\":\n        return \"SSH Connected\";\n      case \"reconnecting\":\n        return \"Reconnecting...\";\n      case \"disconnected\":\n        return \"Disconnected\";\n      case \"error\":\n        return \"Connection Error\";\n      default:\n        return \"Unknown\";\n    }\n  };\n  const getUserDisplayInfo = () => {\n    if (!connectionData) return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A'\n    };\n    if (connectionData.userName) {\n      return {\n        name: connectionData.userName,\n        id: connectionData.registeredId || 'N/A',\n        email: connectionData.userEmail || 'N/A',\n        role: connectionData.userRole || 'student'\n      };\n    }\n    if (connectionData.user_data) {\n      return {\n        name: connectionData.user_data.name || 'Unknown',\n        id: connectionData.user_data.registered_id || 'N/A',\n        email: connectionData.user_data.email || 'N/A',\n        role: connectionData.user_data.role || 'student'\n      };\n    }\n    return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A',\n      role: 'student'\n    };\n  };\n  if (error && !connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Terminal Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            fontSize: '14px',\n            color: '#95a5a6'\n          },\n          children: \"Please return to the dashboard and try connecting again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.close(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: \"Close Window\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this);\n  }\n  if (!connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          backgroundColor: '#34495e',\n          borderRadius: '8px',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '48px',\n            marginBottom: '20px'\n          },\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 15px 0'\n          },\n          children: \"Loading Terminal...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 20px 0',\n            color: '#bdc3c7'\n          },\n          children: \"Initializing connection data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReconnect,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#3498db',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px'\n            },\n            children: \"\\uD83D\\uDD04 Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this);\n  }\n  const userInfo = getUserDisplayInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#2c3e50'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px 20px',\n        backgroundColor: '#34495e',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '2px solid #2c3e50',\n        minHeight: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: 0,\n              fontSize: '18px',\n              fontWeight: 'bold'\n            },\n            children: [\"\\uD83D\\uDDA5\\uFE0F \", (connectionData === null || connectionData === void 0 ? void 0 : connectionData.serverName) || (connectionData === null || connectionData === void 0 ? void 0 : connectionData.host) || \"Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px',\n              padding: '4px 8px',\n              backgroundColor: getStatusColor(),\n              borderRadius: '12px',\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '8px',\n                height: '8px',\n                borderRadius: '50%',\n                backgroundColor: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            color: '#bdc3c7',\n            marginTop: '4px'\n          },\n          children: [\"\\uD83D\\uDC64 \", userInfo.name, userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`, userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`, connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [(connectionStatus === \"error\" || connectionStatus === \"disconnected\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#f39c12',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83D\\uDD04 Reconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewTerminal,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#3498db',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83C\\uDD95 New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDisconnect,\n          style: {\n            padding: '6px 12px',\n            backgroundColor: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\u274C Disconnect & Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), connectionData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#2c3e50',\n        color: '#ecf0f1',\n        fontSize: '12px',\n        borderBottom: '1px solid #34495e'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83C\\uDF10 Server: \", connectionData.host, \" | \\uD83D\\uDC65 Role: \", userInfo.role, \" | \\uD83D\\uDD11 Session: \", ((_connectionData$sessi = connectionData.sessionId) === null || _connectionData$sessi === void 0 ? void 0 : _connectionData$sessi.substr(-8)) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: connectionData.connectionTime && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected: \", new Date(connectionData.connectionTime).toLocaleTimeString()]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '4px 20px',\n        backgroundColor: '#1a252f',\n        color: '#95a5a6',\n        fontSize: '11px',\n        borderBottom: '1px solid #34495e'\n      },\n      children: [\"\\uD83D\\uDD0D Debug: Socket URL: \", SERVER_URL, \" | Status: \", connectionStatus, \" | Connected: \", isConnected ? 'Yes' : 'No', \" |\", error && `Error: ${error}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: terminalRef,\n      style: {\n        flex: 1,\n        padding: '10px',\n        backgroundColor: '#000000',\n        overflow: 'hidden',\n        border: '1px solid #34495e',\n        margin: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '8px 20px',\n        backgroundColor: '#34495e',\n        color: '#bdc3c7',\n        fontSize: '11px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e74c3c'\n          },\n          children: [\"\\u274C Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userInfo.name !== 'Unknown' && `Logged in as: ${userInfo.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"2YUj0LkwnWYeR2RaG5eqWXnhctU=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","Terminal","FitAddon","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","TerminalPage","_s","_connectionData$sessi","isConnected","setIsConnected","connectionData","setConnectionData","error","setError","connectionStatus","setConnectionStatus","terminalRef","terminalInstance","socketRef","fitAddonRef","isInitializedRef","getStoredUserData","userData","localStorage","getItem","token","user","JSON","parse","userId","id","userEmail","email","userName","name","registeredId","registered_id","userRole","role","err","console","warn","connectToSSHServer","socketInstance","data","term","write","log","sshConnectionData","host","username","password","port","session","sessionId","connectionTime","serverName","dashboardUrl","browser","userAgent","browserInfo","navigator","windowId","window","referrer","document","emit","type","action","target","timestamp","Date","toISOString","timeoutId","setTimeout","cleanupConnection","current","removeAllListeners","disconnect","dispose","Object","keys","sessionStorage","forEach","key","startsWith","removeItem","initializeTerminal","cursorBlink","theme","background","foreground","cursor","selection","black","red","green","yellow","blue","magenta","cyan","white","fontSize","fontFamily","rows","cols","scrollback","convertEol","loadAddon","open","fit","newSocket","query","timeout","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","on","outputData","isDisposed","info","toLocaleString","repeat","errorData","errorMsg","message","reason","connected","connect","onData","input","onKey","domEvent","ctrlKey","handleResize","element","fitError","Math","floor","clientWidth","clientHeight","resize","addEventListener","removeEventListener","initializeConnection","urlParams","URLSearchParams","location","search","sessionKey","get","sessionData","urlData","decodeURIComponent","stored","cleanup","handleMessage","event","handleDisconnect","disconnectTime","disconnectReason","close","handleReconnect","clear","handleNewSession","newSessionData","now","random","toString","substr","handleNewTerminal","getStatusColor","getStatusText","getUserDisplayInfo","user_data","style","height","display","alignItems","justifyContent","backgroundColor","color","children","textAlign","padding","borderRadius","maxWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","onClick","border","marginTop","userInfo","flexDirection","borderBottom","minHeight","flex","gap","fontWeight","width","toLocaleTimeString","ref","overflow","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\nimport { FitAddon } from 'xterm-addon-fit';\r\n\r\nconst SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst TerminalPage = () => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\r\n  \r\n  // Refs that don't cause re-renders\r\n  const terminalRef = useRef();\r\n  const terminalInstance = useRef();\r\n  const socketRef = useRef();\r\n  const fitAddonRef = useRef(); // Move fitAddon to ref to prevent recreation\r\n  const isInitializedRef = useRef(false); // Prevent multiple initializations\r\n\r\n  const getStoredUserData = useCallback(() => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        return {\r\n          token: token || '',\r\n          userId: user.id || '',\r\n          userEmail: user.email || '',\r\n          userName: user.name || '',\r\n          registeredId: user.registered_id || '',\r\n          userRole: user.role || 'student'\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.warn(\"Could not retrieve stored user data:\", err);\r\n    }\r\n    return {};\r\n  }, []);\r\n\r\n  const connectToSSHServer = useCallback((socketInstance, data, term) => {\r\n    if (!socketInstance || !data) {\r\n      console.error(\"Missing socket instance or connection data\");\r\n      term.write(`❌ Cannot connect: Missing connection data\\r\\n`);\r\n      return;\r\n    }\r\n\r\n    console.log(\"Attempting SSH connection with data:\", data);\r\n\r\n    const sshConnectionData = {\r\n      host: data.host,\r\n      username: data.username,\r\n      password: data.password,\r\n      port: data.port || 22,\r\n      \r\n      user: {\r\n        id: data.userId,\r\n        name: data.userName,\r\n        email: data.userEmail,\r\n        registered_id: data.registeredId,\r\n        role: data.userRole\r\n      },\r\n      \r\n      session: {\r\n        id: data.sessionId,\r\n        token: data.token,\r\n        connectionTime: data.connectionTime,\r\n        serverName: data.serverName,\r\n        dashboardUrl: data.dashboardUrl\r\n      },\r\n      \r\n      browser: {\r\n        userAgent: data.browserInfo || navigator.userAgent,\r\n        windowId: window.name,\r\n        referrer: document.referrer\r\n      }\r\n    };\r\n\r\n    term.write(`🔗 Connecting to SSH server...\\r\\n`);\r\n    term.write(`📡 Host: ${data.host}:${data.port || 22}\\r\\n`);\r\n    term.write(`👤 User: ${data.username}\\r\\n`);\r\n    term.write(`🔐 Authenticating...\\r\\n\\r\\n`);\r\n\r\n    console.log(\"Sending SSH connection data:\", sshConnectionData);\r\n\r\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\r\n    socketInstance.emit(\"ssh-connect-enhanced\", sshConnectionData);\r\n    socketInstance.emit(\"connect-ssh\", sshConnectionData);\r\n    \r\n    socketInstance.emit(\"user-activity\", {\r\n      type: 'terminal_access',\r\n      userId: data.userId,\r\n      userName: data.userName,\r\n      action: 'ssh_connect_attempt',\r\n      target: data.host,\r\n      timestamp: new Date().toISOString(),\r\n      sessionId: data.sessionId\r\n    });\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      if (connectionStatus === \"connecting\" || connectionStatus === \"connected\") {\r\n        term.write(`⏱️ Connection is taking longer than expected...\\r\\n`);\r\n        term.write(`💡 Check if your backend server is handling SSH connections properly\\r\\n\\r\\n`);\r\n      }\r\n    }, 10000);\r\n\r\n    // Store timeout ID to clear it later if needed\r\n    return timeoutId;\r\n  }, []); // Remove connectionStatus dependency\r\n\r\n  const cleanupConnection = useCallback(() => {\r\n    console.log(\"Cleaning up connection...\");\r\n    \r\n    if (socketRef.current) {\r\n      socketRef.current.removeAllListeners(); // Remove all listeners first\r\n      socketRef.current.disconnect();\r\n      socketRef.current = null;\r\n    }\r\n    \r\n    if (terminalInstance.current) {\r\n      terminalInstance.current.dispose();\r\n      terminalInstance.current = null;\r\n    }\r\n    \r\n    // Clean up session storage\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    // Reset initialization flag\r\n    isInitializedRef.current = false;\r\n  }, []);\r\n\r\n  const initializeTerminal = useCallback((data) => {\r\n    // Prevent multiple initializations\r\n    if (isInitializedRef.current) {\r\n      console.log(\"Terminal already initialized, skipping...\");\r\n      return;\r\n    }\r\n    \r\n    console.log(\"Initializing terminal with data:\", data);\r\n    isInitializedRef.current = true;\r\n    setConnectionStatus(\"connecting\");\r\n    \r\n    // Create fitAddon only once\r\n    if (!fitAddonRef.current) {\r\n      fitAddonRef.current = new FitAddon();\r\n    }\r\n    \r\n    // Initialize Terminal\r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      theme: {\r\n        background: '#000000',\r\n        foreground: '#ffffff',\r\n        cursor: '#ffffff',\r\n        selection: '#ffffff40',\r\n        black: '#000000',\r\n        red: '#e74c3c',\r\n        green: '#2ecc71',\r\n        yellow: '#f1c40f',\r\n        blue: '#3498db',\r\n        magenta: '#9b59b6',\r\n        cyan: '#1abc9c',\r\n        white: '#ecf0f1'\r\n      },\r\n      fontSize: 14,\r\n      fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\r\n      rows: 30,\r\n      cols: 120,\r\n      scrollback: 1000,\r\n      convertEol: true\r\n    });\r\n\r\n    term.loadAddon(fitAddonRef.current);\r\n\r\n    if (terminalRef.current) {\r\n      term.open(terminalRef.current);\r\n      fitAddonRef.current.fit();\r\n      terminalInstance.current = term;\r\n      \r\n      term.write('🚀 Initializing terminal...\\r\\n');\r\n      term.write(`📡 Connecting to ${SERVER_URL}...\\r\\n\\r\\n`);\r\n    }\r\n    \r\n    // Clean up existing socket before creating new one\r\n    if (socketRef.current) {\r\n      socketRef.current.removeAllListeners();\r\n      socketRef.current.disconnect();\r\n    }\r\n    \r\n    // Initialize Socket.IO\r\n    const newSocket = io(SERVER_URL, {\r\n      query: {\r\n        userId: data.userId || '',\r\n        userName: data.userName || '',\r\n        userRole: data.userRole || 'student'\r\n      },\r\n      timeout: 10000,\r\n      forceNew: true,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000\r\n    });\r\n    \r\n    socketRef.current = newSocket;\r\n\r\n    // Socket event listeners\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to terminal server\");\r\n      setIsConnected(true);\r\n      setConnectionStatus(\"connected\");\r\n      term.write(`✅ Socket connected to ${SERVER_URL}\\r\\n`);\r\n      term.write(`🔗 Establishing SSH connection...\\r\\n\\r\\n`);\r\n      \r\n      connectToSSHServer(newSocket, data, term);\r\n    });\r\n\r\n    newSocket.on(\"ssh-output\", (outputData) => {\r\n      if (term && !term.isDisposed) {\r\n        term.write(outputData);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"ssh-connected\", (info) => {\r\n      setConnectionStatus(\"ssh-connected\");\r\n      setError(\"\");\r\n      term.write(`\\r\\n🎉 SSH CONNECTION ESTABLISHED! 🎉\\r\\n`);\r\n      term.write(`✅ Connected to: ${info.host || data.host}\\r\\n`);\r\n      term.write(`👤 User: ${data.userName || 'Unknown'}\\r\\n`);\r\n      term.write(`🆔 ID: ${data.registeredId || 'No ID'}\\r\\n`);\r\n      term.write(`⏰ Time: ${new Date().toLocaleString()}\\r\\n`);\r\n      term.write(`${'='.repeat(50)}\\r\\n`);\r\n      term.write(`💡 You can now run commands like: pwd, ls, whoami\\r\\n`);\r\n      term.write(`${'='.repeat(50)}\\r\\n\\r\\n`);\r\n    });\r\n\r\n    newSocket.on(\"ssh-error\", (errorData) => {\r\n      const errorMsg = errorData.message || errorData;\r\n      term.write(`\\r\\n❌ SSH Connection Error: ${errorMsg}\\r\\n`);\r\n      term.write(`\\r\\n🔄 Retrying connection in 3 seconds...\\r\\n`);\r\n      setConnectionStatus(\"error\");\r\n      setError(errorMsg);\r\n      \r\n      setTimeout(() => {\r\n        if (socketRef.current && data) {\r\n          connectToSSHServer(socketRef.current, data, term);\r\n        }\r\n      }, 3000);\r\n    });\r\n\r\n    newSocket.on(\"ssh-disconnected\", () => {\r\n      term.write(\"\\r\\n🔌 SSH connection closed\\r\\n\");\r\n      setConnectionStatus(\"disconnected\");\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      setIsConnected(false);\r\n      setConnectionStatus(\"disconnected\");\r\n      term.write(`\\r\\n[Socket disconnected: ${reason}]\\r\\n`);\r\n      \r\n      if (reason !== 'io client disconnect') {\r\n        setTimeout(() => {\r\n          if (socketRef.current && !socketRef.current.connected) {\r\n            term.write(`\\r\\n🔄 Attempting to reconnect...\\r\\n`);\r\n            socketRef.current.connect();\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"connect_error\", (err) => {\r\n      const errorMsg = `Connection error: ${err.message}`;\r\n      setError(errorMsg);\r\n      setConnectionStatus(\"error\");\r\n      term.write(`\\r\\n❌ ${errorMsg}\\r\\n`);\r\n      term.write(`\\r\\n💡 Make sure your backend server is running on ${SERVER_URL}\\r\\n`);\r\n    });\r\n\r\n    // Terminal input handler\r\n    term.onData((input) => {\r\n      console.log(\"Terminal input:\", input);\r\n      if (newSocket && newSocket.connected) {\r\n        newSocket.emit(\"ssh-input\", input);\r\n        console.log(\"Sent to server:\", input);\r\n      } else {\r\n        term.write(`\\r\\n❌ Not connected to server. Cannot send: ${input}\\r\\n`);\r\n      }\r\n    });\r\n\r\n    term.onKey(({ key, domEvent }) => {\r\n      if (domEvent.ctrlKey && domEvent.key === 'c') {\r\n        if (newSocket && newSocket.connected) {\r\n          newSocket.emit(\"ssh-input\", '\\x03');\r\n        }\r\n      }\r\n    });\r\n\r\n    // Handle window resize - using ref to prevent recreation\r\n    const handleResize = () => {\r\n      if (term && term.element && fitAddonRef.current && !term.isDisposed) {\r\n        try {\r\n          fitAddonRef.current.fit();\r\n        } catch (fitError) {\r\n          console.warn(\"Fit error:\", fitError);\r\n          // Fallback resize logic\r\n          if (terminalRef.current) {\r\n            const cols = Math.floor(terminalRef.current.clientWidth / 9);\r\n            const rows = Math.floor(terminalRef.current.clientHeight / 17);\r\n            term.resize(cols, rows);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Return cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (newSocket) {\r\n        newSocket.removeAllListeners();\r\n        newSocket.disconnect();\r\n      }\r\n      if (term && !term.isDisposed) {\r\n        term.dispose();\r\n      }\r\n    };\r\n  }, [connectToSSHServer]); // Only depend on connectToSSHServer\r\n\r\n  const initializeConnection = useCallback(() => {\r\n    // Prevent multiple initializations\r\n    if (isInitializedRef.current) {\r\n      console.log(\"Connection already initialized, skipping...\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      let data = null;\r\n\r\n      // Check for sessionKey method first\r\n      const sessionKey = urlParams.get('sessionKey');\r\n      if (sessionKey) {\r\n        const sessionData = sessionStorage.getItem(sessionKey);\r\n        if (sessionData) {\r\n          data = JSON.parse(sessionData);\r\n          sessionStorage.removeItem(sessionKey);\r\n        }\r\n      }\r\n\r\n      // Fallback to direct URL data\r\n      if (!data) {\r\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\r\n        if (urlData) {\r\n          data = JSON.parse(decodeURIComponent(urlData));\r\n        }\r\n      }\r\n\r\n      // Old format compatibility\r\n      if (!data) {\r\n        const host = urlParams.get('host');\r\n        const username = urlParams.get('username');\r\n        const password = urlParams.get('password');\r\n        const serverName = urlParams.get('serverName');\r\n        const token = urlParams.get('token');\r\n        const userId = urlParams.get('userId');\r\n\r\n        if (host && username && password) {\r\n          data = {\r\n            host,\r\n            username,\r\n            password,\r\n            serverName,\r\n            token,\r\n            userId,\r\n            ...getStoredUserData()\r\n          };\r\n        }\r\n      }\r\n\r\n      // SessionStorage fallback\r\n      if (!data) {\r\n        const stored = sessionStorage.getItem('terminalConnection');\r\n        if (stored) {\r\n          data = JSON.parse(stored);\r\n        }\r\n      }\r\n\r\n      if (data) {\r\n        console.log(\"Setting connection data:\", data);\r\n        setConnectionData(data);\r\n        // Don't call initializeTerminal here - let useEffect handle it\r\n      } else {\r\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error initializing connection:\", err);\r\n      setError(\"Failed to initialize connection data\");\r\n    }\r\n  }, [getStoredUserData]);\r\n\r\n  // Separate useEffect for initial connection data loading\r\n  useEffect(() => {\r\n    if (!isInitializedRef.current) {\r\n      console.log(\"Loading initial connection data...\");\r\n      initializeConnection();\r\n    }\r\n  }, []); // Empty dependency array - run only once\r\n\r\n  // Separate useEffect for terminal initialization when connectionData changes\r\n  useEffect(() => {\r\n    if (connectionData && !isInitializedRef.current) {\r\n      console.log(\"Initializing terminal with connection data...\");\r\n      const cleanup = initializeTerminal(connectionData);\r\n      \r\n      return cleanup; // Return cleanup function\r\n    }\r\n  }, [connectionData, initializeTerminal]);\r\n\r\n  // Handle postMessage communication\r\n  useEffect(() => {\r\n    const handleMessage = (event) => {\r\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\r\n        if (!isInitializedRef.current) {\r\n          setConnectionData(event.data.data);\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      window.removeEventListener('message', handleMessage);\r\n    };\r\n  }, []); // Empty dependency array\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"Component unmounting, cleaning up...\");\r\n      cleanupConnection();\r\n    };\r\n  }, [cleanupConnection]);\r\n\r\n  const handleDisconnect = useCallback(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit(\"user-disconnect\", {\r\n        userId: connectionData?.userId,\r\n        userName: connectionData?.userName,\r\n        sessionId: connectionData?.sessionId,\r\n        disconnectTime: new Date().toISOString(),\r\n        disconnectReason: 'user_initiated'\r\n      });\r\n      \r\n      socketRef.current.disconnect();\r\n    }\r\n    \r\n    cleanupConnection();\r\n    window.close();\r\n  }, [connectionData, cleanupConnection]);\r\n\r\n  const handleReconnect = useCallback(() => {\r\n    if (connectionData) {\r\n      setError(\"\");\r\n      setConnectionStatus(\"reconnecting\");\r\n      \r\n      // Reset initialization flag to allow reconnection\r\n      isInitializedRef.current = false;\r\n      \r\n      if (terminalInstance.current && !terminalInstance.current.isDisposed) {\r\n        terminalInstance.current.clear();\r\n        terminalInstance.current.write(\"🔄 Reconnecting...\\r\\n\");\r\n      }\r\n      \r\n      // Clean up existing connection\r\n      if (socketRef.current) {\r\n        socketRef.current.removeAllListeners();\r\n        socketRef.current.disconnect();\r\n        socketRef.current = null;\r\n      }\r\n      \r\n      if (terminalInstance.current) {\r\n        terminalInstance.current.dispose();\r\n        terminalInstance.current = null;\r\n      }\r\n      \r\n      // Reinitialize after cleanup\r\n      setTimeout(() => {\r\n        initializeTerminal(connectionData);\r\n      }, 1000);\r\n    }\r\n  }, [connectionData, initializeTerminal]);\r\n\r\n  const handleNewSession = useCallback(() => {\r\n    if (terminalInstance.current && !terminalInstance.current.isDisposed) {\r\n      terminalInstance.current.clear();\r\n    }\r\n    if (socketRef.current && connectionData) {\r\n      const newSessionData = {\r\n        ...connectionData,\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        connectionTime: new Date().toISOString()\r\n      };\r\n      setConnectionData(newSessionData);\r\n      connectToSSHServer(socketRef.current, newSessionData, terminalInstance.current);\r\n    }\r\n  }, [connectionData, connectToSSHServer]);\r\n\r\n  const handleNewTerminal = useCallback(() => {\r\n    handleNewSession();\r\n  }, [handleNewSession]);\r\n\r\n  const getStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case \"connected\":\r\n      case \"ssh-connected\":\r\n        return \"#2ecc71\";\r\n      case \"connecting\":\r\n      case \"reconnecting\":\r\n        return \"#f39c12\";\r\n      case \"error\":\r\n        return \"#e74c3c\";\r\n      default:\r\n        return \"#95a5a6\";\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (connectionStatus) {\r\n      case \"initializing\":\r\n        return \"Initializing...\";\r\n      case \"connecting\":\r\n        return \"Connecting...\";\r\n      case \"connected\":\r\n        return \"Socket Connected\";\r\n      case \"ssh-connected\":\r\n        return \"SSH Connected\";\r\n      case \"reconnecting\":\r\n        return \"Reconnecting...\";\r\n      case \"disconnected\":\r\n        return \"Disconnected\";\r\n      case \"error\":\r\n        return \"Connection Error\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const getUserDisplayInfo = () => {\r\n    if (!connectionData) return { name: 'Unknown', id: 'N/A', email: 'N/A' };\r\n    \r\n    if (connectionData.userName) {\r\n      return {\r\n        name: connectionData.userName,\r\n        id: connectionData.registeredId || 'N/A',\r\n        email: connectionData.userEmail || 'N/A',\r\n        role: connectionData.userRole || 'student'\r\n      };\r\n    }\r\n    \r\n    if (connectionData.user_data) {\r\n      return {\r\n        name: connectionData.user_data.name || 'Unknown',\r\n        id: connectionData.user_data.registered_id || 'N/A',\r\n        email: connectionData.user_data.email || 'N/A',\r\n        role: connectionData.user_data.role || 'student'\r\n      };\r\n    }\r\n    \r\n    return { name: 'Unknown', id: 'N/A', email: 'N/A', role: 'student' };\r\n  };\r\n\r\n  if (error && !connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>⚠️</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Terminal Connection Error</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>{error}</p>\r\n          <p style={{ margin: '0 0 20px 0', fontSize: '14px', color: '#95a5a6' }}>\r\n            Please return to the dashboard and try connecting again.\r\n          </p>\r\n          <button \r\n            onClick={() => window.close()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            Close Window\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!connectionData) {\r\n    return (\r\n      <div style={{ \r\n        height: '100vh', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        fontFamily: 'Arial, sans-serif'\r\n      }}>\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px',\r\n          backgroundColor: '#34495e',\r\n          borderRadius: '8px',\r\n          maxWidth: '500px'\r\n        }}>\r\n          <div style={{ fontSize: '48px', marginBottom: '20px' }}>🔄</div>\r\n          <h2 style={{ margin: '0 0 15px 0' }}>Loading Terminal...</h2>\r\n          <p style={{ margin: '0 0 20px 0', color: '#bdc3c7' }}>Initializing connection data...</p>\r\n          <div style={{ marginTop: '20px' }}>\r\n            <button \r\n              onClick={handleReconnect}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#3498db',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '14px'\r\n              }}\r\n            >\r\n              🔄 Retry Connection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const userInfo = getUserDisplayInfo();\r\n\r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column', backgroundColor: '#2c3e50' }}>\r\n      {/* Enhanced Header with User Info */}\r\n      <div style={{ \r\n        padding: '12px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '2px solid #2c3e50',\r\n        minHeight: '60px'\r\n      }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\r\n            <h3 style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>\r\n              🖥️ {connectionData?.serverName || connectionData?.host || \"Terminal\"}\r\n            </h3>\r\n            <div style={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              gap: '6px',\r\n              padding: '4px 8px',\r\n              backgroundColor: getStatusColor(),\r\n              borderRadius: '12px',\r\n              fontSize: '12px'\r\n            }}>\r\n              <div style={{ \r\n                width: '8px', \r\n                height: '8px', \r\n                borderRadius: '50%', \r\n                backgroundColor: 'white' \r\n              }}></div>\r\n              {getStatusText()}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ fontSize: '13px', color: '#bdc3c7', marginTop: '4px' }}>\r\n            👤 {userInfo.name} \r\n            {userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`}\r\n            {userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`}\r\n            {connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          {(connectionStatus === \"error\" || connectionStatus === \"disconnected\") && (\r\n            <button \r\n              onClick={handleReconnect}\r\n              style={{\r\n                padding: '6px 12px',\r\n                backgroundColor: '#f39c12',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              🔄 Reconnect\r\n            </button>\r\n          )}\r\n          \r\n          <button \r\n            onClick={handleNewTerminal}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#3498db',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            🆕 New Session\r\n          </button>\r\n          \r\n          <button \r\n            onClick={handleDisconnect}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: '#e74c3c',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n              fontSize: '12px'\r\n            }}\r\n          >\r\n            ❌ Disconnect & Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connection Info Bar */}\r\n      {connectionData && (\r\n        <div style={{ \r\n          padding: '8px 20px', \r\n          backgroundColor: '#2c3e50', \r\n          color: '#ecf0f1',\r\n          fontSize: '12px',\r\n          borderBottom: '1px solid #34495e'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              🌐 Server: {connectionData.host} | \r\n              👥 Role: {userInfo.role} | \r\n              🔑 Session: {connectionData.sessionId?.substr(-8) || 'N/A'}\r\n            </div>\r\n            <div>\r\n              {connectionData.connectionTime && (\r\n                <>Connected: {new Date(connectionData.connectionTime).toLocaleTimeString()}</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Debug Info Bar */}\r\n      <div style={{ \r\n        padding: '4px 20px', \r\n        backgroundColor: '#1a252f', \r\n        color: '#95a5a6',\r\n        fontSize: '11px',\r\n        borderBottom: '1px solid #34495e'\r\n      }}>\r\n        🔍 Debug: Socket URL: {SERVER_URL} | Status: {connectionStatus} | \r\n        Connected: {isConnected ? 'Yes' : 'No'} | \r\n        {error && `Error: ${error}`}\r\n      </div>\r\n\r\n      {/* Terminal Container */}\r\n      <div \r\n        ref={terminalRef} \r\n        style={{ \r\n          flex: 1, \r\n          padding: '10px',\r\n          backgroundColor: '#000000',\r\n          overflow: 'hidden',\r\n          border: '1px solid #34495e',\r\n          margin: '5px'\r\n        }} \r\n      />\r\n\r\n      {/* Status Footer */}\r\n      <div style={{ \r\n        padding: '8px 20px', \r\n        backgroundColor: '#34495e', \r\n        color: '#bdc3c7',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <div>\r\n          {error ? (\r\n            <span style={{ color: '#e74c3c' }}>❌ Error: {error}</span>\r\n          ) : (\r\n            <span>\r\n              Terminal ready | Use Ctrl+C to interrupt | Type 'exit' to close SSH session\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {userInfo.name !== 'Unknown' && `Logged in as: ${userInfo.name}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}