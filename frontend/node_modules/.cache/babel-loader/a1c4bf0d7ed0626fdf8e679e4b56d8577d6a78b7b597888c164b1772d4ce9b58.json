{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kavindu\\\\Desktop\\\\ssh-project-slt\\\\frontend\\\\src\\\\pages\\\\TerminalPage.js\",\n  _s = $RefreshSig$();\n// TerminalPageComplete.js - Full Terminal Page with Database Integration\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\nimport { FitAddon } from 'xterm-addon-fit';\nimport serverDataService from './serverDataService';\nimport './TerminalPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\n\n// Global singleton pattern - prevent multiple instances\nlet globalTerminalInstance = null;\nlet globalSocketInstance = null;\nlet globalIsInitialized = false;\nlet globalFitAddon = null;\nlet globalInputHandler = null;\nlet globalKeyHandler = null;\nlet globalEventListenersAttached = false;\nconst TerminalPage = () => {\n  _s();\n  var _connectionData$sessi;\n  // State management\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionData, setConnectionData] = useState(null);\n  const [serverData, setServerData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [terminalTheme, setTerminalTheme] = useState(\"dark\");\n  const [showServerPanel, setShowServerPanel] = useState(false);\n  const [connectionStats, setConnectionStats] = useState({\n    startTime: null,\n    dataReceived: 0,\n    dataSent: 0,\n    commandCount: 0\n  });\n\n  // Refs that don't cause re-renders\n  const terminalRef = useRef();\n  const terminalInstance = useRef();\n  const socketRef = useRef();\n  const isInitializedRef = useRef(false);\n  const connectionTimeoutRef = useRef(null);\n  const statsIntervalRef = useRef(null);\n\n  // Get stored user data from localStorage\n  const getStoredUserData = useCallback(() => {\n    try {\n      const userData = localStorage.getItem('user');\n      const token = localStorage.getItem('token');\n      if (userData) {\n        const user = JSON.parse(userData);\n        return {\n          token: token || '',\n          userId: user.id || user._id || '',\n          userEmail: user.email || '',\n          userName: user.name || '',\n          registeredId: user.registered_id || '',\n          userRole: user.role || 'student'\n        };\n      }\n    } catch (err) {\n      console.warn(\"Could not retrieve stored user data:\", err);\n    }\n    return {};\n  }, []);\n\n  // Fetch complete server data from database\n  const fetchCompleteServerData = useCallback(async (serverId, ipAddress) => {\n    if (!serverId && !ipAddress) return null;\n    try {\n      setError(\"\"); // Clear any previous errors\n\n      let server = null;\n      if (serverId) {\n        server = await serverDataService.getServerById(serverId);\n      } else if (ipAddress) {\n        server = await serverDataService.getServerByIp(ipAddress);\n      }\n      if (server) {\n        console.log(\"✅ Complete server data fetched:\", server);\n        setServerData(server);\n\n        // Check if server is available for connections\n        const isAvailable = await serverDataService.isServerAvailable(server._id || server.id);\n        if (!isAvailable) {\n          setError(\"Server is not available for new connections (maintenance mode or maximum connections reached)\");\n        }\n        return server;\n      }\n    } catch (error) {\n      console.warn(\"Could not fetch complete server data:\", error);\n      setError(`Failed to fetch server details: ${error.message}`);\n    }\n    return null;\n  }, []);\n\n  // Enhanced SSH connection with database logging\n  const connectToSSHServer = useCallback(async (socketInstance, data, term) => {\n    if (!socketInstance || !data || !term) {\n      console.error(\"Missing socket instance, connection data, or terminal\");\n      if (term) term.write(\"\\u001b[31m❌ Cannot connect: Missing connection data\\u001b[0m\\r\\n\");\n      return;\n    }\n    console.log(\"🔗 Attempting SSH connection with enhanced data:\", data);\n\n    // Log connection attempt\n    if (data.serverId) {\n      await serverDataService.logServerConnection(data.serverId, {\n        userId: data.userId,\n        userName: data.userName,\n        userEmail: data.userEmail,\n        action: 'connection_attempt',\n        host: data.host,\n        username: data.username,\n        sessionId: data.sessionId\n      });\n    }\n    const sshConnectionData = {\n      host: data.host,\n      username: data.username,\n      password: data.password,\n      port: data.port || 22,\n      user: {\n        id: data.userId,\n        name: data.userName,\n        email: data.userEmail,\n        registered_id: data.registeredId,\n        role: data.userRole\n      },\n      session: {\n        id: data.sessionId,\n        token: data.token,\n        connectionTime: data.connectionTime,\n        serverName: data.serverName,\n        dashboardUrl: data.dashboardUrl,\n        serverId: data.serverId\n      },\n      server: serverData ? {\n        id: serverData._id || serverData.id,\n        name: serverData.name,\n        ip: serverData.ip,\n        port: serverData.port,\n        os: serverData.os,\n        location: serverData.location,\n        max_connections: serverData.max_connections\n      } : null,\n      browser: {\n        userAgent: data.browserInfo || navigator.userAgent,\n        windowId: window.name,\n        referrer: document.referrer,\n        viewport: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      }\n    };\n    term.write(\"\\u001b[36m🔗 Connecting to SSH server...\\u001b[0m\\r\\n\");\n    term.write(`\\u001b[33m📡 Host:\\u001b[0m ${data.host}:${data.port || 22}\\r\\n`);\n    term.write(`\\u001b[33m👤 User:\\u001b[0m ${data.username}\\r\\n`);\n    if (serverData) {\n      term.write(`\\u001b[33m🖥️ Server:\\u001b[0m ${serverData.name}\\r\\n`);\n      term.write(`\\u001b[33m🌍 Location:\\u001b[0m ${serverData.location || 'Unknown'}\\r\\n`);\n      term.write(`\\u001b[33m💾 OS:\\u001b[0m ${serverData.os || 'Linux'}\\r\\n`);\n    }\n    term.write(\"\\u001b[35m🔐 Authenticating...\\u001b[0m\\r\\n\\r\\n\");\n\n    // Send enhanced connection request\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\n\n    // Enhanced user activity tracking\n    socketInstance.emit(\"user-activity\", {\n      type: 'terminal_access',\n      userId: data.userId,\n      userName: data.userName,\n      userEmail: data.userEmail,\n      action: 'ssh_connect_attempt',\n      target: data.host,\n      timestamp: new Date().toISOString(),\n      sessionId: data.sessionId,\n      serverId: data.serverId,\n      serverName: (serverData === null || serverData === void 0 ? void 0 : serverData.name) || data.serverName,\n      browserInfo: navigator.userAgent,\n      connectionDetails: {\n        host: data.host,\n        port: data.port || 22,\n        username: data.username\n      }\n    });\n\n    // Set connection timeout\n    if (connectionTimeoutRef.current) {\n      clearTimeout(connectionTimeoutRef.current);\n    }\n    connectionTimeoutRef.current = setTimeout(() => {\n      term.write(\"\\u001b[33m⏱️ Connection is taking longer than expected...\\u001b[0m\\r\\n\");\n      term.write(\"\\u001b[36m💡 Check if your backend server is handling SSH connections properly\\u001b[0m\\r\\n\");\n      if (serverData !== null && serverData !== void 0 && serverData.max_connections) {\n        term.write(`\\u001b[36m📊 Server max connections: ${serverData.max_connections}\\u001b[0m\\r\\n`);\n      }\n      term.write(\"\\r\\n\");\n    }, 10000);\n\n    // Start connection stats tracking\n    setConnectionStats(prev => ({\n      ...prev,\n      startTime: new Date()\n    }));\n  }, [serverData]);\n\n  // Enhanced cleanup with database logging\n  const cleanupConnection = useCallback(async () => {\n    console.log(\"🧹 GLOBAL CLEANUP: Enhanced cleanup starting...\");\n\n    // Log disconnection\n    if (connectionData !== null && connectionData !== void 0 && connectionData.serverId) {\n      try {\n        await serverDataService.logServerConnection(connectionData.serverId, {\n          userId: connectionData.userId,\n          userName: connectionData.userName,\n          action: 'connection_closed',\n          sessionId: connectionData.sessionId,\n          duration: connectionStats.startTime ? Math.floor((new Date() - connectionStats.startTime) / 1000) : 0,\n          stats: connectionStats\n        });\n      } catch (error) {\n        console.warn(\"Failed to log disconnection:\", error);\n      }\n    }\n\n    // Clear timers\n    if (connectionTimeoutRef.current) {\n      clearTimeout(connectionTimeoutRef.current);\n      connectionTimeoutRef.current = null;\n    }\n    if (statsIntervalRef.current) {\n      clearInterval(statsIntervalRef.current);\n      statsIntervalRef.current = null;\n    }\n\n    // Clean up global handlers\n    if (globalInputHandler) {\n      globalInputHandler.dispose();\n      globalInputHandler = null;\n    }\n    if (globalKeyHandler) {\n      globalKeyHandler.dispose();\n      globalKeyHandler = null;\n    }\n\n    // Clean up socket\n    if (globalSocketInstance) {\n      globalSocketInstance.removeAllListeners();\n      globalSocketInstance.disconnect();\n      globalSocketInstance = null;\n    }\n\n    // Clean up terminal\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\n      globalTerminalInstance.dispose();\n      globalTerminalInstance = null;\n    }\n\n    // Reset global flags\n    globalIsInitialized = false;\n    globalFitAddon = null;\n    globalEventListenersAttached = false;\n\n    // Clean up session storage\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('terminal_')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n    console.log(\"✅ Enhanced cleanup complete\");\n  }, [connectionData, connectionStats]);\n\n  // Enhanced socket event listeners with stats tracking\n  const setupSocketEventListeners = useCallback((socket, term, data) => {\n    if (globalEventListenersAttached) {\n      console.log(\"🛑 Socket event listeners already attached globally, skipping...\");\n      return;\n    }\n    console.log(\"🎧 Setting up enhanced socket event listeners...\");\n    globalEventListenersAttached = true;\n    let sshConnectedHandled = false;\n    socket.on(\"connect\", () => {\n      console.log(\"✅ GLOBAL SOCKET: Connected to terminal server\");\n      setIsConnected(true);\n      setConnectionStatus(\"connected\");\n      term.write(\"\\u001b[32m✅ Socket connected to \" + SERVER_URL + \"\\u001b[0m\\r\\n\");\n      term.write(\"\\u001b[36m🔗 Establishing SSH connection...\\u001b[0m\\r\\n\\r\\n\");\n      connectToSSHServer(socket, data, term);\n    });\n    socket.on(\"ssh-output\", outputData => {\n      if (term && !term.isDisposed) {\n        term.write(outputData);\n\n        // Track data received\n        setConnectionStats(prev => ({\n          ...prev,\n          dataReceived: prev.dataReceived + outputData.length\n        }));\n      }\n    });\n    socket.on(\"ssh-connected\", async info => {\n      if (sshConnectedHandled) {\n        console.log(\"⚠️ SSH connected event already handled globally, ignoring duplicate\");\n        return;\n      }\n      sshConnectedHandled = true;\n      if (connectionTimeoutRef.current) {\n        clearTimeout(connectionTimeoutRef.current);\n        connectionTimeoutRef.current = null;\n      }\n      console.log(\"🎉 GLOBAL SSH: Connection established successfully\");\n      setConnectionStatus(\"ssh-connected\");\n      setError(\"\");\n      term.write(\"\\r\\n\\u001b[32m🎉 SSH CONNECTION ESTABLISHED! 🎉\\u001b[0m\\r\\n\");\n      term.write(`\\u001b[32m✅ Connected to:\\u001b[0m ${info.host || data.host}\\r\\n`);\n      term.write(`\\u001b[33m👤 User:\\u001b[0m ${data.userName || 'Unknown'}\\r\\n`);\n      term.write(`\\u001b[35m🆔 Student ID:\\u001b[0m ${data.registeredId || 'No ID'}\\r\\n`);\n      term.write(`\\u001b[36m⏰ Connected at:\\u001b[0m ${new Date().toLocaleString()}\\r\\n`);\n      if (serverData) {\n        term.write(`\\u001b[34m🖥️ Server Name:\\u001b[0m ${serverData.name}\\r\\n`);\n        if (serverData.location) {\n          term.write(`\\u001b[34m🌍 Location:\\u001b[0m ${serverData.location}\\r\\n`);\n        }\n        if (serverData.os) {\n          term.write(`\\u001b[34m💾 OS:\\u001b[0m ${serverData.os}\\r\\n`);\n        }\n      }\n      term.write(\"=\".repeat(60) + \"\\r\\n\");\n      term.write(\"\\u001b[36m💡 You can now run commands like: pwd, ls, whoami, top\\u001b[0m\\r\\n\");\n      term.write(\"=\".repeat(60) + \"\\r\\n\\r\\n\");\n\n      // Log successful connection\n      if (data.serverId) {\n        try {\n          await serverDataService.logServerConnection(data.serverId, {\n            userId: data.userId,\n            userName: data.userName,\n            action: 'connection_established',\n            sessionId: data.sessionId,\n            connectionInfo: info\n          });\n        } catch (error) {\n          console.warn(\"Failed to log successful connection:\", error);\n        }\n      }\n\n      // Start stats interval\n      if (statsIntervalRef.current) {\n        clearInterval(statsIntervalRef.current);\n      }\n      statsIntervalRef.current = setInterval(() => {\n        setConnectionStats(prev => ({\n          ...prev,\n          commandCount: prev.commandCount + 1\n        }));\n      }, 60000); // Update stats every minute\n    });\n    socket.on(\"ssh-error\", async errorData => {\n      const errorMsg = errorData.message || errorData;\n      term.write(`\\r\\n\\u001b[31m❌ SSH Connection Error: ${errorMsg}\\u001b[0m\\r\\n`);\n      if (serverData && serverData.max_connections) {\n        const connectionCount = await serverDataService.getServerConnectionCount(serverData._id || serverData.id);\n        term.write(`\\u001b[33m📊 Current connections: ${connectionCount}/${serverData.max_connections}\\u001b[0m\\r\\n`);\n      }\n      term.write(\"\\r\\n\\u001b[33m🔄 Retrying connection in 3 seconds...\\u001b[0m\\r\\n\");\n      setConnectionStatus(\"error\");\n      setError(errorMsg);\n\n      // Log connection error\n      if (data.serverId) {\n        try {\n          await serverDataService.logServerConnection(data.serverId, {\n            userId: data.userId,\n            userName: data.userName,\n            action: 'connection_error',\n            sessionId: data.sessionId,\n            error: errorMsg\n          });\n        } catch (error) {\n          console.warn(\"Failed to log connection error:\", error);\n        }\n      }\n      setTimeout(() => {\n        if (globalSocketInstance && data) {\n          connectToSSHServer(globalSocketInstance, data, term);\n        }\n      }, 3000);\n    });\n    socket.on(\"ssh-disconnected\", async () => {\n      term.write(\"\\r\\n\\u001b[33m🔌 SSH connection closed\\u001b[0m\\r\\n\");\n      setConnectionStatus(\"disconnected\");\n      setIsConnected(false);\n\n      // Stop stats interval\n      if (statsIntervalRef.current) {\n        clearInterval(statsIntervalRef.current);\n        statsIntervalRef.current = null;\n      }\n\n      // Log disconnection\n      if (data.serverId) {\n        try {\n          await serverDataService.logServerConnection(data.serverId, {\n            userId: data.userId,\n            userName: data.userName,\n            action: 'connection_disconnected',\n            sessionId: data.sessionId,\n            duration: connectionStats.startTime ? Math.floor((new Date() - connectionStats.startTime) / 1000) : 0\n          });\n        } catch (error) {\n          console.warn(\"Failed to log disconnection:\", error);\n        }\n      }\n    });\n    socket.on(\"disconnect\", reason => {\n      setIsConnected(false);\n      setConnectionStatus(\"disconnected\");\n      term.write(`\\r\\n\\u001b[31m[Socket disconnected: ${reason}]\\u001b[0m\\r\\n`);\n      if (reason !== 'io client disconnect') {\n        setTimeout(() => {\n          if (globalSocketInstance && !globalSocketInstance.connected) {\n            term.write(\"\\r\\n\\u001b[36m🔄 Attempting to reconnect...\\u001b[0m\\r\\n\");\n            globalSocketInstance.connect();\n          }\n        }, 2000);\n      }\n    });\n    socket.on(\"connect_error\", err => {\n      const errorMsg = `Connection error: ${err.message}`;\n      setError(errorMsg);\n      setConnectionStatus(\"error\");\n      term.write(`\\r\\n\\u001b[31m❌ ${errorMsg}\\u001b[0m\\r\\n`);\n      term.write(`\\r\\n\\u001b[36m💡 Make sure your backend server is running on ${SERVER_URL}\\u001b[0m\\r\\n`);\n    });\n  }, [connectToSSHServer, serverData, connectionStats]);\n\n  // Enhanced input handlers with command tracking\n  const setupTerminalInputHandlers = useCallback((term, socket) => {\n    if (globalInputHandler) {\n      globalInputHandler.dispose();\n      globalInputHandler = null;\n    }\n    if (globalKeyHandler) {\n      globalKeyHandler.dispose();\n      globalKeyHandler = null;\n    }\n    globalInputHandler = term.onData(input => {\n      if (socket && socket.connected) {\n        socket.emit(\"ssh-input\", input);\n\n        // Track data sent and commands\n        setConnectionStats(prev => ({\n          ...prev,\n          dataSent: prev.dataSent + input.length,\n          commandCount: input.includes('\\r') ? prev.commandCount + 1 : prev.commandCount\n        }));\n      } else {\n        term.write(\"\\r\\n\\u001b[31m❌ Not connected to server. Cannot send input.\\u001b[0m\\r\\n\");\n      }\n    });\n    globalKeyHandler = term.onKey(({\n      key,\n      domEvent\n    }) => {\n      if (domEvent.ctrlKey && domEvent.key === 'c') {\n        if (socket && socket.connected) {\n          socket.emit(\"ssh-input\", '\\x03');\n        }\n      }\n    });\n  }, []);\n\n  // Get terminal theme configuration\n  const getTerminalTheme = themeName => {\n    const themes = {\n      dark: {\n        background: '#0d1117',\n        foreground: '#f0f6fc',\n        cursor: '#f0f6fc',\n        selection: '#264f78',\n        black: '#484f58',\n        red: '#ff7b72',\n        green: '#7ee787',\n        yellow: '#ffa657',\n        blue: '#79c0ff',\n        magenta: '#d2a8ff',\n        cyan: '#a5f3fc',\n        white: '#f0f6fc'\n      },\n      light: {\n        background: '#ffffff',\n        foreground: '#24292f',\n        cursor: '#24292f',\n        selection: '#0969da',\n        black: '#24292f',\n        red: '#cf222e',\n        green: '#116329',\n        yellow: '#4d2d00',\n        blue: '#0969da',\n        magenta: '#8250df',\n        cyan: '#1b7c83',\n        white: '#6e7781'\n      },\n      matrix: {\n        background: '#000000',\n        foreground: '#00ff41',\n        cursor: '#00ff41',\n        selection: '#00ff4150',\n        black: '#000000',\n        red: '#ff0000',\n        green: '#00ff41',\n        yellow: '#ffff00',\n        blue: '#0000ff',\n        magenta: '#ff00ff',\n        cyan: '#00ffff',\n        white: '#ffffff'\n      }\n    };\n    return themes[themeName] || themes.dark;\n  };\n\n  // Enhanced terminal initialization\n  const initializeTerminal = useCallback(data => {\n    if (globalIsInitialized) {\n      if (globalTerminalInstance && terminalRef.current && !globalTerminalInstance.isDisposed) {\n        var _globalSocketInstance, _globalSocketInstance2;\n        terminalInstance.current = globalTerminalInstance;\n        socketRef.current = globalSocketInstance;\n        setIsConnected(!!((_globalSocketInstance = globalSocketInstance) !== null && _globalSocketInstance !== void 0 && _globalSocketInstance.connected));\n        setConnectionStatus((_globalSocketInstance2 = globalSocketInstance) !== null && _globalSocketInstance2 !== void 0 && _globalSocketInstance2.connected ? \"ssh-connected\" : \"connected\");\n      }\n      return;\n    }\n    globalIsInitialized = true;\n    isInitializedRef.current = true;\n    setConnectionStatus(\"connecting\");\n    if (!globalFitAddon) {\n      globalFitAddon = new FitAddon();\n    }\n    const term = new Terminal({\n      cursorBlink: true,\n      theme: getTerminalTheme(terminalTheme),\n      fontSize: 14,\n      fontFamily: '\"Cascadia Code\", \"Fira Code\", \"JetBrains Mono\", Consolas, Monaco, \"Courier New\", monospace',\n      fontWeight: 'normal',\n      fontWeightBold: 'bold',\n      lineHeight: 1.2,\n      letterSpacing: 0,\n      rows: 30,\n      cols: 120,\n      scrollback: 5000,\n      convertEol: true,\n      disableStdin: false,\n      localEcho: false,\n      allowProposedApi: true,\n      bellStyle: 'sound'\n    });\n    term.loadAddon(globalFitAddon);\n    if (terminalRef.current) {\n      term.open(terminalRef.current);\n      setTimeout(() => {\n        if (globalFitAddon && !term.isDisposed) {\n          try {\n            globalFitAddon.fit();\n          } catch (err) {\n            console.warn(\"Initial fit error:\", err);\n          }\n        }\n      }, 100);\n      globalTerminalInstance = term;\n      terminalInstance.current = term;\n      term.write('\\u001b[32m🚀 TERMINAL INITIALIZED\\u001b[0m\\r\\n');\n      term.write(`\\u001b[36m📡 Connecting to ${SERVER_URL}...\\u001b[0m\\r\\n`);\n      if (serverData) {\n        term.write(`\\u001b[33m🖥️ Target Server: ${serverData.name} (${serverData.ip})\\u001b[0m\\r\\n`);\n      }\n      term.write('\\r\\n');\n    }\n    if (globalSocketInstance) {\n      globalSocketInstance.removeAllListeners();\n      globalSocketInstance.disconnect();\n    }\n    const newSocket = io(SERVER_URL, {\n      query: {\n        userId: data.userId || '',\n        userName: data.userName || '',\n        userRole: data.userRole || 'student',\n        serverId: data.serverId || ''\n      },\n      timeout: 10000,\n      forceNew: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      transports: ['websocket', 'polling']\n    });\n    globalSocketInstance = newSocket;\n    socketRef.current = newSocket;\n    setupSocketEventListeners(newSocket, term, data);\n    setupTerminalInputHandlers(term, newSocket);\n    const handleResize = () => {\n      if (term && term.element && globalFitAddon && !term.isDisposed) {\n        try {\n          globalFitAddon.fit();\n        } catch (fitError) {\n          console.warn(\"Fit error:\", fitError);\n          if (terminalRef.current) {\n            const cols = Math.floor(terminalRef.current.clientWidth / 9);\n            const rows = Math.floor(terminalRef.current.clientHeight / 17);\n            term.resize(cols, rows);\n          }\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      terminalInstance.current = null;\n      socketRef.current = null;\n    };\n  }, [setupSocketEventListeners, setupTerminalInputHandlers, terminalTheme, serverData]);\n\n  // Enhanced connection data parsing with validation\n  const parseConnectionData = useCallback(rawData => {\n    console.log(\"🔍 Parsing connection data:\", rawData);\n    const storedUserData = getStoredUserData();\n    const validation = serverDataService.validateConnectionData(rawData);\n    if (!validation.isValid) {\n      throw new Error(`Invalid connection data: ${validation.errors.join(', ')}`);\n    }\n    const normalizedData = {\n      host: rawData.host || rawData.ip || '',\n      username: rawData.username || '',\n      password: rawData.password || '',\n      port: rawData.port || 22,\n      serverName: rawData.serverName || rawData.name || rawData.host || 'Unknown Server',\n      userId: rawData.userId || storedUserData.userId || '',\n      userName: rawData.userName || storedUserData.userName || '',\n      userEmail: rawData.userEmail || storedUserData.userEmail || '',\n      registeredId: rawData.registeredId || storedUserData.registeredId || '',\n      userRole: rawData.userRole || storedUserData.userRole || 'student',\n      token: rawData.token || storedUserData.token || '',\n      sessionId: rawData.sessionId || `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      connectionTime: rawData.connectionTime || new Date().toISOString(),\n      dashboardUrl: rawData.dashboardUrl || window.location.origin,\n      browserInfo: rawData.browserInfo || navigator.userAgent,\n      serverId: rawData.serverId || rawData.id || rawData._id || '',\n      user: rawData.user || {\n        id: rawData.userId || storedUserData.userId,\n        name: rawData.userName || storedUserData.userName,\n        email: rawData.userEmail || storedUserData.userEmail,\n        registered_id: rawData.registeredId || storedUserData.registeredId,\n        role: rawData.userRole || storedUserData.userRole || 'student'\n      }\n    };\n    console.log(\"✅ Normalized and validated connection data:\", normalizedData);\n    return normalizedData;\n  }, [getStoredUserData]);\n\n  // Enhanced connection initialization\n  const initializeConnection = useCallback(async () => {\n    if (isInitializedRef.current) {\n      console.log(\"Connection already initialized, skipping...\");\n      return;\n    }\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      let data = null;\n\n      // Method 1: SessionKey approach (most secure)\n      const sessionKey = urlParams.get('sessionKey');\n      if (sessionKey) {\n        const sessionData = sessionStorage.getItem(sessionKey);\n        if (sessionData) {\n          data = JSON.parse(sessionData);\n          sessionStorage.removeItem(sessionKey);\n        }\n      }\n\n      // Method 2: Direct URL data\n      if (!data) {\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\n        if (urlData) {\n          data = JSON.parse(decodeURIComponent(urlData));\n        }\n      }\n\n      // Method 3: Individual URL parameters\n      if (!data) {\n        const host = urlParams.get('host');\n        const username = urlParams.get('username');\n        const password = urlParams.get('password');\n        const serverName = urlParams.get('serverName') || urlParams.get('name');\n        const token = urlParams.get('token');\n        const userId = urlParams.get('userId');\n        const serverId = urlParams.get('serverId');\n        if (host && username && password) {\n          data = {\n            host,\n            username,\n            password,\n            serverName,\n            token,\n            userId,\n            serverId,\n            ...getStoredUserData()\n          };\n        }\n      }\n\n      // Method 4: SessionStorage fallback\n      if (!data) {\n        const stored = sessionStorage.getItem('terminalConnection');\n        if (stored) {\n          data = JSON.parse(stored);\n        }\n      }\n      if (data) {\n        const normalizedData = parseConnectionData(data);\n        setConnectionData(normalizedData);\n\n        // Fetch complete server data from database\n        await fetchCompleteServerData(normalizedData.serverId, normalizedData.host);\n      } else {\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\n      }\n    } catch (err) {\n      console.error(\"❌ Error initializing connection:\", err);\n      setError(`Failed to initialize connection: ${err.message}`);\n    }\n  }, [getStoredUserData, parseConnectionData, fetchCompleteServerData]);\n\n  // Event handlers\n  const handleDisconnect = useCallback(async () => {\n    if (globalSocketInstance && connectionData) {\n      globalSocketInstance.emit(\"user-disconnect\", {\n        userId: connectionData.userId,\n        userName: connectionData.userName,\n        sessionId: connectionData.sessionId,\n        serverId: connectionData.serverId,\n        disconnectTime: new Date().toISOString(),\n        disconnectReason: 'user_initiated',\n        connectionStats: connectionStats\n      });\n      globalSocketInstance.disconnect();\n    }\n    await cleanupConnection();\n    window.close();\n  }, [connectionData, cleanupConnection, connectionStats]);\n  const handleReconnect = useCallback(() => {\n    if (connectionData) {\n      setError(\"\");\n      setConnectionStatus(\"reconnecting\");\n      if (globalInputHandler) {\n        globalInputHandler.dispose();\n        globalInputHandler = null;\n      }\n      if (globalKeyHandler) {\n        globalKeyHandler.dispose();\n        globalKeyHandler = null;\n      }\n      globalIsInitialized = false;\n      globalEventListenersAttached = false;\n      isInitializedRef.current = false;\n      if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\n        globalTerminalInstance.clear();\n        globalTerminalInstance.write(\"\\u001b[36m🔄 Reconnecting...\\u001b[0m\\r\\n\");\n      }\n      if (globalSocketInstance) {\n        globalSocketInstance.removeAllListeners();\n        globalSocketInstance.disconnect();\n        globalSocketInstance = null;\n      }\n      if (globalTerminalInstance) {\n        globalTerminalInstance.dispose();\n        globalTerminalInstance = null;\n      }\n      setTimeout(() => {\n        initializeTerminal(connectionData);\n      }, 1000);\n    }\n  }, [connectionData, initializeTerminal]);\n  const handleNewSession = useCallback(() => {\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\n      globalTerminalInstance.clear();\n    }\n    if (globalSocketInstance && connectionData) {\n      const newSessionData = {\n        ...connectionData,\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        connectionTime: new Date().toISOString()\n      };\n      setConnectionData(newSessionData);\n      setConnectionStats({\n        startTime: null,\n        dataReceived: 0,\n        dataSent: 0,\n        commandCount: 0\n      });\n      connectToSSHServer(globalSocketInstance, newSessionData, globalTerminalInstance);\n    }\n  }, [connectionData, connectToSSHServer]);\n  const toggleFullscreen = useCallback(() => {\n    setIsFullscreen(!isFullscreen);\n    setTimeout(() => {\n      if (globalFitAddon && globalTerminalInstance && !globalTerminalInstance.isDisposed) {\n        try {\n          globalFitAddon.fit();\n        } catch (err) {\n          console.warn(\"Fit error after fullscreen toggle:\", err);\n        }\n      }\n    }, 100);\n  }, [isFullscreen]);\n  const changeTheme = useCallback(newTheme => {\n    setTerminalTheme(newTheme);\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\n      globalTerminalInstance.options.theme = getTerminalTheme(newTheme);\n    }\n\n    // Apply theme to root element\n    document.documentElement.setAttribute('data-theme', newTheme);\n  }, []);\n\n  // Utility functions\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case \"connected\":\n      case \"ssh-connected\":\n        return \"var(--success-color)\";\n      case \"connecting\":\n      case \"reconnecting\":\n        return \"var(--warning-color)\";\n      case \"error\":\n        return \"var(--error-color)\";\n      default:\n        return \"var(--muted-color)\";\n    }\n  };\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case \"initializing\":\n        return \"Initializing...\";\n      case \"connecting\":\n        return \"Connecting...\";\n      case \"connected\":\n        return \"Socket Connected\";\n      case \"ssh-connected\":\n        return \"SSH Connected\";\n      case \"reconnecting\":\n        return \"Reconnecting...\";\n      case \"disconnected\":\n        return \"Disconnected\";\n      case \"error\":\n        return \"Connection Error\";\n      default:\n        return \"Unknown\";\n    }\n  };\n  const getUserDisplayInfo = () => {\n    if (!connectionData) return {\n      name: 'Unknown',\n      id: 'N/A',\n      email: 'N/A',\n      role: 'student'\n    };\n    return {\n      name: connectionData.userName || 'Unknown',\n      id: connectionData.registeredId || 'N/A',\n      email: connectionData.userEmail || 'N/A',\n      role: connectionData.userRole || 'student'\n    };\n  };\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const formatDuration = startTime => {\n    if (!startTime) return '0s';\n    const duration = Math.floor((new Date() - startTime) / 1000);\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = duration % 60;\n    if (hours > 0) return `${hours}h ${minutes}m ${seconds}s`;\n    if (minutes > 0) return `${minutes}m ${seconds}s`;\n    return `${seconds}s`;\n  };\n\n  // Effects\n  useEffect(() => {\n    if (!isInitializedRef.current) {\n      initializeConnection();\n    }\n  }, [initializeConnection]);\n  useEffect(() => {\n    if (connectionData && !globalIsInitialized) {\n      const cleanup = initializeTerminal(connectionData);\n      return cleanup;\n    } else if (connectionData && globalIsInitialized) {\n      if (globalTerminalInstance && terminalRef.current && !globalTerminalInstance.isDisposed) {\n        try {\n          var _globalSocketInstance3, _globalSocketInstance4;\n          globalTerminalInstance.open(terminalRef.current);\n          terminalInstance.current = globalTerminalInstance;\n          socketRef.current = globalSocketInstance;\n          setIsConnected(!!((_globalSocketInstance3 = globalSocketInstance) !== null && _globalSocketInstance3 !== void 0 && _globalSocketInstance3.connected));\n          setConnectionStatus((_globalSocketInstance4 = globalSocketInstance) !== null && _globalSocketInstance4 !== void 0 && _globalSocketInstance4.connected ? \"ssh-connected\" : \"connected\");\n        } catch (err) {\n          console.error(\"Error reconnecting to existing terminal:\", err);\n        }\n      }\n    }\n  }, [connectionData, initializeTerminal]);\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\n        if (!isInitializedRef.current) {\n          const normalizedData = parseConnectionData(event.data.data);\n          setConnectionData(normalizedData);\n          fetchCompleteServerData(normalizedData.serverId, normalizedData.host);\n        }\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [parseConnectionData, fetchCompleteServerData]);\n  useEffect(() => {\n    return () => {\n      cleanupConnection();\n    };\n  }, [cleanupConnection]);\n\n  // Apply theme on mount\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', terminalTheme);\n  }, [terminalTheme]);\n\n  // Error screen\n  if (error && !connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-error-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"error-title\",\n          children: \"Terminal Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-subtitle\",\n          children: \"Please return to the dashboard and try connecting again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"error-button\",\n            onClick: () => window.close(),\n            children: \"Close Window\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loading-button\",\n            onClick: initializeConnection,\n            children: \"Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Loading screen\n  if (!connectionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-loading-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-icon\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"loading-title\",\n          children: \"Loading Terminal...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-message\",\n          children: \"Initializing connection and fetching server data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loading-button\",\n          onClick: initializeConnection,\n          children: \"\\uD83D\\uDD04 Retry Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }, this);\n  }\n  const userInfo = getUserDisplayInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `terminal-app ${isFullscreen ? 'fullscreen' : ''}`,\n    \"data-theme\": terminalTheme,\n    \"data-status\": connectionStatus,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"server-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"server-name\",\n            children: [\"\\uD83D\\uDDA5\\uFE0F \", (serverData === null || serverData === void 0 ? void 0 : serverData.name) || (connectionData === null || connectionData === void 0 ? void 0 : connectionData.serverName) || (connectionData === null || connectionData === void 0 ? void 0 : connectionData.host) || \"Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            style: {\n              backgroundColor: getStatusColor()\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [\"\\uD83D\\uDC64 \", userInfo.name, userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`, userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`, connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u23F1\\uFE0F \", formatDuration(connectionStats.startTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCA \", connectionStats.commandCount, \" cmds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-selector\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: terminalTheme,\n            onChange: e => changeTheme(e.target.value),\n            className: \"theme-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dark\",\n              children: \"Dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"light\",\n              children: \"Light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"matrix\",\n              children: \"Matrix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button info-btn\",\n          onClick: () => setShowServerPanel(!showServerPanel),\n          title: \"Server Information\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button fullscreen-btn\",\n          onClick: toggleFullscreen,\n          title: isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\",\n          children: isFullscreen ? \"🗗\" : \"🗖\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 11\n        }, this), (connectionStatus === \"error\" || connectionStatus === \"disconnected\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button reconnect-btn\",\n          onClick: handleReconnect,\n          children: \"\\uD83D\\uDD04 Reconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button new-session-btn\",\n          onClick: handleNewSession,\n          children: \"\\uD83C\\uDD95 New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button disconnect-btn\",\n          onClick: handleDisconnect,\n          children: \"\\u274C Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-info-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83C\\uDF10 \", connectionData.host, \":\", connectionData.port]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDC65 \", userInfo.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDD11 \", ((_connectionData$sessi = connectionData.sessionId) === null || _connectionData$sessi === void 0 ? void 0 : _connectionData$sessi.substr(-8)) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 11\n        }, this), connectionData.serverId && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83C\\uDD94 \", connectionData.serverId.substr(-8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 39\n        }, this), serverData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [serverData.location && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCD \", serverData.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 39\n          }, this), serverData.os && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCBE \", serverData.os]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 33\n          }, this), serverData.max_connections && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDC65 Max: \", serverData.max_connections]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCE4 \", formatBytes(connectionStats.dataSent)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCE5 \", formatBytes(connectionStats.dataReceived)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-time\",\n        children: [\"Connected: \", connectionData.connectionTime ? new Date(connectionData.connectionTime).toLocaleTimeString() : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: terminalRef,\n        className: \"terminal-content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-left\",\n        children: error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"footer-error\",\n          children: [\"\\u274C Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"footer-info\",\n          children: [\"Terminal ready | Ctrl+C to interrupt | Type 'exit' to close | Theme: \", terminalTheme]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"User: \", userInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 11\n        }, this), (serverData === null || serverData === void 0 ? void 0 : serverData.name) && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | Server: \", serverData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 32\n        }, this), (serverData === null || serverData === void 0 ? void 0 : serverData.status) && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | Status: \", serverData.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 7\n    }, this), showServerPanel && serverData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-details-panel slide-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCA Server Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"panel-close\",\n          onClick: () => setShowServerPanel(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"IP Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.port || 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `detail-value status-${serverData.status}`,\n              children: serverData.status || 'active'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 15\n          }, this), serverData.os && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Operating System:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.os\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 17\n          }, this), serverData.location && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 17\n          }, this), serverData.max_connections && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Max Connections:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.max_connections\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 17\n          }, this), serverData.version && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Version:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.version\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 17\n          }, this), serverData.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: serverData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 17\n          }, this), serverData.created_at && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Created:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: new Date(serverData.created_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 17\n          }, this), serverData.updated_at && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Last Updated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: new Date(serverData.updated_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Connection Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Session Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatDuration(connectionStats.startTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Commands Sent:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: connectionStats.commandCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Data Sent:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatBytes(connectionStats.dataSent)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Data Received:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatBytes(connectionStats.dataReceived)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1051,\n    columnNumber: 5\n  }, this);\n};\n_s(TerminalPage, \"FjRsxUm6pLaH0GxiPtWZRWYToKo=\");\n_c = TerminalPage;\nexport default TerminalPage;\nvar _c;\n$RefreshReg$(_c, \"TerminalPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","Terminal","FitAddon","serverDataService","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","process","env","REACT_APP_SERVER_URL","globalTerminalInstance","globalSocketInstance","globalIsInitialized","globalFitAddon","globalInputHandler","globalKeyHandler","globalEventListenersAttached","TerminalPage","_s","_connectionData$sessi","isConnected","setIsConnected","connectionData","setConnectionData","serverData","setServerData","error","setError","connectionStatus","setConnectionStatus","isFullscreen","setIsFullscreen","terminalTheme","setTerminalTheme","showServerPanel","setShowServerPanel","connectionStats","setConnectionStats","startTime","dataReceived","dataSent","commandCount","terminalRef","terminalInstance","socketRef","isInitializedRef","connectionTimeoutRef","statsIntervalRef","getStoredUserData","userData","localStorage","getItem","token","user","JSON","parse","userId","id","_id","userEmail","email","userName","name","registeredId","registered_id","userRole","role","err","console","warn","fetchCompleteServerData","serverId","ipAddress","server","getServerById","getServerByIp","log","isAvailable","isServerAvailable","message","connectToSSHServer","socketInstance","data","term","write","logServerConnection","action","host","username","sessionId","sshConnectionData","password","port","session","connectionTime","serverName","dashboardUrl","ip","os","location","max_connections","browser","userAgent","browserInfo","navigator","windowId","window","referrer","document","viewport","width","innerWidth","height","innerHeight","emit","type","target","timestamp","Date","toISOString","connectionDetails","current","clearTimeout","setTimeout","prev","cleanupConnection","duration","Math","floor","stats","clearInterval","dispose","removeAllListeners","disconnect","isDisposed","Object","keys","sessionStorage","forEach","key","startsWith","removeItem","setupSocketEventListeners","socket","sshConnectedHandled","on","outputData","length","info","toLocaleString","repeat","connectionInfo","setInterval","errorData","errorMsg","connectionCount","getServerConnectionCount","reason","connected","connect","setupTerminalInputHandlers","onData","input","includes","onKey","domEvent","ctrlKey","getTerminalTheme","themeName","themes","dark","background","foreground","cursor","selection","black","red","green","yellow","blue","magenta","cyan","white","light","matrix","initializeTerminal","_globalSocketInstance","_globalSocketInstance2","cursorBlink","theme","fontSize","fontFamily","fontWeight","fontWeightBold","lineHeight","letterSpacing","rows","cols","scrollback","convertEol","disableStdin","localEcho","allowProposedApi","bellStyle","loadAddon","open","fit","newSocket","query","timeout","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","transports","handleResize","element","fitError","clientWidth","clientHeight","resize","addEventListener","removeEventListener","parseConnectionData","rawData","storedUserData","validation","validateConnectionData","isValid","Error","errors","join","normalizedData","now","random","toString","substr","origin","initializeConnection","urlParams","URLSearchParams","search","sessionKey","get","sessionData","urlData","decodeURIComponent","stored","handleDisconnect","disconnectTime","disconnectReason","close","handleReconnect","clear","handleNewSession","newSessionData","toggleFullscreen","changeTheme","newTheme","options","documentElement","setAttribute","getStatusColor","getStatusText","getUserDisplayInfo","formatBytes","bytes","k","sizes","i","parseFloat","pow","toFixed","formatDuration","hours","minutes","seconds","cleanup","_globalSocketInstance3","_globalSocketInstance4","handleMessage","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","userInfo","style","backgroundColor","value","onChange","e","title","toLocaleTimeString","ref","status","version","description","created_at","toLocaleDateString","updated_at","_c","$RefreshReg$"],"sources":["C:/Users/Kavindu/Desktop/ssh-project-slt/frontend/src/pages/TerminalPage.js"],"sourcesContent":["// TerminalPageComplete.js - Full Terminal Page with Database Integration\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\nimport { FitAddon } from 'xterm-addon-fit';\r\nimport serverDataService from './serverDataService';\r\nimport './TerminalPage.css';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\";\r\n\r\n// Global singleton pattern - prevent multiple instances\r\nlet globalTerminalInstance = null;\r\nlet globalSocketInstance = null;\r\nlet globalIsInitialized = false;\r\nlet globalFitAddon = null;\r\nlet globalInputHandler = null;\r\nlet globalKeyHandler = null;\r\nlet globalEventListenersAttached = false;\r\n\r\nconst TerminalPage = () => {\r\n  // State management\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionData, setConnectionData] = useState(null);\r\n  const [serverData, setServerData] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [connectionStatus, setConnectionStatus] = useState(\"initializing\");\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [terminalTheme, setTerminalTheme] = useState(\"dark\");\r\n  const [showServerPanel, setShowServerPanel] = useState(false);\r\n  const [connectionStats, setConnectionStats] = useState({\r\n    startTime: null,\r\n    dataReceived: 0,\r\n    dataSent: 0,\r\n    commandCount: 0\r\n  });\r\n  \r\n  // Refs that don't cause re-renders\r\n  const terminalRef = useRef();\r\n  const terminalInstance = useRef();\r\n  const socketRef = useRef();\r\n  const isInitializedRef = useRef(false);\r\n  const connectionTimeoutRef = useRef(null);\r\n  const statsIntervalRef = useRef(null);\r\n\r\n  // Get stored user data from localStorage\r\n  const getStoredUserData = useCallback(() => {\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        return {\r\n          token: token || '',\r\n          userId: user.id || user._id || '',\r\n          userEmail: user.email || '',\r\n          userName: user.name || '',\r\n          registeredId: user.registered_id || '',\r\n          userRole: user.role || 'student'\r\n        };\r\n      }\r\n    } catch (err) {\r\n      console.warn(\"Could not retrieve stored user data:\", err);\r\n    }\r\n    return {};\r\n  }, []);\r\n\r\n  // Fetch complete server data from database\r\n  const fetchCompleteServerData = useCallback(async (serverId, ipAddress) => {\r\n    if (!serverId && !ipAddress) return null;\r\n    \r\n    try {\r\n      setError(\"\"); // Clear any previous errors\r\n      \r\n      let server = null;\r\n      \r\n      if (serverId) {\r\n        server = await serverDataService.getServerById(serverId);\r\n      } else if (ipAddress) {\r\n        server = await serverDataService.getServerByIp(ipAddress);\r\n      }\r\n      \r\n      if (server) {\r\n        console.log(\"✅ Complete server data fetched:\", server);\r\n        setServerData(server);\r\n        \r\n        // Check if server is available for connections\r\n        const isAvailable = await serverDataService.isServerAvailable(server._id || server.id);\r\n        if (!isAvailable) {\r\n          setError(\"Server is not available for new connections (maintenance mode or maximum connections reached)\");\r\n        }\r\n        \r\n        return server;\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Could not fetch complete server data:\", error);\r\n      setError(`Failed to fetch server details: ${error.message}`);\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  // Enhanced SSH connection with database logging\r\n  const connectToSSHServer = useCallback(async (socketInstance, data, term) => {\r\n    if (!socketInstance || !data || !term) {\r\n      console.error(\"Missing socket instance, connection data, or terminal\");\r\n      if (term) term.write(\"\\u001b[31m❌ Cannot connect: Missing connection data\\u001b[0m\\r\\n\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔗 Attempting SSH connection with enhanced data:\", data);\r\n    \r\n    // Log connection attempt\r\n    if (data.serverId) {\r\n      await serverDataService.logServerConnection(data.serverId, {\r\n        userId: data.userId,\r\n        userName: data.userName,\r\n        userEmail: data.userEmail,\r\n        action: 'connection_attempt',\r\n        host: data.host,\r\n        username: data.username,\r\n        sessionId: data.sessionId\r\n      });\r\n    }\r\n\r\n    const sshConnectionData = {\r\n      host: data.host,\r\n      username: data.username,\r\n      password: data.password,\r\n      port: data.port || 22,\r\n      \r\n      user: {\r\n        id: data.userId,\r\n        name: data.userName,\r\n        email: data.userEmail,\r\n        registered_id: data.registeredId,\r\n        role: data.userRole\r\n      },\r\n      \r\n      session: {\r\n        id: data.sessionId,\r\n        token: data.token,\r\n        connectionTime: data.connectionTime,\r\n        serverName: data.serverName,\r\n        dashboardUrl: data.dashboardUrl,\r\n        serverId: data.serverId\r\n      },\r\n      \r\n      server: serverData ? {\r\n        id: serverData._id || serverData.id,\r\n        name: serverData.name,\r\n        ip: serverData.ip,\r\n        port: serverData.port,\r\n        os: serverData.os,\r\n        location: serverData.location,\r\n        max_connections: serverData.max_connections\r\n      } : null,\r\n      \r\n      browser: {\r\n        userAgent: data.browserInfo || navigator.userAgent,\r\n        windowId: window.name,\r\n        referrer: document.referrer,\r\n        viewport: {\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        }\r\n      }\r\n    };\r\n\r\n    term.write(\"\\u001b[36m🔗 Connecting to SSH server...\\u001b[0m\\r\\n\");\r\n    term.write(`\\u001b[33m📡 Host:\\u001b[0m ${data.host}:${data.port || 22}\\r\\n`);\r\n    term.write(`\\u001b[33m👤 User:\\u001b[0m ${data.username}\\r\\n`);\r\n    if (serverData) {\r\n      term.write(`\\u001b[33m🖥️ Server:\\u001b[0m ${serverData.name}\\r\\n`);\r\n      term.write(`\\u001b[33m🌍 Location:\\u001b[0m ${serverData.location || 'Unknown'}\\r\\n`);\r\n      term.write(`\\u001b[33m💾 OS:\\u001b[0m ${serverData.os || 'Linux'}\\r\\n`);\r\n    }\r\n    term.write(\"\\u001b[35m🔐 Authenticating...\\u001b[0m\\r\\n\\r\\n\");\r\n\r\n    // Send enhanced connection request\r\n    socketInstance.emit(\"ssh-connect\", sshConnectionData);\r\n    \r\n    // Enhanced user activity tracking\r\n    socketInstance.emit(\"user-activity\", {\r\n      type: 'terminal_access',\r\n      userId: data.userId,\r\n      userName: data.userName,\r\n      userEmail: data.userEmail,\r\n      action: 'ssh_connect_attempt',\r\n      target: data.host,\r\n      timestamp: new Date().toISOString(),\r\n      sessionId: data.sessionId,\r\n      serverId: data.serverId,\r\n      serverName: serverData?.name || data.serverName,\r\n      browserInfo: navigator.userAgent,\r\n      connectionDetails: {\r\n        host: data.host,\r\n        port: data.port || 22,\r\n        username: data.username\r\n      }\r\n    });\r\n\r\n    // Set connection timeout\r\n    if (connectionTimeoutRef.current) {\r\n      clearTimeout(connectionTimeoutRef.current);\r\n    }\r\n\r\n    connectionTimeoutRef.current = setTimeout(() => {\r\n      term.write(\"\\u001b[33m⏱️ Connection is taking longer than expected...\\u001b[0m\\r\\n\");\r\n      term.write(\"\\u001b[36m💡 Check if your backend server is handling SSH connections properly\\u001b[0m\\r\\n\");\r\n      if (serverData?.max_connections) {\r\n        term.write(`\\u001b[36m📊 Server max connections: ${serverData.max_connections}\\u001b[0m\\r\\n`);\r\n      }\r\n      term.write(\"\\r\\n\");\r\n    }, 10000);\r\n\r\n    // Start connection stats tracking\r\n    setConnectionStats(prev => ({\r\n      ...prev,\r\n      startTime: new Date()\r\n    }));\r\n\r\n  }, [serverData]);\r\n\r\n  // Enhanced cleanup with database logging\r\n  const cleanupConnection = useCallback(async () => {\r\n    console.log(\"🧹 GLOBAL CLEANUP: Enhanced cleanup starting...\");\r\n    \r\n    // Log disconnection\r\n    if (connectionData?.serverId) {\r\n      try {\r\n        await serverDataService.logServerConnection(connectionData.serverId, {\r\n          userId: connectionData.userId,\r\n          userName: connectionData.userName,\r\n          action: 'connection_closed',\r\n          sessionId: connectionData.sessionId,\r\n          duration: connectionStats.startTime ? \r\n            Math.floor((new Date() - connectionStats.startTime) / 1000) : 0,\r\n          stats: connectionStats\r\n        });\r\n      } catch (error) {\r\n        console.warn(\"Failed to log disconnection:\", error);\r\n      }\r\n    }\r\n    \r\n    // Clear timers\r\n    if (connectionTimeoutRef.current) {\r\n      clearTimeout(connectionTimeoutRef.current);\r\n      connectionTimeoutRef.current = null;\r\n    }\r\n    \r\n    if (statsIntervalRef.current) {\r\n      clearInterval(statsIntervalRef.current);\r\n      statsIntervalRef.current = null;\r\n    }\r\n    \r\n    // Clean up global handlers\r\n    if (globalInputHandler) {\r\n      globalInputHandler.dispose();\r\n      globalInputHandler = null;\r\n    }\r\n    if (globalKeyHandler) {\r\n      globalKeyHandler.dispose();\r\n      globalKeyHandler = null;\r\n    }\r\n    \r\n    // Clean up socket\r\n    if (globalSocketInstance) {\r\n      globalSocketInstance.removeAllListeners();\r\n      globalSocketInstance.disconnect();\r\n      globalSocketInstance = null;\r\n    }\r\n    \r\n    // Clean up terminal\r\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\r\n      globalTerminalInstance.dispose();\r\n      globalTerminalInstance = null;\r\n    }\r\n    \r\n    // Reset global flags\r\n    globalIsInitialized = false;\r\n    globalFitAddon = null;\r\n    globalEventListenersAttached = false;\r\n    \r\n    // Clean up session storage\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('terminal_')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n    \r\n    console.log(\"✅ Enhanced cleanup complete\");\r\n  }, [connectionData, connectionStats]);\r\n\r\n  // Enhanced socket event listeners with stats tracking\r\n  const setupSocketEventListeners = useCallback((socket, term, data) => {\r\n    if (globalEventListenersAttached) {\r\n      console.log(\"🛑 Socket event listeners already attached globally, skipping...\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🎧 Setting up enhanced socket event listeners...\");\r\n    globalEventListenersAttached = true;\r\n\r\n    let sshConnectedHandled = false;\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"✅ GLOBAL SOCKET: Connected to terminal server\");\r\n      setIsConnected(true);\r\n      setConnectionStatus(\"connected\");\r\n      term.write(\"\\u001b[32m✅ Socket connected to \" + SERVER_URL + \"\\u001b[0m\\r\\n\");\r\n      term.write(\"\\u001b[36m🔗 Establishing SSH connection...\\u001b[0m\\r\\n\\r\\n\");\r\n      \r\n      connectToSSHServer(socket, data, term);\r\n    });\r\n\r\n    socket.on(\"ssh-output\", (outputData) => {\r\n      if (term && !term.isDisposed) {\r\n        term.write(outputData);\r\n        \r\n        // Track data received\r\n        setConnectionStats(prev => ({\r\n          ...prev,\r\n          dataReceived: prev.dataReceived + outputData.length\r\n        }));\r\n      }\r\n    });\r\n\r\n    socket.on(\"ssh-connected\", async (info) => {\r\n      if (sshConnectedHandled) {\r\n        console.log(\"⚠️ SSH connected event already handled globally, ignoring duplicate\");\r\n        return;\r\n      }\r\n      sshConnectedHandled = true;\r\n      \r\n      if (connectionTimeoutRef.current) {\r\n        clearTimeout(connectionTimeoutRef.current);\r\n        connectionTimeoutRef.current = null;\r\n      }\r\n      \r\n      console.log(\"🎉 GLOBAL SSH: Connection established successfully\");\r\n      setConnectionStatus(\"ssh-connected\");\r\n      setError(\"\");\r\n      \r\n      term.write(\"\\r\\n\\u001b[32m🎉 SSH CONNECTION ESTABLISHED! 🎉\\u001b[0m\\r\\n\");\r\n      term.write(`\\u001b[32m✅ Connected to:\\u001b[0m ${info.host || data.host}\\r\\n`);\r\n      term.write(`\\u001b[33m👤 User:\\u001b[0m ${data.userName || 'Unknown'}\\r\\n`);\r\n      term.write(`\\u001b[35m🆔 Student ID:\\u001b[0m ${data.registeredId || 'No ID'}\\r\\n`);\r\n      term.write(`\\u001b[36m⏰ Connected at:\\u001b[0m ${new Date().toLocaleString()}\\r\\n`);\r\n      \r\n      if (serverData) {\r\n        term.write(`\\u001b[34m🖥️ Server Name:\\u001b[0m ${serverData.name}\\r\\n`);\r\n        if (serverData.location) {\r\n          term.write(`\\u001b[34m🌍 Location:\\u001b[0m ${serverData.location}\\r\\n`);\r\n        }\r\n        if (serverData.os) {\r\n          term.write(`\\u001b[34m💾 OS:\\u001b[0m ${serverData.os}\\r\\n`);\r\n        }\r\n      }\r\n      \r\n      term.write(\"=\" .repeat(60) + \"\\r\\n\");\r\n      term.write(\"\\u001b[36m💡 You can now run commands like: pwd, ls, whoami, top\\u001b[0m\\r\\n\");\r\n      term.write(\"=\" .repeat(60) + \"\\r\\n\\r\\n\");\r\n      \r\n      // Log successful connection\r\n      if (data.serverId) {\r\n        try {\r\n          await serverDataService.logServerConnection(data.serverId, {\r\n            userId: data.userId,\r\n            userName: data.userName,\r\n            action: 'connection_established',\r\n            sessionId: data.sessionId,\r\n            connectionInfo: info\r\n          });\r\n        } catch (error) {\r\n          console.warn(\"Failed to log successful connection:\", error);\r\n        }\r\n      }\r\n      \r\n      // Start stats interval\r\n      if (statsIntervalRef.current) {\r\n        clearInterval(statsIntervalRef.current);\r\n      }\r\n      \r\n      statsIntervalRef.current = setInterval(() => {\r\n        setConnectionStats(prev => ({\r\n          ...prev,\r\n          commandCount: prev.commandCount + 1\r\n        }));\r\n      }, 60000); // Update stats every minute\r\n    });\r\n\r\n    socket.on(\"ssh-error\", async (errorData) => {\r\n      const errorMsg = errorData.message || errorData;\r\n      term.write(`\\r\\n\\u001b[31m❌ SSH Connection Error: ${errorMsg}\\u001b[0m\\r\\n`);\r\n      \r\n      if (serverData && serverData.max_connections) {\r\n        const connectionCount = await serverDataService.getServerConnectionCount(serverData._id || serverData.id);\r\n        term.write(`\\u001b[33m📊 Current connections: ${connectionCount}/${serverData.max_connections}\\u001b[0m\\r\\n`);\r\n      }\r\n      \r\n      term.write(\"\\r\\n\\u001b[33m🔄 Retrying connection in 3 seconds...\\u001b[0m\\r\\n\");\r\n      setConnectionStatus(\"error\");\r\n      setError(errorMsg);\r\n      \r\n      // Log connection error\r\n      if (data.serverId) {\r\n        try {\r\n          await serverDataService.logServerConnection(data.serverId, {\r\n            userId: data.userId,\r\n            userName: data.userName,\r\n            action: 'connection_error',\r\n            sessionId: data.sessionId,\r\n            error: errorMsg\r\n          });\r\n        } catch (error) {\r\n          console.warn(\"Failed to log connection error:\", error);\r\n        }\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        if (globalSocketInstance && data) {\r\n          connectToSSHServer(globalSocketInstance, data, term);\r\n        }\r\n      }, 3000);\r\n    });\r\n\r\n    socket.on(\"ssh-disconnected\", async () => {\r\n      term.write(\"\\r\\n\\u001b[33m🔌 SSH connection closed\\u001b[0m\\r\\n\");\r\n      setConnectionStatus(\"disconnected\");\r\n      setIsConnected(false);\r\n      \r\n      // Stop stats interval\r\n      if (statsIntervalRef.current) {\r\n        clearInterval(statsIntervalRef.current);\r\n        statsIntervalRef.current = null;\r\n      }\r\n      \r\n      // Log disconnection\r\n      if (data.serverId) {\r\n        try {\r\n          await serverDataService.logServerConnection(data.serverId, {\r\n            userId: data.userId,\r\n            userName: data.userName,\r\n            action: 'connection_disconnected',\r\n            sessionId: data.sessionId,\r\n            duration: connectionStats.startTime ? \r\n              Math.floor((new Date() - connectionStats.startTime) / 1000) : 0\r\n          });\r\n        } catch (error) {\r\n          console.warn(\"Failed to log disconnection:\", error);\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      setIsConnected(false);\r\n      setConnectionStatus(\"disconnected\");\r\n      term.write(`\\r\\n\\u001b[31m[Socket disconnected: ${reason}]\\u001b[0m\\r\\n`);\r\n      \r\n      if (reason !== 'io client disconnect') {\r\n        setTimeout(() => {\r\n          if (globalSocketInstance && !globalSocketInstance.connected) {\r\n            term.write(\"\\r\\n\\u001b[36m🔄 Attempting to reconnect...\\u001b[0m\\r\\n\");\r\n            globalSocketInstance.connect();\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n\r\n    socket.on(\"connect_error\", (err) => {\r\n      const errorMsg = `Connection error: ${err.message}`;\r\n      setError(errorMsg);\r\n      setConnectionStatus(\"error\");\r\n      term.write(`\\r\\n\\u001b[31m❌ ${errorMsg}\\u001b[0m\\r\\n`);\r\n      term.write(`\\r\\n\\u001b[36m💡 Make sure your backend server is running on ${SERVER_URL}\\u001b[0m\\r\\n`);\r\n    });\r\n  }, [connectToSSHServer, serverData, connectionStats]);\r\n\r\n  // Enhanced input handlers with command tracking\r\n  const setupTerminalInputHandlers = useCallback((term, socket) => {\r\n    if (globalInputHandler) {\r\n      globalInputHandler.dispose();\r\n      globalInputHandler = null;\r\n    }\r\n    if (globalKeyHandler) {\r\n      globalKeyHandler.dispose();\r\n      globalKeyHandler = null;\r\n    }\r\n\r\n    globalInputHandler = term.onData((input) => {\r\n      if (socket && socket.connected) {\r\n        socket.emit(\"ssh-input\", input);\r\n        \r\n        // Track data sent and commands\r\n        setConnectionStats(prev => ({\r\n          ...prev,\r\n          dataSent: prev.dataSent + input.length,\r\n          commandCount: input.includes('\\r') ? prev.commandCount + 1 : prev.commandCount\r\n        }));\r\n      } else {\r\n        term.write(\"\\r\\n\\u001b[31m❌ Not connected to server. Cannot send input.\\u001b[0m\\r\\n\");\r\n      }\r\n    });\r\n\r\n    globalKeyHandler = term.onKey(({ key, domEvent }) => {\r\n      if (domEvent.ctrlKey && domEvent.key === 'c') {\r\n        if (socket && socket.connected) {\r\n          socket.emit(\"ssh-input\", '\\x03');\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Get terminal theme configuration\r\n  const getTerminalTheme = (themeName) => {\r\n    const themes = {\r\n      dark: {\r\n        background: '#0d1117',\r\n        foreground: '#f0f6fc',\r\n        cursor: '#f0f6fc',\r\n        selection: '#264f78',\r\n        black: '#484f58',\r\n        red: '#ff7b72',\r\n        green: '#7ee787',\r\n        yellow: '#ffa657',\r\n        blue: '#79c0ff',\r\n        magenta: '#d2a8ff',\r\n        cyan: '#a5f3fc',\r\n        white: '#f0f6fc'\r\n      },\r\n      light: {\r\n        background: '#ffffff',\r\n        foreground: '#24292f',\r\n        cursor: '#24292f',\r\n        selection: '#0969da',\r\n        black: '#24292f',\r\n        red: '#cf222e',\r\n        green: '#116329',\r\n        yellow: '#4d2d00',\r\n        blue: '#0969da',\r\n        magenta: '#8250df',\r\n        cyan: '#1b7c83',\r\n        white: '#6e7781'\r\n      },\r\n      matrix: {\r\n        background: '#000000',\r\n        foreground: '#00ff41',\r\n        cursor: '#00ff41',\r\n        selection: '#00ff4150',\r\n        black: '#000000',\r\n        red: '#ff0000',\r\n        green: '#00ff41',\r\n        yellow: '#ffff00',\r\n        blue: '#0000ff',\r\n        magenta: '#ff00ff',\r\n        cyan: '#00ffff',\r\n        white: '#ffffff'\r\n      }\r\n    };\r\n    return themes[themeName] || themes.dark;\r\n  };\r\n\r\n  // Enhanced terminal initialization\r\n  const initializeTerminal = useCallback((data) => {\r\n    if (globalIsInitialized) {\r\n      if (globalTerminalInstance && terminalRef.current && !globalTerminalInstance.isDisposed) {\r\n        terminalInstance.current = globalTerminalInstance;\r\n        socketRef.current = globalSocketInstance;\r\n        setIsConnected(!!globalSocketInstance?.connected);\r\n        setConnectionStatus(globalSocketInstance?.connected ? \"ssh-connected\" : \"connected\");\r\n      }\r\n      return;\r\n    }\r\n    \r\n    globalIsInitialized = true;\r\n    isInitializedRef.current = true;\r\n    setConnectionStatus(\"connecting\");\r\n    \r\n    if (!globalFitAddon) {\r\n      globalFitAddon = new FitAddon();\r\n    }\r\n    \r\n    const term = new Terminal({\r\n      cursorBlink: true,\r\n      theme: getTerminalTheme(terminalTheme),\r\n      fontSize: 14,\r\n      fontFamily: '\"Cascadia Code\", \"Fira Code\", \"JetBrains Mono\", Consolas, Monaco, \"Courier New\", monospace',\r\n      fontWeight: 'normal',\r\n      fontWeightBold: 'bold',\r\n      lineHeight: 1.2,\r\n      letterSpacing: 0,\r\n      rows: 30,\r\n      cols: 120,\r\n      scrollback: 5000,\r\n      convertEol: true,\r\n      disableStdin: false,\r\n      localEcho: false,\r\n      allowProposedApi: true,\r\n      bellStyle: 'sound'\r\n    });\r\n\r\n    term.loadAddon(globalFitAddon);\r\n\r\n    if (terminalRef.current) {\r\n      term.open(terminalRef.current);\r\n      \r\n      setTimeout(() => {\r\n        if (globalFitAddon && !term.isDisposed) {\r\n          try {\r\n            globalFitAddon.fit();\r\n          } catch (err) {\r\n            console.warn(\"Initial fit error:\", err);\r\n          }\r\n        }\r\n      }, 100);\r\n      \r\n      globalTerminalInstance = term;\r\n      terminalInstance.current = term;\r\n      \r\n      term.write('\\u001b[32m🚀 TERMINAL INITIALIZED\\u001b[0m\\r\\n');\r\n      term.write(`\\u001b[36m📡 Connecting to ${SERVER_URL}...\\u001b[0m\\r\\n`);\r\n      if (serverData) {\r\n        term.write(`\\u001b[33m🖥️ Target Server: ${serverData.name} (${serverData.ip})\\u001b[0m\\r\\n`);\r\n      }\r\n      term.write('\\r\\n');\r\n    }\r\n    \r\n    if (globalSocketInstance) {\r\n      globalSocketInstance.removeAllListeners();\r\n      globalSocketInstance.disconnect();\r\n    }\r\n    \r\n    const newSocket = io(SERVER_URL, {\r\n      query: {\r\n        userId: data.userId || '',\r\n        userName: data.userName || '',\r\n        userRole: data.userRole || 'student',\r\n        serverId: data.serverId || ''\r\n      },\r\n      timeout: 10000,\r\n      forceNew: true,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      transports: ['websocket', 'polling']\r\n    });\r\n    \r\n    globalSocketInstance = newSocket;\r\n    socketRef.current = newSocket;\r\n\r\n    setupSocketEventListeners(newSocket, term, data);\r\n    setupTerminalInputHandlers(term, newSocket);\r\n\r\n    const handleResize = () => {\r\n      if (term && term.element && globalFitAddon && !term.isDisposed) {\r\n        try {\r\n          globalFitAddon.fit();\r\n        } catch (fitError) {\r\n          console.warn(\"Fit error:\", fitError);\r\n          if (terminalRef.current) {\r\n            const cols = Math.floor(terminalRef.current.clientWidth / 9);\r\n            const rows = Math.floor(terminalRef.current.clientHeight / 17);\r\n            term.resize(cols, rows);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      terminalInstance.current = null;\r\n      socketRef.current = null;\r\n    };\r\n  }, [setupSocketEventListeners, setupTerminalInputHandlers, terminalTheme, serverData]);\r\n\r\n  // Enhanced connection data parsing with validation\r\n  const parseConnectionData = useCallback((rawData) => {\r\n    console.log(\"🔍 Parsing connection data:\", rawData);\r\n    \r\n    const storedUserData = getStoredUserData();\r\n    const validation = serverDataService.validateConnectionData(rawData);\r\n    \r\n    if (!validation.isValid) {\r\n      throw new Error(`Invalid connection data: ${validation.errors.join(', ')}`);\r\n    }\r\n    \r\n    const normalizedData = {\r\n      host: rawData.host || rawData.ip || '',\r\n      username: rawData.username || '',\r\n      password: rawData.password || '',\r\n      port: rawData.port || 22,\r\n      serverName: rawData.serverName || rawData.name || rawData.host || 'Unknown Server',\r\n      \r\n      userId: rawData.userId || storedUserData.userId || '',\r\n      userName: rawData.userName || storedUserData.userName || '',\r\n      userEmail: rawData.userEmail || storedUserData.userEmail || '',\r\n      registeredId: rawData.registeredId || storedUserData.registeredId || '',\r\n      userRole: rawData.userRole || storedUserData.userRole || 'student',\r\n      \r\n      token: rawData.token || storedUserData.token || '',\r\n      sessionId: rawData.sessionId || `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      connectionTime: rawData.connectionTime || new Date().toISOString(),\r\n      \r\n      dashboardUrl: rawData.dashboardUrl || window.location.origin,\r\n      browserInfo: rawData.browserInfo || navigator.userAgent,\r\n      serverId: rawData.serverId || rawData.id || rawData._id || '',\r\n      \r\n      user: rawData.user || {\r\n        id: rawData.userId || storedUserData.userId,\r\n        name: rawData.userName || storedUserData.userName,\r\n        email: rawData.userEmail || storedUserData.userEmail,\r\n        registered_id: rawData.registeredId || storedUserData.registeredId,\r\n        role: rawData.userRole || storedUserData.userRole || 'student'\r\n      }\r\n    };\r\n\r\n    console.log(\"✅ Normalized and validated connection data:\", normalizedData);\r\n    return normalizedData;\r\n  }, [getStoredUserData]);\r\n\r\n  // Enhanced connection initialization\r\n  const initializeConnection = useCallback(async () => {\r\n    if (isInitializedRef.current) {\r\n      console.log(\"Connection already initialized, skipping...\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      let data = null;\r\n\r\n      // Method 1: SessionKey approach (most secure)\r\n      const sessionKey = urlParams.get('sessionKey');\r\n      if (sessionKey) {\r\n        const sessionData = sessionStorage.getItem(sessionKey);\r\n        if (sessionData) {\r\n          data = JSON.parse(sessionData);\r\n          sessionStorage.removeItem(sessionKey);\r\n        }\r\n      }\r\n\r\n      // Method 2: Direct URL data\r\n      if (!data) {\r\n        const urlData = urlParams.get('data') || urlParams.get('fallbackData');\r\n        if (urlData) {\r\n          data = JSON.parse(decodeURIComponent(urlData));\r\n        }\r\n      }\r\n\r\n      // Method 3: Individual URL parameters\r\n      if (!data) {\r\n        const host = urlParams.get('host');\r\n        const username = urlParams.get('username');\r\n        const password = urlParams.get('password');\r\n        const serverName = urlParams.get('serverName') || urlParams.get('name');\r\n        const token = urlParams.get('token');\r\n        const userId = urlParams.get('userId');\r\n        const serverId = urlParams.get('serverId');\r\n\r\n        if (host && username && password) {\r\n          data = {\r\n            host, username, password, serverName, token, userId, serverId,\r\n            ...getStoredUserData()\r\n          };\r\n        }\r\n      }\r\n\r\n      // Method 4: SessionStorage fallback\r\n      if (!data) {\r\n        const stored = sessionStorage.getItem('terminalConnection');\r\n        if (stored) {\r\n          data = JSON.parse(stored);\r\n        }\r\n      }\r\n\r\n      if (data) {\r\n        const normalizedData = parseConnectionData(data);\r\n        setConnectionData(normalizedData);\r\n        \r\n        // Fetch complete server data from database\r\n        await fetchCompleteServerData(normalizedData.serverId, normalizedData.host);\r\n      } else {\r\n        setError(\"No connection data provided. Please return to the dashboard and try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Error initializing connection:\", err);\r\n      setError(`Failed to initialize connection: ${err.message}`);\r\n    }\r\n  }, [getStoredUserData, parseConnectionData, fetchCompleteServerData]);\r\n\r\n  // Event handlers\r\n  const handleDisconnect = useCallback(async () => {\r\n    if (globalSocketInstance && connectionData) {\r\n      globalSocketInstance.emit(\"user-disconnect\", {\r\n        userId: connectionData.userId,\r\n        userName: connectionData.userName,\r\n        sessionId: connectionData.sessionId,\r\n        serverId: connectionData.serverId,\r\n        disconnectTime: new Date().toISOString(),\r\n        disconnectReason: 'user_initiated',\r\n        connectionStats: connectionStats\r\n      });\r\n      globalSocketInstance.disconnect();\r\n    }\r\n    \r\n    await cleanupConnection();\r\n    window.close();\r\n  }, [connectionData, cleanupConnection, connectionStats]);\r\n\r\n  const handleReconnect = useCallback(() => {\r\n    if (connectionData) {\r\n      setError(\"\");\r\n      setConnectionStatus(\"reconnecting\");\r\n      \r\n      if (globalInputHandler) {\r\n        globalInputHandler.dispose();\r\n        globalInputHandler = null;\r\n      }\r\n      if (globalKeyHandler) {\r\n        globalKeyHandler.dispose();\r\n        globalKeyHandler = null;\r\n      }\r\n      \r\n      globalIsInitialized = false;\r\n      globalEventListenersAttached = false;\r\n      isInitializedRef.current = false;\r\n      \r\n      if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\r\n        globalTerminalInstance.clear();\r\n        globalTerminalInstance.write(\"\\u001b[36m🔄 Reconnecting...\\u001b[0m\\r\\n\");\r\n      }\r\n      \r\n      if (globalSocketInstance) {\r\n        globalSocketInstance.removeAllListeners();\r\n        globalSocketInstance.disconnect();\r\n        globalSocketInstance = null;\r\n      }\r\n      \r\n      if (globalTerminalInstance) {\r\n        globalTerminalInstance.dispose();\r\n        globalTerminalInstance = null;\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        initializeTerminal(connectionData);\r\n      }, 1000);\r\n    }\r\n  }, [connectionData, initializeTerminal]);\r\n\r\n  const handleNewSession = useCallback(() => {\r\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\r\n      globalTerminalInstance.clear();\r\n    }\r\n    if (globalSocketInstance && connectionData) {\r\n      const newSessionData = {\r\n        ...connectionData,\r\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        connectionTime: new Date().toISOString()\r\n      };\r\n      setConnectionData(newSessionData);\r\n      setConnectionStats({\r\n        startTime: null,\r\n        dataReceived: 0,\r\n        dataSent: 0,\r\n        commandCount: 0\r\n      });\r\n      connectToSSHServer(globalSocketInstance, newSessionData, globalTerminalInstance);\r\n    }\r\n  }, [connectionData, connectToSSHServer]);\r\n\r\n  const toggleFullscreen = useCallback(() => {\r\n    setIsFullscreen(!isFullscreen);\r\n    setTimeout(() => {\r\n      if (globalFitAddon && globalTerminalInstance && !globalTerminalInstance.isDisposed) {\r\n        try {\r\n          globalFitAddon.fit();\r\n        } catch (err) {\r\n          console.warn(\"Fit error after fullscreen toggle:\", err);\r\n        }\r\n      }\r\n    }, 100);\r\n  }, [isFullscreen]);\r\n\r\n  const changeTheme = useCallback((newTheme) => {\r\n    setTerminalTheme(newTheme);\r\n    if (globalTerminalInstance && !globalTerminalInstance.isDisposed) {\r\n      globalTerminalInstance.options.theme = getTerminalTheme(newTheme);\r\n    }\r\n    \r\n    // Apply theme to root element\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n  }, []);\r\n\r\n  // Utility functions\r\n  const getStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case \"connected\":\r\n      case \"ssh-connected\":\r\n        return \"var(--success-color)\";\r\n      case \"connecting\":\r\n      case \"reconnecting\":\r\n        return \"var(--warning-color)\";\r\n      case \"error\":\r\n        return \"var(--error-color)\";\r\n      default:\r\n        return \"var(--muted-color)\";\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (connectionStatus) {\r\n      case \"initializing\": return \"Initializing...\";\r\n      case \"connecting\": return \"Connecting...\";\r\n      case \"connected\": return \"Socket Connected\";\r\n      case \"ssh-connected\": return \"SSH Connected\";\r\n      case \"reconnecting\": return \"Reconnecting...\";\r\n      case \"disconnected\": return \"Disconnected\";\r\n      case \"error\": return \"Connection Error\";\r\n      default: return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const getUserDisplayInfo = () => {\r\n    if (!connectionData) return { name: 'Unknown', id: 'N/A', email: 'N/A', role: 'student' };\r\n    \r\n    return {\r\n      name: connectionData.userName || 'Unknown',\r\n      id: connectionData.registeredId || 'N/A',\r\n      email: connectionData.userEmail || 'N/A',\r\n      role: connectionData.userRole || 'student'\r\n    };\r\n  };\r\n\r\n  const formatBytes = (bytes) => {\r\n    if (bytes === 0) return '0 B';\r\n    const k = 1024;\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const formatDuration = (startTime) => {\r\n    if (!startTime) return '0s';\r\n    const duration = Math.floor((new Date() - startTime) / 1000);\r\n    const hours = Math.floor(duration / 3600);\r\n    const minutes = Math.floor((duration % 3600) / 60);\r\n    const seconds = duration % 60;\r\n    \r\n    if (hours > 0) return `${hours}h ${minutes}m ${seconds}s`;\r\n    if (minutes > 0) return `${minutes}m ${seconds}s`;\r\n    return `${seconds}s`;\r\n  };\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    if (!isInitializedRef.current) {\r\n      initializeConnection();\r\n    }\r\n  }, [initializeConnection]);\r\n\r\n  useEffect(() => {\r\n    if (connectionData && !globalIsInitialized) {\r\n      const cleanup = initializeTerminal(connectionData);\r\n      return cleanup;\r\n    } else if (connectionData && globalIsInitialized) {\r\n      if (globalTerminalInstance && terminalRef.current && !globalTerminalInstance.isDisposed) {\r\n        try {\r\n          globalTerminalInstance.open(terminalRef.current);\r\n          terminalInstance.current = globalTerminalInstance;\r\n          socketRef.current = globalSocketInstance;\r\n          setIsConnected(!!globalSocketInstance?.connected);\r\n          setConnectionStatus(globalSocketInstance?.connected ? \"ssh-connected\" : \"connected\");\r\n        } catch (err) {\r\n          console.error(\"Error reconnecting to existing terminal:\", err);\r\n        }\r\n      }\r\n    }\r\n  }, [connectionData, initializeTerminal]);\r\n\r\n  useEffect(() => {\r\n    const handleMessage = (event) => {\r\n      if (event.data && event.data.type === 'TERMINAL_CONNECTION_DATA') {\r\n        if (!isInitializedRef.current) {\r\n          const normalizedData = parseConnectionData(event.data.data);\r\n          setConnectionData(normalizedData);\r\n          fetchCompleteServerData(normalizedData.serverId, normalizedData.host);\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('message', handleMessage);\r\n    return () => window.removeEventListener('message', handleMessage);\r\n  }, [parseConnectionData, fetchCompleteServerData]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanupConnection();\r\n    };\r\n  }, [cleanupConnection]);\r\n\r\n  // Apply theme on mount\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', terminalTheme);\r\n  }, [terminalTheme]);\r\n\r\n  // Error screen\r\n  if (error && !connectionData) {\r\n    return (\r\n      <div className=\"terminal-error-screen\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2 className=\"error-title\">Terminal Connection Error</h2>\r\n          <p className=\"error-message\">{error}</p>\r\n          <p className=\"error-subtitle\">Please return to the dashboard and try connecting again.</p>\r\n          <div className=\"error-actions\">\r\n            <button className=\"error-button\" onClick={() => window.close()}>\r\n              Close Window\r\n            </button>\r\n            <button className=\"loading-button\" onClick={initializeConnection}>\r\n              Retry Connection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Loading screen\r\n  if (!connectionData) {\r\n    return (\r\n      <div className=\"terminal-loading-screen\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-icon\">🔄</div>\r\n          <h2 className=\"loading-title\">Loading Terminal...</h2>\r\n          <p className=\"loading-message\">Initializing connection and fetching server data...</p>\r\n          <button className=\"loading-button\" onClick={initializeConnection}>\r\n            🔄 Retry Connection\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const userInfo = getUserDisplayInfo();\r\n\r\n  return (\r\n    <div className={`terminal-app ${isFullscreen ? 'fullscreen' : ''}`} data-theme={terminalTheme} data-status={connectionStatus}>\r\n      {/* Enhanced Header */}\r\n      <div className=\"terminal-header\">\r\n        <div className=\"header-left\">\r\n          <div className=\"server-info\">\r\n            <h3 className=\"server-name\">\r\n              🖥️ {serverData?.name || connectionData?.serverName || connectionData?.host || \"Terminal\"}\r\n            </h3>\r\n            <div className=\"status-indicator\" style={{ backgroundColor: getStatusColor() }}>\r\n              <div className=\"status-dot\"></div>\r\n              {getStatusText()}\r\n            </div>\r\n          </div>\r\n          <div className=\"user-info\">\r\n            👤 {userInfo.name} \r\n            {userInfo.id !== 'N/A' && ` (ID: ${userInfo.id})`}\r\n            {userInfo.email !== 'N/A' && ` | 📧 ${userInfo.email}`}\r\n            {connectionData && ` | 🔗 ${connectionData.username}@${connectionData.host}`}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"header-controls\">\r\n          <div className=\"connection-stats\">\r\n            <span>⏱️ {formatDuration(connectionStats.startTime)}</span>\r\n            <span>📊 {connectionStats.commandCount} cmds</span>\r\n          </div>\r\n          \r\n          <div className=\"theme-selector\">\r\n            <select \r\n              value={terminalTheme} \r\n              onChange={(e) => changeTheme(e.target.value)}\r\n              className=\"theme-select\"\r\n            >\r\n              <option value=\"dark\">Dark</option>\r\n              <option value=\"light\">Light</option>\r\n              <option value=\"matrix\">Matrix</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <button \r\n            className=\"control-button info-btn\" \r\n            onClick={() => setShowServerPanel(!showServerPanel)}\r\n            title=\"Server Information\"\r\n          >\r\n            📊\r\n          </button>\r\n          \r\n          <button \r\n            className=\"control-button fullscreen-btn\" \r\n            onClick={toggleFullscreen}\r\n            title={isFullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\"}\r\n          >\r\n            {isFullscreen ? \"🗗\" : \"🗖\"}\r\n          </button>\r\n\r\n          {(connectionStatus === \"error\" || connectionStatus === \"disconnected\") && (\r\n            <button className=\"control-button reconnect-btn\" onClick={handleReconnect}>\r\n              🔄 Reconnect\r\n            </button>\r\n          )}\r\n          \r\n          <button className=\"control-button new-session-btn\" onClick={handleNewSession}>\r\n            🆕 New Session\r\n          </button>\r\n          \r\n          <button className=\"control-button disconnect-btn\" onClick={handleDisconnect}>\r\n            ❌ Disconnect\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced Connection Info Bar */}\r\n      <div className=\"connection-info-bar\">\r\n        <div className=\"connection-details\">\r\n          <span>🌐 {connectionData.host}:{connectionData.port}</span>\r\n          <span>👥 {userInfo.role}</span>\r\n          <span>🔑 {connectionData.sessionId?.substr(-8) || 'N/A'}</span>\r\n          {connectionData.serverId && <span>🆔 {connectionData.serverId.substr(-8)}</span>}\r\n          {serverData && (\r\n            <>\r\n              {serverData.location && <span>📍 {serverData.location}</span>}\r\n              {serverData.os && <span>💾 {serverData.os}</span>}\r\n              {serverData.max_connections && <span>👥 Max: {serverData.max_connections}</span>}\r\n            </>\r\n          )}\r\n          <span>📤 {formatBytes(connectionStats.dataSent)}</span>\r\n          <span>📥 {formatBytes(connectionStats.dataReceived)}</span>\r\n        </div>\r\n        <div className=\"connection-time\">\r\n          Connected: {connectionData.connectionTime ? new Date(connectionData.connectionTime).toLocaleTimeString() : 'N/A'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Terminal Container */}\r\n      <div className=\"terminal-container\">\r\n        <div \r\n          ref={terminalRef} \r\n          className=\"terminal-content\"\r\n        />\r\n      </div>\r\n\r\n      {/* Enhanced Status Footer */}\r\n      <div className=\"terminal-footer\">\r\n        <div className=\"footer-left\">\r\n          {error ? (\r\n            <span className=\"footer-error\">❌ Error: {error}</span>\r\n          ) : (\r\n            <span className=\"footer-info\">\r\n              Terminal ready | Ctrl+C to interrupt | Type 'exit' to close | Theme: {terminalTheme}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"footer-right\">\r\n          <span>User: {userInfo.name}</span>\r\n          {serverData?.name && <span> | Server: {serverData.name}</span>}\r\n          {serverData?.status && <span> | Status: {serverData.status}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced Server Details Panel */}\r\n      {showServerPanel && serverData && (\r\n        <div className=\"server-details-panel slide-in\">\r\n          <div className=\"panel-header\">\r\n            <h4>📊 Server Information</h4>\r\n            <button className=\"panel-close\" onClick={() => setShowServerPanel(false)}>×</button>\r\n          </div>\r\n          <div className=\"panel-content\">\r\n            <div className=\"detail-grid\">\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Name:</span>\r\n                <span className=\"detail-value\">{serverData.name}</span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">IP Address:</span>\r\n                <span className=\"detail-value\">{serverData.ip}</span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Port:</span>\r\n                <span className=\"detail-value\">{serverData.port || 22}</span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Status:</span>\r\n                <span className={`detail-value status-${serverData.status}`}>\r\n                  {serverData.status || 'active'}\r\n                </span>\r\n              </div>\r\n              {serverData.os && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Operating System:</span>\r\n                  <span className=\"detail-value\">{serverData.os}</span>\r\n                </div>\r\n              )}\r\n              {serverData.location && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Location:</span>\r\n                  <span className=\"detail-value\">{serverData.location}</span>\r\n                </div>\r\n              )}\r\n              {serverData.max_connections && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Max Connections:</span>\r\n                  <span className=\"detail-value\">{serverData.max_connections}</span>\r\n                </div>\r\n              )}\r\n              {serverData.version && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Version:</span>\r\n                  <span className=\"detail-value\">{serverData.version}</span>\r\n                </div>\r\n              )}\r\n              {serverData.description && (\r\n                <div className=\"detail-item full-width\">\r\n                  <span className=\"detail-label\">Description:</span>\r\n                  <span className=\"detail-value\">{serverData.description}</span>\r\n                </div>\r\n              )}\r\n              {serverData.created_at && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Created:</span>\r\n                  <span className=\"detail-value\">\r\n                    {new Date(serverData.created_at).toLocaleDateString()}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {serverData.updated_at && (\r\n                <div className=\"detail-item\">\r\n                  <span className=\"detail-label\">Last Updated:</span>\r\n                  <span className=\"detail-value\">\r\n                    {new Date(serverData.updated_at).toLocaleDateString()}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Connection Statistics */}\r\n            <div className=\"stats-section\">\r\n              <h5>Connection Statistics</h5>\r\n              <div className=\"stats-grid\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Session Duration:</span>\r\n                  <span className=\"stat-value\">{formatDuration(connectionStats.startTime)}</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Commands Sent:</span>\r\n                  <span className=\"stat-value\">{connectionStats.commandCount}</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Data Sent:</span>\r\n                  <span className=\"stat-value\">{formatBytes(connectionStats.dataSent)}</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Data Received:</span>\r\n                  <span className=\"stat-value\">{formatBytes(connectionStats.dataReceived)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TerminalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}